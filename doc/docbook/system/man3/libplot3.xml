<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='libplot33'>
<refmeta>
    <refentrytitle>LIBPLOT3
</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='source'>BRL-CAD</refmiscinfo>
<refmiscinfo class='manual'>BRL-CAD</refmiscinfo>
</refmeta>

<refnamediv>
<refname>libplot3</refname>
<refpurpose>graphics interface subroutines</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<funcsynopsis>

<funcprototype>
<funcdef>void <function>pl_3box</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>z0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
    <paramdef>int <parameter>z1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_3cont</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
    <paramdef>int <parameter>z</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_3line</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>z0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
    <paramdef>int <parameter>z1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_3move</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
    <paramdef>int <parameter>z</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_3point</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
    <paramdef>int <parameter>z</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_3space</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>z0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
    <paramdef>int <parameter>z1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_arc</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>xc</parameter></paramdef>
    <paramdef>int <parameter>yc</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_box</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef><function>pl_circle</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
    <paramdef>int <parameter>r</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_color</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>r</parameter></paramdef>
    <paramdef>int <parameter>g</parameter></paramdef>
    <paramdef>int <parameter>b</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_cont</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_erase</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_label</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>const char *<parameter>s</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_line</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_linmod</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>const char *<parameter>s</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_move</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_point</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x</parameter></paramdef>
    <paramdef>int <parameter>y</parameter></paramdef>
</funcprototype>

<funcprototype>
<funcdef>void <function>pl_space</function></funcdef>
    <paramdef>FILE *<parameter>fp</parameter></paramdef>
    <paramdef>int <parameter>x0</parameter></paramdef>
    <paramdef>int <parameter>y0</parameter></paramdef>
    <paramdef>int <parameter>x1</parameter></paramdef>
    <paramdef>int <parameter>y1</parameter></paramdef>
</funcprototype>

</funcsynopsis>

</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>These subroutines
generate
graphic output commands for processing
with the
<emphasis remap='B'>plot(1)</emphasis>
plotting filters.
They are slightly more general than those in
<emphasis remap='B'>libplot</emphasis>
as these take a file pointer.   They also include
the BRL 3-D extensions to the plot intermediate code.</para>

<para><emphasis remap='I'>Pl_space</emphasis>
or
<emphasis remap='I'>pl_3space</emphasis>
must be used before any of the graphic primitives to declare the
amount of space necessary.
See
<emphasis remap='I'>plot3(5)</emphasis>.</para>

<para><emphasis remap='I'>Pl_box</emphasis>
or
<emphasis remap='I'>pl_3box</emphasis>
draws a box between the two given opposite points.
The ''pen'' will be left at the second point.</para>

<para><emphasis remap='I'>Pl_circle</emphasis>
draws a circle of radius
<emphasis remap='I'>r</emphasis>
with center at the point
(<emphasis remap='I'>x</emphasis>,
<varname role='parameter'>y</varname>).
Note that
<emphasis remap='I'>circle</emphasis>
and
<emphasis remap='I'>arc</emphasis>
cannot be transformed in three space if one is using a
filter to do that.</para>

<para><emphasis remap='I'>Pl_arc</emphasis>
draws an arc of a circle with center at the point
(<emphasis remap='I'>x</emphasis>,
<varname role='parameter'>y</varname>)
between the points
(<emphasis remap='I'>x0</emphasis>,
<emphasis remap='I'>y0</emphasis>)
and
(<emphasis remap='I'>x1</emphasis>,
<varname role='parameter'>y1</varname>).</para>

<para>String arguments to
<emphasis remap='I'>pl_label</emphasis>
and
<emphasis remap='I'>pl_linmod</emphasis>
are terminated by nulls and do not contain new-lines.</para>

<para>There are also 2-D and 3_D double-precision versions, with arguments
identical to their counterparts above.  The naming conventions are to
change the prefix to "pd"; examples are thus
<emphasis remap='I'>pd_point</emphasis>
and
<emphasis remap='I'>pd_3point.</emphasis>
Vector versions for 3_D (also double-precision) are prefixed "pdv", as in
<emphasis remap='I'>pdv_3point.</emphasis></para>

<para>See
<emphasis remap='I'>plot3(5)</emphasis>
and
<emphasis remap='I'>plot(5)</emphasis>
for a description
of the effect of the remaining functions.</para>

</refsect1>

<refsect1 xml:id='files'><title>FILES</title>
<para>/usr/brlcad/lib/libplot3<literal>.</literal>a	produces output for
<citerefentry><refentrytitle>plot</refentrytitle><manvolnum>1G</manvolnum></citerefentry>
filters</para>
<!-- .br -->
</refsect1>

<refsect1 xml:id='warnings'><title>WARNINGS</title>
<para>In order to compile a program containing these functions
in
<emphasis remap='I'>file.c</emphasis>
it is necessary to use
``cc
<emphasis remap='I'>file.c</emphasis>
-lplot3''.</para>

<para><emphasis remap='I'>Color</emphasis>
specification and
three-dimensional primitives
are BRL extensions to the "unix plot" language
that are not generally found on other systems.</para>
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>plot</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>pl-fb</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
<citerefentry><refentrytitle>plot3</refentrytitle><manvolnum>5</manvolnum></citerefentry>, <citerefentry><refentrytitle>plot</refentrytitle><manvolnum>5</manvolnum></citerefentry></para>

</refsect1>

<refsect1 xml:id='author'><title>AUTHOR</title>
<para>BRL-CAD Team</para>

</refsect1>

<refsect1 xml:id='copyright'><title>COPYRIGHT</title>
<para>This software is Copyright (c) 1989-2020 by the United States
Government as represented by U.S. Army Research Laboratory.</para>
</refsect1>

<refsect1 xml:id='bug_reports'><title>BUG REPORTS</title>
<para>Reports of bugs or problems should be submitted via electronic
mail to <email>devs@brlcad.org</email></para>
</refsect1>
</refentry>

