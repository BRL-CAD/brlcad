<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- lifted from troff+man by doclifter -->
<refentry xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en' xml:id='anim_sort1'>
<refmeta>
<refentrytitle>ANIM_SORT</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='source'>BRL-CAD</refmiscinfo>
<refmiscinfo class='manual'>BRL-CAD</refmiscinfo>
</refmeta>

<refnamediv>
<refname>anim_sort</refname>
<refpurpose>combine concatenated animation scripts into one script</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv xml:id='synopsis'>
<cmdsynopsis>
  <command>anim_sort</command>
    <arg choice='opt'>-ic </arg>
    <arg choice='plain'><replaceable>&lt;</replaceable></arg>
    <arg choice='plain'><replaceable>mixed.script</replaceable></arg>
    <arg choice='plain'><replaceable>&gt;</replaceable></arg>
    <arg choice='plain'><replaceable>ordered.script</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>


<refsect1 xml:id='description'><title>DESCRIPTION</title>
<para>Note:
<command>anim_sort</command>
has been preempted in release 5.0 by
<emphasis remap='I'>scriptsort</emphasis>,
which sorts scripts much faster.</para>

<para><emphasis remap='I'>Anim_sort</emphasis>
allows the user to combine several animation scripts
into a single script suitable for input to
<emphasis remap='I'>rt</emphasis>.
A convenient way to
prepare a complicated animation script is to develop each part
separately and then use
<command>anim_sort</command>
to combine the various parts. For
example, suppose that
<emphasis remap='B'>view.script</emphasis>
is an animation script controlling the
movement of the virtual camera and the lighting,
<emphasis remap='B'>mill.script</emphasis>
rotates
the blades of a windmill, and
<emphasis remap='B'>quixote.script</emphasis>
controls the movement of a
knight. These scripts should first be concatenated together:</para>

<literallayout remap='.nf'>
cat view.script mill.script quixote.script &gt; mixed.script
</literallayout> <!-- .fi -->

<para>Calling
<command>anim_sort</command>
with
<emphasis remap='B'>mixed.script</emphasis>
on standard input would
reorder the commands in
<emphasis remap='B'>mixed.script</emphasis>
to make a viable script on standard
output.</para>

<para>Each of the input files to be concatenated is expected to be a
viable
<emphasis remap='I'>rt</emphasis>
animation script, containing a series of frames of the
following form:</para>

<literallayout remap='.nf'>
start framenumber;
any number of semi-colon terminated commands for rt;
end;
any number of post-raytracing commands
</literallayout> <!-- .fi -->

<para><command>anim_sort</command>
reads the framenumber of the first start command, and uses
this to as the first frame number of the output file. The commands of
all frames in
<emphasis remap='B'>mixed.script</emphasis>
with that framenumber are combined in the
output frame. The post-raytracing commands following all frames with that
framenumber are placed after the
<emphasis remap='B'>end;</emphasis>
command of the output frame. This process is continued for each
successive integer,
until anim_sort reaches a framenumber which is not included in any of
the original scripts.</para>

<para>For example, if
<emphasis remap='B'>view.script</emphasis>
contained frames numbered from 5 to
20,
<emphasis remap='B'>mill.script</emphasis>
contained frames from 0 to 10, and
<emphasis remap='B'>quixote.script</emphasis>
contained frames numbered from 15 to 25, the output script would start
at frame 5 (since
<emphasis remap='B'>view.script</emphasis>
comes first in
<emphasis remap='B'>mixed.script</emphasis>
) and end with
frame 25 (since frames 5 through 25 can be found somewhere in
<emphasis remap='B'>mixed.script</emphasis>
). If the user wanted to include frames 0 through 4, which
are found only in
<emphasis remap='B'>mill.script</emphasis>
, then
<emphasis remap='B'>mill.script</emphasis>
should be concatenated
onto the beginning of
<emphasis remap='B'>mixed.script</emphasis>
instead of the middle. In the
majority of animation situations, all of the input scripts would have
identical frame numbers anyway.</para>

<para>The first input script may also contain some lines preceding
the first start command, which are copied to the beginning of the output
script. This is useful for commands such as 'viewsize', which are often
specified before the sequence of animations begins.</para>

</refsect1>

<refsect1 xml:id='options'><title>OPTIONS</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><option>-i</option></term>
  <listitem>
<para>Incremental mode. The frames of the output script are printed in a scrambled
order which incrementally increases the time resolution of the animation.
For example, the frames of an eight-frame script would be printed in the
order: 0 4 2 6 1 3 5 7.</para>

  </listitem>
  </varlistentry>
  <varlistentry>
  <term><option>-c</option></term>
  <listitem>
<para>For most animation purposes, it is desirable to have a
<emphasis remap='B'>clean</emphasis>
command immediately following the
<emphasis remap='B'>start</emphasis>
command of each frame. The
default behavior of
<command>anim_sort</command>
is to include one
<emphasis remap='B'>clean</emphasis>
command following the
<emphasis remap='B'>start</emphasis>
command of each frame.
<emphasis remap='B'>clean</emphasis>
commands from the input files are ignored. If the
<option>-c</option>
flag is activated, then no clean
commands are printed.</para>
  </listitem>
  </varlistentry>
</variablelist>
</refsect1>

<refsect1 xml:id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>rt</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>tabsub</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>anim_script</refentrytitle><manvolnum>1</manvolnum></citerefentry></para>
</refsect1>

<refsect1 xml:id='author'><title>AUTHOR</title>
<para>Carl J. Nuzman</para>
</refsect1>

<refsect1 xml:id='copyright'><title>COPYRIGHT</title>
<para>This software is Copyright (c) 1994-2014 by the United States
Government as represented by U.S. Army Research Laboratory.</para>
</refsect1>

<refsect1 xml:id='bug_reports'><title>BUG REPORTS</title>
<para>Reports of bugs or problems should be submitted via electronic
mail to &lt;devs@brlcad.org&gt;.</para>
</refsect1>
</refentry>

