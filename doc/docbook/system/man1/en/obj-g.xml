<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "../../../resources/standard/dtd/docbookx.dtd">

<!-- Copyright (c) 2010-2011 United States Government as represented by      -->
<!-- the U.S. Army Research Laboratory.                                 -->
<!--                                                                    -->
<!-- Redistribution and use in source (Docbook format) and 'compiled'   -->
<!-- forms (PDF, PostScript, HTML, RTF, etc), with or without           -->
<!-- modification, are permitted provided that the following conditions -->
<!-- are met:                                                           -->
<!--                                                                    -->
<!-- 1. Redistributions of source code (Docbook format) must retain the -->
<!-- above copyright notice, this list of conditions and the following  -->
<!-- disclaimer.                                                        -->
<!--                                                                    -->
<!-- 2. Redistributions in compiled form (transformed to other DTDs,    -->
<!-- converted to PDF, PostScript, HTML, RTF, and other formats) must   -->
<!-- reproduce the above copyright notice, this list of conditions and  -->
<!-- the following disclaimer in the documentation and/or other         -->
<!-- materials provided with the distribution.                          -->
<!--                                                                    -->
<!-- 3. The name of the author may not be used to endorse or promote    -->
<!-- products derived from this documentation without specific prior    -->
<!-- written permission.                                                -->
<!--                                                                    -->
<!-- THIS DOCUMENTATION IS PROVIDED BY THE AUTHOR AS IS'' AND ANY       -->
<!-- EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE  -->
<!-- IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR -->
<!-- PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR -->
<!-- ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           -->
<!-- CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  -->
<!-- OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR -->
<!-- BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF         -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          -->
<!-- (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  -->
<!-- USE OF THIS DOCUMENTATION, EVEN IF ADVISED OF THE POSSIBILITY OF   -->
<!-- SUCH DAMAGE.                                                       -->

<refentry id='objg1'>

<refmeta>
  <refentrytitle>OBJ-G</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo class='source'>BRL-CAD</refmiscinfo>
  <refmiscinfo class='manual'>BRL-CAD User Commands</refmiscinfo>
</refmeta>

<refnamediv id='objg_name'>
  <refname>obj-g</refname>
  <refpurpose>
    Convert a Wavefront Object (obj) file to a BRL-CAD .g database.
  </refpurpose>
</refnamediv>

<!-- body begins here -->
<refsynopsisdiv id='objg_synopsis'>
  <cmdsynopsis>
    <command>obj-g</command>    
    <arg choice='plain'>-u <replaceable>units_str</replaceable></arg>
    <arg choice='plain'>-o <replaceable>open_bot_type</replaceable></arg>
    <arg choice='opt'>-h <replaceable>plate_thickness</replaceable></arg>
    <arg choice='opt'>-c</arg>
    <arg choice='opt'>-i</arg>
    <arg choice='opt'>-p</arg>
    <arg choice='opt'>-d</arg>
    <arg choice='opt' rep='repeat'>-v</arg>
    <arg choice='opt'>-g <replaceable>grouping_option</replaceable></arg>
    <arg choice='opt'>-m <replaceable>mode_option</replaceable></arg>
    <arg choice='opt'>-t <replaceable>distance_tolerance</replaceable></arg>
    <arg choice='opt'>-x <replaceable>rt_debug_flag</replaceable></arg>
    <arg choice='opt'>-X <replaceable>NMG_debug_flag</replaceable></arg>
    <arg choice='plain'><replaceable>obj_filename</replaceable></arg>
    <arg choice='plain'><replaceable>BRL-CAD_g_filename</replaceable></arg>
  </cmdsynopsis>
</refsynopsisdiv>

<refsect1 id='objg_description'>
  <title>DESCRIPTION</title>
  <para>
    <command>obj-g</command> converts a Wavefront Object file to BRL-CAD's .g format.
  </para>
  <para>
   Only face elements are supported. Materials and textures associated
   with face elements are unsupported. Faces associated with materials
   and/or textures will convert but material properties and textures
   are ignored. Face groupings convert to BRL-CAD primitives. Any
   hierarchical structure (i.e. assembly structure) defined in the obj
   file is not maintained in the conversion. If a face is a member of
   more than one 'group' grouping, a copy of the face will exist in
   each group in the resulting model. Primitives are named based on
   the grouping names and have appended to each name a string which
   guarantees uniqueness. This unique string includes the obj file
   grouping index number, face type number {1-4}, internal conversion
   mode {b='native-bot'|n='nmg'|v='bot-via-nmg'} and surface closure
   status {o='open'|c='closed'|u='untested'}. Characters in the
   original grouping name which may cause problems are replaced with
   the underscore character.   
  </para>
</refsect1>

<refsect1 id='objg_options'>
  <title>OPTIONS:</title>
  <variablelist remap='TP'>

    <varlistentry>
      <term><option>-u <replaceable>units_str</replaceable></option></term>
      <listitem>
	<para>
         Units of obj file where units_str can be any valid BRL-CAD
         unit such as one of the following {m|cm|mm|ft|in} or specify
         a conversion factor from obj file units to mm.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-o <replaceable>open_bot_type</replaceable></option></term>
      <listitem>
	<para>
         Type of bot to create when the primitive is not a closed
         volume. open_bot_type can be {s|p|n} where ...
         s = surface bot, p = plate bot, n = plate-nocos bot.
         Generally use 'surface bot' if open surface thickness is
         irrelevant or the purpose of the resulting model is strictly
         visualization. Use 'plate bot' or 'plate-nocos bot' when open
         surfaces must have a defined thickness. Note: An incorrect
         plate thickness can create geometry overlaps. Use the '-h' 
         option to define plate thickness.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-h <replaceable>plate_thickness</replaceable></option></term>
      <listitem>
	<para>
         Plate thickness in mm units of plate or plate-nocos bots
         created when the bot is not a closed volume. This option is
         ignored if the open_bot_type is 'surface bot'.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-c</option></term>
      <listitem>
	<para>
         Continue processing on nmg-bomb. If this option is set and an
         nmg-bomb occurs (i.e. fatal error during processing nmg or
         bot-via-nmg) conversion will fall-back to outputing the
         grouping to 'native-bot' and then continue processing the
         next grouping. If this option is not set and an nmg-bomb
         occurs then all processing will stop and the converter will
         exit.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-i</option></term>
      <listitem>
	<para>
         Ignore normals defined in the obj file when the conversion
         mode is 'native-bots'. This option has no effect when the
         conversion mode is 'nmg' or 'bot-via-nmg' since in these
         modes provided normals are always ignored.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-p</option></term>
      <listitem>
	<para>
         Plot open edges when creating bots which are not a closed
         volume. A plot/overlay (.pl) file will be created with the
         same name as the bot primitive and be placed in the current
         directory. If a plot file already exists, it will be
         overwritten. Closed edges are closed but open edges are not
         necessarily open. This is due to limitations of the
         algorithm for identifying open edges.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-d</option></term>
      <listitem>
	<para>
         Output debug information to stderr stream. An extremely large
         amount of information will be output. It is strongly
         suggested strerr be piped to a file.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-v</option></term>
      <listitem>
	<para>
         Output verbose user information to stderr stream. There are
         different levels of verbose output where higher levels
         increase the amount of output information. Each occurrence of
         this option in the parameter list increases the level. A
         large amount of information will be output so piping stderr
         to a file is highly recommended. Verbose messages add warning
         and detailed conversion status messages to the default status
         and error messages. Verbose must be enabled for warning
         messages to be reported.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-g <replaceable>grouping_option</replaceable></option></term>
      <listitem>
	<para>
         Choose which face grouping, as defined in the obj file, to
         use to create the BRL-CAD primitives. The grouping_option may
         be one of {g|o|m|t|n} where ... g = group (default),
         o = object, m = material, t = texture, n = none. Choose a
         grouping option which will produce the appropriate primitives
         for the intended use of the resulting model. Typically not
         all groupings exist in every obj file. Do not choose 'none'
         as the grouping option unless you have a specific need for no
         grouping. Choosing 'none' for a large conversion will
         significantly increase the time and system memory required
         for a conversion to complete. Choosing a grouping which does
         not exist in the obj file has the same effect as choosing
         'none'. If you are unsure of which grouping to choose,
         perform some trial conversions in the 'native-bot' conversion
         mode using each of the grouping options. I may also be
         helpful to enable level two verbose messages and pipe stderr
         to a log file. At the beginning of the log file will be a
         section called 'OBJ FILE CONTENTS' which lists how many and
         the names of the groupings in the obj file. Note: It is
         possible for a single grouping to produce up to four
         primitives due to the four possible face types that can exist
         in an obj file. The values of the index numbers appended to
         the end of the primitive names will give an indication if
         this has occurred.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-m <replaceable>mode_option</replaceable></option></term>
      <listitem>
	<para>
         Choose the conversion mode. The mode_option may be one of
         {b|n|v} where ... b = bot 'native-bot', n = nmg,
         v = bot-via-nmg (default). The 'bot-via-nmg' mode is the best
         option for creating solids (i.e. volume-mode-bots). The
         'native-bot' mode is best for a comparatively quick
         conversion where creating solids is not the highest priority
         and the faces provided in the obj file are known to be simple
         and convex. The 'native-bot' mode will attempt to identify
         surface closure (i.e. solids) but is not as robust as
         'bot-via-nmg'. The 'native-bot' mode is the only choice if it
         is desired to use normals from the obj file such as in cases
         where the normals are smoothing normals.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-t <replaceable>distance_tolerance</replaceable></option></term>
      <listitem>
	<para>
         Maximum distance, in mm units, where two vertices are
         considered the same. The default is 0.0005mm which matches
         the raytracer default distance tolerance. Do not change this
         value unless you also change the raytracer distance
         tolerance.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-x <replaceable>rt_debug_flag</replaceable></option></term>
      <listitem>
	<para>
         Specifies debug bits (see raytrace.h)
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option>-X <replaceable>NMG_debug_flag</replaceable></option></term>
      <listitem>
	<para>
         Specifies debug bits for NMG's (see nmg.h)
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option><replaceable>obj_filename</replaceable></option></term>
      <listitem>
	<para>
         The path and file name of the input WaveFront Object file.
	</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><option><replaceable>BRL-CAD_g_filename</replaceable></option></term>
      <listitem>
	<para>
         The path and file name of the output BRL-CAD database file.
         If this file already exists, it will be overwritten.
	</para>
      </listitem>
    </varlistentry>

  </variablelist>
</refsect1>

<refsect1 id='objg_examples'>
  <title>EXAMPLE</title>
  <para>
    The following will convert the obj file <emphasis remap='I'>input.obj</emphasis>
    to the BRL-CAD database <emphasis remap='I'>output.g</emphasis>.
  </para>
  <example>
    <title>Conversion</title>
    <para>
      <userinput>obj-g -u m -o s input.obj output.g</userinput>
    </para>
    <para>
     Convert obj file 'input.obj' to BRL-CAD dot-G file 'output.g'.
     All messages will be sent to the display. The obj file units are
     set to meters, non-closed surfaces will be output as
     surface-mode-bots. Closed surfaces will be output as
     volume-mode-bots. BRL-CAD primitives will be created based on the
     obj file 'group' grouping. The conversion mode is bot-via-nmg. 
    </para>
  </example>

  <example>
    <title>Conversion</title>
    <para>
      <userinput>obj-g -u m -o s -i -v -v -g o -m b input.obj output.g 2> output.log</userinput>
    </para>
    <para>
     Convert obj file 'input.obj' to BRL-CAD dot-G file 'output.g'.
     All stderr messages will be sent to the log file 'output.log'.
     The obj file units are set to meters, non-closed surfaces will be
     output as surface-mode-bots. Closed surfaces will be output as
     volume-mode-bots. BRL-CAD primitives will be created based on the
     obj file 'object' grouping. The conversion mode is 'native-bot'.
     Any normals provided in the obj file are ignored. Verbose
     messages are enabled and set to level two.
    </para>
  </example>

</refsect1>

<refsect1 id='objg_diagnostics'>
  <title>DIAGNOSTICS</title>
  <para>
   Numerous warning and error conditions are possible, usually due to
   invalid source geometry. Descriptive messages are printed on stderr
   (file descriptor 2). Verbose messages must be enabled for warning
   messages to be printed.
  </para>
</refsect1>

<refsect1 id='objg_author'>
  <title>AUTHOR</title>
  <para>Richard Weiss</para>
</refsect1>

<refsect1 id='copyright'>
  <title>COPYRIGHT</title>
  <para>
    This software is Copyright (c) 2010-2011 United States Government as
    represented by the U.S. Army Research Laboratory. All rights reserved.
  </para>
</refsect1>

<refsect1 id='objg_bugs'>
  <title>BUGS</title>
  <para>
  </para>
</refsect1>

<refsect1 id='bug_reports'>
  <title>BUG REPORTS</title>
  <para>
    Reports of bugs or problems should be submitted via electronic
    mail to &lt;devs@brlcad.org&gt;, or via the "cadbug.sh" script.
  </para>
</refsect1>
</refentry>

