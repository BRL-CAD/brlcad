<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="dbconcat">

  <refmeta>
    <refentrytitle>DBCONCAT</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="name">
    <refname>dbconcat</refname>
    <refpurpose>
      Concatenates an existing BRL-CAD database to the
      database currently being edited.
    </refpurpose>
  </refnamediv>

  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>dbconcat</command>
      <arg choice="opt" rep="norepeat"><replaceable>-t</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>-u</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>-c</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>-s|-p</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>-L</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>-O</replaceable></arg>
      <arg choice="req" rep="norepeat"><replaceable>database_file</replaceable></arg>
      <arg choice="opt" rep="norepeat"><replaceable>affix</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection xml:id="description"><title>DESCRIPTION</title>

    <para>
      Concatenates an existing <emphasis>BRL-CAD</emphasis> database to the
      database currently being edited. Note that each <emphasis>BRL-CAD</emphasis>
      object must have a unique name, so naming rules are defined that will
      automatically rename conflicting objects as they are merged in to a databse.
    </para>
    <para>
      If conflicting names are encountered, by default computer-generated prefixes or suffixes
      will be added to the object names coming from the incoming <emphasis>database_file</emphasis>.
      If the user wishes to simply overwrite the current objects, the <option>-O</option> option
      may be supplied and behavior is changed to all incoming objects overwriting an original
      object with it conflicts. Note that using this option <emphasis>is</emphasis> destructive -
      old geometry is not preserved when being overwritten.  Consequently this should only be used
      when the intent is to NOT preserve the original data.
    </para>
    <para>
      Alternatively, if an <emphasis>affix</emphasis> string is supplied, then objects from
      the incoming <emphasis>database_file</emphasis> will have the <emphasis>affix</emphasis> added
      to their names as a prefix (by default or if the <option>-p</option> option is specified),
      or as a suffix (if the <option>-s</option> option is specified).  By default this string
      is added to ALL incoming object names, but if <option>-L</option> is specified
      in either mode the <emphasis>affix</emphasis> string is used only when resolving name conflicts.
    </para>
    <para>
      Other options are used to indicate whether or not to preserve incoming metadata such as
      title, units and region color table.
    </para>
  </refsection>

  <refsection xml:id="dbconcat_options"><title>OPTIONS</title>

  <variablelist remap="TP">
    <varlistentry>
	<term><emphasis remap="B" role="bold">-L</emphasis></term>
	<listitem>
	  <para>
	    Apply the affix (either as a prefix or suffix) only 
	    when trying to resolve name conflicts.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-O</emphasis></term>
	<listitem>
	  <para>
	    Overwrite objects in the current .g file in cases where incoming
	    object names conflict. (WARNING: this option is destructive - old
	    data is replaced by new.)
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-c</emphasis></term>
	<listitem>
	  <para>
	     Indicates that the region color table of the currently edited database
             should be replaced with that of <emphasis>database_file</emphasis>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-p</emphasis></term>
	<listitem>
	  <para>
	    Use the supplied <emphasis>affix</emphasis> string as a prefix when reading
	    in object names. (Default.)
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-s</emphasis></term>
	<listitem>
	  <para>
	    Use the supplied <emphasis>affix</emphasis> string as a suffix when reading
	    in object names.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-t</emphasis></term>
	<listitem>
	  <para>
	     Indicates that the title of the currently edited database
             should be replaced with that of <emphasis>database_file</emphasis>.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis remap="B" role="bold">-u</emphasis></term>
	<listitem>
          <para>
	    Indicates that the units of the incoming <emphasis>database_file</emphasis> 
	    should become the units of the currently edited database.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

  </refsection>



  <refsection xml:id="examples"><title>EXAMPLES</title>

    <para>
      This example shows the use of the <command>dbconcat</command> command to copy all
      objects in a particular
      database to the current database. It also shows how to add a particular prefix to
      every object copied.
    </para>
    <example><title>Copy objects in a specified database to the current one and lazily apply a prefix to the copied objects.</title>

      <para><prompt>mged&gt; </prompt><userinput>dbconcat -L model_two.g two_</userinput></para>
      <para>
	Copies all the objects in <emphasis>model_two.g</emphasis> to the current database,
	using the specified prefix <emphasis>two_</emphasis> to attempt to resolve name conflicts.
	If there is a still a conflict even with the prefix applied standard rules will continue
	to be applied for additional name generation.
      </para>
    </example>

    <para>
      Another example shows a usage to import the title, units, color table, and all the
      objects of a database file
      into the current database. This is particularly useful if the current database is
      empty or just created by mged.
    </para>
    <example><title>Copy an entire database, including title, units, and color table, to the current database without any affix</title>

      <para><prompt>mged&gt; </prompt><userinput>dbconcat -t -u -c model_two.g</userinput></para>
      <para>
	Copies all the objects in <emphasis>model_two.g</emphasis> to the current database, including the title, units,
	and color table. No suffix or prefix is added to the object names.
      </para>
    </example>

    <example><title>Copy a database, overwriting objects in the current databse</title>

      <para><prompt>mged&gt; </prompt><userinput>dbconcat -O model_two.g</userinput></para>
      <para>
	Copies all the objects in <emphasis>model_two.g</emphasis> to the current database. No object names are changed while
	conflicts in the current database are overwritten with objects from <emphasis>model_two.g</emphasis>
      </para>
    </example>

  </refsection>

  <refsection xml:id="author"><title>AUTHOR</title><para>BRL-CAD Team</para></refsection>

  <refsection xml:id="bug_reports"><title>BUG REPORTS</title>

    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to <email>devs@brlcad.org</email>
    </para>
  </refsection>
</refentry>
