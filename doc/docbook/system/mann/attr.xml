<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="attr">
<refmeta>
  <refentrytitle>ATTR</refentrytitle>
  <manvolnum>nged</manvolnum>
  <refmiscinfo class="source">BRL-CAD</refmiscinfo>
  <refmiscinfo class="manual">BRL-CAD MGED Commands</refmiscinfo>
</refmeta>

<refnamediv xml:id="name">
  <refname>attr</refname>
  <refpurpose> Used to create, change, retrieve, or view attributes of database
objects.
   </refpurpose>
</refnamediv>

<!-- body begins here -->
<refsynopsisdiv xml:id="synopsis">
  <cmdsynopsis sepchar=" ">
    <command>attr</command>
    <arg choice="opt" rep="norepeat">get</arg>
    <arg choice="opt" rep="norepeat">set</arg>
    <arg choice="opt" rep="norepeat">rm</arg>
    <arg choice="opt" rep="norepeat">append</arg>
    <arg choice="opt" rep="norepeat">list</arg>
    <arg choice="opt" rep="norepeat">show</arg>
    <arg choice="opt" rep="norepeat">sort</arg>
    <arg choice="opt" rep="norepeat">copy</arg>
    <arg choice="req" rep="norepeat"><replaceable>object_name_pattern</replaceable></arg>
    <arg choice="opt" rep="norepeat"><replaceable>arguments</replaceable></arg>
  </cmdsynopsis>
</refsynopsisdiv>

<refsection xml:id="description"><title>DESCRIPTION</title>

  <para>
    Used to create, change, retrieve, or view attributes of database
    objects. Note that the attribute names may not contain embedded white
    space, and if attribute values contain embedded white space, they must be surrounded
    by {} or double quotes.
  </para>

  <para>A newly formed region always has four attributes automatically assigned to it:</para>
  <para>
  <itemizedlist>
    <listitem><para>los</para></listitem>
    <listitem><para>material_id</para></listitem>
    <listitem><para>region</para></listitem>
    <listitem><para>region_id</para></listitem>
  </itemizedlist>
  </para>
  <para>The 'region' attribute is the 'region flag' mentioned in the edcomb command.</para>

</refsection>

<refsection xml:id="attr_subcommands"><title>SUB-COMMANDS</title>

  <variablelist remap="TP">
        <varlistentry>
          <term><emphasis remap="B" role="bold">get</emphasis></term>
          <listitem>
                <para>
                  Retrieve and display the specified attributes from the object or objects matched by the pattern.  The arguments for the "get" sub-command are attribute names.  If no arguments are provided all attributes are displayed.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">set</emphasis></term>
          <listitem>
                <para>
                  Assigned the value provided for the specified attribute to the object or objects matched by the pattern. The arguments for "set" sub-command are attribute name/value pairs.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">rm</emphasis></term>
          <listitem>
                <para>
                  Removes the specified attribute from the object or objects matched by the pattern.  The arguments for the "rm" sub-command are attribute names.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">append</emphasis></term>
          <listitem>
                <para>
                  Adds the attribute and value provied for the specified attribute to the object or objects matched by the pattern, or sets the value if the attribute already exists. The arguments for the "append" sub-command are attribute name/value pairs.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">list</emphasis> object_name_pattern [key_filter_pattern [value_filter_pattern]]</term>
          <listitem>
                <para>
                  Lists the attributes assigned to the object or objects matched by the pattern.  If multiple objects are matched, the list returned is a consolidated list of all attribute types present on one or more of the matched objects.  This option is useful when investigating what attributes are present in objects in a database.
                </para>
		<para>
		  Optionally, the <command>list</command> subcommand will accept filters that are used to match key or key/value combinations and report only those matches.  If both key and value filters are supplied, the output of the list subcommand will be not just the unique matching attribute keys but the unique matching key/value pairs.  The latter is particularly useful as a way to get an overview of all actively used values associated with a particular attribute key.
		</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">show</emphasis></term>
          <listitem>
                <para>
                  Pretty print the specified attributes for the object or objects matching the pattern.  If no attributes are listed, all attributes are printed for each object.   The arguments for the "rm" sub-command are attribute names.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">sort</emphasis></term>
          <listitem>
                <para>
                  Pretty prints all attributes on each object matched by the pattern.  Attributes are sorted into alphabetical order before printing.  The arguments for the "sort" sub-command set the sort type for the attributes: 'case' (default), 'nocase', 'value', and 'value-nocase'.
                </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis remap="B" role="bold">copy</emphasis></term>
          <listitem>
                <para>
                  Takes the value of the first attribute from the specified object and set the second attribute on the object to that value.  The sequence of "attr copy" and "attr rm" can be used to rename attributes on objects.
                </para>
          </listitem>
        </varlistentry>
  </variablelist>

</refsection>


<refsection xml:id="examples"><title>EXAMPLES</title>

  <para>
    The examples demonstrate the use of the <command>attr</command> command and subcommands to
    assign and list attributes of database objects.
  </para>

  <example><title>Assigns an attribute to an object.</title>
    <variablelist>
      <varlistentry>
	<term><prompt>mged&gt;</prompt> <userinput>attr set region_1 material_id 10</userinput></term>
	<listitem>
	  <para>
	    Assigns an attribute name "material_id" to <emphasis>region_1</emphasis>. Its
	    value is 10.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
  </example>

  <example><title>Assigns an attribute (with embedded white space in its value) to an object.</title>
    <variablelist>
      <varlistentry>
	<term><prompt>mged&gt;</prompt> <userinput>attr set region_1 comment {This is a comment for region_1}</userinput></term>
	<listitem>
	  <para>
	    Assigns an attribute named "comment" to <emphasis>region_1</emphasis>. Its
	    value is "This is a comment for region_1."
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
  </example>

  <example><title>List all the attributes for an object</title>
    <variablelist>
      <varlistentry>
	<term><prompt>mged&gt;</prompt> <userinput>attr show region_1 comment</userinput></term>
    <listitem>
	<para>Lists all the attributes for <emphasis>region_1</emphasis>.
	</para>
</listitem>
      </varlistentry>
    </variablelist>
  </example>

  <example><title>List all the attribute types present on one or more objects in a database</title>
    <para>
	<prompt>mged&gt;</prompt> <userinput>attr list *</userinput>
	<literallayout class="normal">
aircode
los
material_id
oshader
region
region_id
regionid_colortable
rgb
shader
title
units
        </literallayout>
    </para>
	<para>Generate a list of all attribute keys found one one or more objects in the database. It may be necessary to place a '\' character before the asterisk to quote it on the MGED tcl prompt so that it reaches the attr command unexpanded.  The above output is the attribute list from the m35.g sample database.
	</para>
  </example>

  <example><title>List all the material_id attribute values in use in a database</title>
    <para>
	<prompt>mged&gt;</prompt> <userinput>attr list * material_id *</userinput>
	<literallayout class="normal">
material_id=1
material_id=2
material_id=4
material_id=7
material_id=8
material_id=14
material_id=17
material_id=18
material_id=19
material_id=20
        </literallayout>
    </para>
	<para>Produces a list of all material_id values found one or more times in the database on an object. It may be necessary to place a '\' character before the asterisks to quote them on the MGED tcl prompt so that they reaches the attr command correctly.  The above output is the attribute list from the m35.g sample database.
	</para>
  </example>
  
</refsection>

<refsection xml:id="see_also"><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>attributes</refentrytitle><manvolnum>5</manvolnum></citerefentry>.</para>
</refsection>

<refsection xml:id="author"><title>AUTHOR</title>
  <para>BRL-CAD Team</para>
</refsection>

<refsection xml:id="copyright"><title>COPYRIGHT</title>
    <para>
      This software is Copyright (c) 2008-2020 United States
      Government as represented by the U.S. Army Research Laboratory.
    </para>
</refsection>

<refsection xml:id="bug_reports"><title>BUG REPORTS</title>

  <para>
    Reports of bugs or problems should be submitted via electronic
    mail to <email>devs@brlcad.org</email>
  </para>
</refsection>
</refentry>
