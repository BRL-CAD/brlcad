<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="bot_flip">
  <refmeta>
    <refentrytitle>BOT_REPAIR</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="name">
    <refname>bot_repair</refname>
    <refpurpose>
      Given an existing BoT object as input, try to generate a manifold solid mesh. 
    </refpurpose>
  </refnamediv>

  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>bot repair</command>
      <arg choice="req" rep="norepeat"> <replaceable>input_bot</replaceable></arg>
      <arg choice="opt" rep="norepeat"> <replaceable>output_bot</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection xml:id="description"><title>DESCRIPTION</title>

  <para>
    It is quite common in CAD modeling to encounter a triangle mesh (a Bag of
    Triangles or "BoT" object in BRL-CAD terms) that does not define an enclosed
    volume in space.  Sometimes this is intentional (such as "plate mode" meshes
    whose volume is implicitly defined) but more commonly it represents a modeling
    error - i.e. the <emphasis>intent</emphasis> was to define a closed volume in
    space, but the mesh elements as defined do not successfully do so.
  </para>
  <para>
    In the fully general case it is impossible to repair such a mesh without manual
    intervention - if a huge majority of a spherical mesh is cut away, for example,
    there is no way to know automatically if the original modeling intent was to
    define the whole sphere or to define (say) a lens shape.  However, in many cases
    the flaws are small compared to the overall shape, and there are simply "holes"
    in the mesh that can be filled in to produce a valid manifold.  There are also
    even more basic categories of problem where the geoemtry itself does (or rather,
    <emphasis>can</emphasis> define a closed volume, but the topology of the mesh
    itself is incorrect.
  </para>
  <para>
    For those cases which may be suitable for automatic repair, the <command>bot repair</command>
    command can be used to attempt to produce valid manifold solid meshes automatically
    using various mesh repair algorithms.  A "repaired" mesh may either be output as
    an overwrite of the input mesh (an "in place" repair) or output to a user-specified
    object name as a new mesh.  Note that in-place repair is destructive - the original
    mesh is lost - but that method of repair useful when working on large numbers of
    meshes in a hierarchical model.
  </para>
  <para>
    If an input mesh is already a valid solid, no work is done.  If a repair cannot be
    successfully made, an error is returned.
  </para>
  
  </refsection>

  <refsection xml:id="examples"><title>EXAMPLES</title>

    <example><title>In-Place Repair</title>

      <para><prompt>mged&gt; </prompt><userinput>bot repair input.bot</userinput></para>
      <para>
        If a repair is needed, input.bot will be replaced by a new input.bot primitive with the repairs applied.
      </para>
    </example>

    <example><title>Outputting Repaired Mesh to Another Object.</title>

      <para><prompt>mged&gt; </prompt><userinput>bot repair input.bot output.bot</userinput></para>
      <para>
        If a repair was needed, output.bot holds the altered mesh.  The input.bot original is unaltered.
      </para>
    </example>

  </refsection>
  
  <refsection xml:id="author"><title>AUTHOR</title>
    <para>BRL-CAD Team</para>
  </refsection>

  <refsection xml:id="bug_reports"><title>BUG REPORTS</title>

    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to <email>devs@brlcad.org</email>
    </para>
  </refsection>
</refentry>
