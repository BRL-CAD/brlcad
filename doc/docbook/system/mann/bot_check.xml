<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="bot_flip">
  <refmeta>
    <refentrytitle>BOT_CHECK</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="name">
    <refname>bot_check</refname>
    <refpurpose>
      Test a BoT to determine if it satisfies validity criteria.
    </refpurpose>
  </refnamediv>

  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>bot check</command>
      <arg choice="opt" rep="norepeat"> degen_faces</arg>
      <arg choice="opt" rep="norepeat"> extra_edges</arg>
      <arg choice="opt" rep="norepeat"> flipped_edges</arg>
      <arg choice="opt" rep="norepeat"> manifold</arg>
      <arg choice="opt" rep="norepeat"> open_edges</arg>
      <arg choice="opt" rep="norepeat"> solid</arg>
      <arg choice="req" rep="norepeat"> <replaceable>input_bot</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection xml:id="description"><title>DESCRIPTION</title>

  <para>
    One of the more common problems a modeler faces when working with triangle based
    mesh geometry is whether or not the triangles form a closed volume in space - i.e.
    whether they properly define an inside and an outside, without holes or gaps.
    This question is more involved than it might seem at first glance - even if
    individual triangles are positioned correctly in space, the definitions of the
    mesh topology may not properly tie them together to form a closed mesh.
  </para>

  <para>
    To help recognize when this is happening, the <command>bot check</command> provides
    users with a variety of routines to look for problems.  By default <emphasis>all</emphasis>
    checks are applied (the <emphasis>solid</emphasis> test).  If a "1" is returned,
    all tests passed and the mesh is a valid solid, defining an inside and an outside.
    Otherwise, a "0" is returned to indicate failure.
  </para>

  <para>
    If more specific information is needed, subcommands can be added to individually
    run specific checks, returning the same "1" and "0" results as the full solidity test.
  </para>
  
  </refsection>

  <refsection xml:id="bot_check_subcommands"><title>Specific Test Subcommands</title>

  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">degen_faces</emphasis></term>
      <listitem>
        <para>
          Look for faces that have zero surface area (for example, if a triangle
	  is specified using the same point for both vertices on one of the edges.)
        </para>
      </listitem>
    </varlistentry>
  </variablelist>

  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">extra_edges</emphasis></term>
      <listitem>
        <para>
          Look for an edge that is not part of a triangle, or duplicates an already defined edge.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>


  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">flipped_edges</emphasis></term>
      <listitem>
        <para>
          Look for an edge that is ordered incorrectly for its local context.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>


  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">manifold</emphasis></term>
      <listitem>
        <para>
          Report if the Manifold library considers the mesh to define a proper manifold.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>


  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">open_edges</emphasis></term>
      <listitem>
        <para>
          Look for unmated edges, which should not exist in a proper manifold mesh.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>

  <variablelist remap="TP">
    <varlistentry>
      <term><emphasis remap="B" role="bold">solid</emphasis></term>
      <listitem>
        <para>
          Run all of the checks, passing only if each individual check is successful.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>

  </refsection>

  <refsection xml:id="examples"><title>EXAMPLES</title>

  <example>
    <title>Basic example</title>

    <para><prompt>mged&gt; </prompt><userinput>bot check input.bot</userinput></para>
    <para>
      Run all checks on <emphasis>input.bot</emphasis>.  Returns "1" if successful, and "0" if a problem was found.
    </para>
  </example>
  <example>
    <title>Specific test</title>

    <para><prompt>mged&gt; </prompt><userinput>bot check open_edges input.bot</userinput></para>
    <para>
      Run just the <emphasis>open_edges</emphasis> test on input.bot, reporting "1" if everything looks valid and "0" if one or more open edges are found.
    </para>
  </example>

  </refsection>
  
  <refsection xml:id="author"><title>AUTHOR</title>
    <para>BRL-CAD Team</para>
  </refsection>

  <refsection xml:id="bug_reports"><title>BUG REPORTS</title>

    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to <email>devs@brlcad.org</email>
    </para>
  </refsection>
</refentry>
