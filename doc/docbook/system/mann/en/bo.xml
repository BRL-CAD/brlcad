<!-- Converted by db4-upgrade version 1.0 -->

<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="bo">

  <refmeta>
    <refentrytitle>BO</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>
  
  <refnamediv xml:id="name">
    <refname>bo</refname>
    <refpurpose>Used to create or retrieve binary opaque objects.</refpurpose>
  </refnamediv>
  
  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>bo</command>
      <group choice="req" rep="norepeat">
	<arg choice="opt" rep="norepeat">-i u</arg>
	<arg choice="opt" rep="norepeat">-o</arg>
      </group>
      <arg choice="req" rep="norepeat"><replaceable>type dest source</replaceable></arg>
      <arg choice="req" rep="norepeat"><replaceable>type dest source</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  
  <refsection xml:id="description"><info><title>DESCRIPTION</title></info>
    
    <para>
      Used to create or retrieve binary opaque objects. Currently, only uniform binary 
      objects (arrays of values) are supported. One of <emphasis>-i</emphasis> or
      <emphasis>-o</emphasis> must be specified. The <emphasis>-i</emphasis> is for "input,"
      or creating a binary object, and the <emphasis>-o</emphasis> option is used for "output," 
      or retrieving a binary object. The <emphasis>u</emphasis> type argument must be supplied 
      when <emphasis>-i</emphasis> is used, to indicate the type of uniform binary object to be 
      created. On input, the <emphasis>dest</emphasis> is the name of the object to be created, 
      and the source is the path to a file containing the values in the local host format. On 
      output, <emphasis>dest</emphasis> is the path to a file to receive the contents of the 
      binary object whose name appears in <emphasis>source</emphasis>. The 
    <emphasis>type</emphasis> may be one of:
    
    <simplelist type="vert">
      <member>f -&gt; float</member>
      <member>d -&gt; double</member>
      <member>c -&gt; char (8 bit)</member>
      <member>s -&gt; short (16 bit)</member>
      <member>i -&gt; int (32 bit)</member>
      <member>l -&gt; long (64 bit)</member>
      <member>C -&gt; unsigned char (8 bit)</member>
      <member>S -&gt; unsigned short (16 bit)</member>
      <member>I -&gt; unsigned int (32 bit)</member>
      <member>L -&gt; unsigned long (64 bit)</member>
    </simplelist>
    </para>
    <para>Note:  this command was previously named "dbbinary".</para>
  </refsection>
  
  <refsection xml:id="examples"><info><title>EXAMPLES</title></info>
    
    <para>
      The examples show the use of the <command>bo</command> command to both create 
      (<emphasis>-i</emphasis> option) and to retrieve a binary object (<emphasis>-o</emphasis> option).
    </para>
    <example><info><title>Create an opaque uniform binary object of characters with a specified name 
      containing the contents of a particular file.</title></info>
      
      <para><prompt>mged&gt;</prompt> <userinput>bo -i u c cmds /usr/brlcad/html/manuals/mged/mged_cmds.html</userinput></para>
      <para>
	Creates an opaque uniform binary object of characters with the name <emphasis>cmds</emphasis> 
	that contains the contents of the file <emphasis>/usr/brlcad/html/manuals/mged/mged_cmds.html</emphasis>.
      </para>
    </example>
    
    <example><info><title>Copy the contents of a particular binary object into a specified file.</title></info>
      
      <para><prompt>mged&gt;</prompt><userinput>bo -o /home/jim/cmds.html cmds</userinput></para>
      <para>
	Copies the contents of the binary object named <emphasis>cmds</emphasis> into the file named
	<emphasis>/home/jim/cmds.html</emphasis>.
      </para>
    </example>
  </refsection>
  
  <info><corpauthor>BRL-CAD Team</corpauthor></info>
  
  <refsection xml:id="bug_reports"><info><title>BUG REPORTS</title></info>
    
    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to &lt;devs@brlcad.org&gt;, or via the "cadbug.sh" script.
    </para>
  </refsection>
</refentry>
