<refentry xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="bo">

  <refmeta>
    <refentrytitle>BO</refentrytitle>
    <manvolnum>nged</manvolnum>
    <refmiscinfo class="source">BRL-CAD</refmiscinfo>
    <refmiscinfo class="manual">BRL-CAD User Commands</refmiscinfo>
  </refmeta>

  <refnamediv xml:id="name">
    <refname>bo</refname>
    <refpurpose>Used to create or retrieve binary opaque objects.</refpurpose>
  </refnamediv>

  <!-- body begins here -->
  <refsynopsisdiv xml:id="synopsis">
    <cmdsynopsis sepchar=" ">
      <command>bo</command>
      <group choice="req" rep="norepeat">
	<arg choice="opt" rep="norepeat">-i u {type}</arg>
	<arg choice="opt" rep="norepeat">-o</arg>
      </group>
      <arg choice="req" rep="norepeat"><replaceable>destination</replaceable></arg> <arg choice="req" rep="norepeat"><replaceable>source</replaceable></arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsection xml:id="description"><title>DESCRIPTION</title>

    <para>
      Used to create or export binary opaque objects.  One of
      <emphasis>-i</emphasis> or <emphasis>-o</emphasis> must be
      specified to input or output data respectively. The
      <emphasis>-i</emphasis> option will create a binary object, and
      the <emphasis>-o</emphasis> option will write out a binary
      object's data. Currently, only uniform binary objects (arrays of
      values) are supported on input.  On input, the
      <emphasis>destination</emphasis> is the name of the object to be
      created, and the source is the path to a file to read. On
      output, <emphasis>destination</emphasis> is the path to a file
      to write out with the contents of the binary object specified as
      the <emphasis>source</emphasis>. The <emphasis>type</emphasis>
      may be one of:

    <simplelist type="vert">
      <member>f -&gt; float</member>
      <member>d -&gt; double</member>
      <member>c -&gt; char (8 bit)</member>
      <member>s -&gt; short (16 bit)</member>
      <member>i -&gt; int (32 bit)</member>
      <member>l -&gt; long (64 bit)</member>
      <member>C -&gt; unsigned char (8 bit)</member>
      <member>S -&gt; unsigned short (16 bit)</member>
      <member>I -&gt; unsigned int (32 bit)</member>
      <member>L -&gt; unsigned long (64 bit)</member>
    </simplelist>
    </para>
    <para>Note:  this command was previously named "dbbinary".</para>
  </refsection>

  <refsection xml:id="examples"><title>EXAMPLES</title>

    <para>
      The examples show the use of the <command>bo</command> command to both create
      (<emphasis>-i</emphasis> option) and to retrieve a binary object (<emphasis>-o</emphasis> option).
    </para>
    <example><title>Create an opaque uniform binary object of characters with a specified name
      containing the contents of a particular file.</title>

      <para><prompt>mged&gt;</prompt> <userinput>bo -i u c cmds /usr/brlcad/html/manuals/mged/mged_cmds.html</userinput></para>
      <para>
	Creates an opaque uniform binary object of characters with the name <emphasis>cmds</emphasis>
	that contains the contents of the file <emphasis>/usr/brlcad/html/manuals/mged/mged_cmds.html</emphasis>.
      </para>
    </example>

    <example><title>Import data for a displacement map (DSP) object</title>

      <para><prompt>mged&gt;</prompt> <userinput>bo -i u S dsp.data /path/to/file.dsp</userinput></para>
      <para>This imports a file named <emphasis>file.dsp</emphasis> that contains DSP data, i.e., raw data in unsigned short (16-bit) format.  The data is saved in the .g database into an object named <emphasis>dsp.data</emphasis>.  When creating a DSP, this <emphasis>dsp.data</emphasis> object can be specified as the data source.</para>
    </example>

    <example><title>Copy the contents of a particular binary object into a specified file.</title>

      <para><prompt>mged&gt;</prompt> <userinput>bo -o /home/jim/cmds.html cmds</userinput></para>
      <para>
	Copies the contents of the binary object named <emphasis>cmds</emphasis> into the file named
	<emphasis>/home/jim/cmds.html</emphasis>.
      </para>
    </example>
  </refsection>

  <refsection xml:id="author"><title>AUTHOR</title>
    <para>BRL-CAD Team</para>
  </refsection>

  <refsection xml:id="bug_reports"><title>BUG REPORTS</title>

    <para>
      Reports of bugs or problems should be submitted via electronic
      mail to <email>devs@brlcad.org</email>
    </para>
  </refsection>
</refentry>
