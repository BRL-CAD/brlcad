<article xmlns="http://docbook.org/ns/docbook" version="5.0"
      xmlns:xi="http://www.w3.org/2001/XInclude">
      <info>
        <title>MGED Tutorial</title>
</info>
<section>
	<title>
		Preface
	</title>
		<para>
			This manual is designed to get the user familiar with BRL-CAD and the facilities available for creating and using geometry. To accomplish this, we start with an introduction to the geometry editor,<emphasis> MGED</emphasis>.
		</para>
</section>
<section>
	<title>
		Modeling With CSG
	</title>
	<section>
		<title>
		Modeling With CSG
		</title>
		<para>
			In BRL-CAD objects are constructed using a technique known as ``Combinatorial Solid Geometry'' or ``Constructive Solid Geometry'' or simply ``CSG'' In the CSG approach to modeling This technique involves creating objects by combining primitive shapes together to form complex objects.  The primitive shapes are called ``solids''.  Each one occupies a volume of three dimensional space.  BRL-CAD currently has many primitive solid types.  These include:
		</para>
		    <table frame="all">
		    	<title>Modeling with CSG</title>
      <tgroup cols="2">
        <colspec align="left" />
        <colspec align="left" />
        <thead>
          <row>
            <entry>
              Primitive Shape
            </entry>
            <entry>
            	BRL-CAD Name
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
            	<para>
              Arbitrary Convex Polyhedron
              </para>
            </entry>
            <entry>
            	<para>
              arbn
          </para>
            </entry>
          </row>
          <row>
            <entry>
            	<para>
              Arbitrary Convex Polyhedron
              </para>
            </entry>
            <entry>
            	<para>
              arbn
          </para>
            </entry>
          </row>
          <row>
          <entry>

  <para>
    Arbitrary Convex Polyhedron (8pt or less)
  </para>
</entry>
<entry>
  <para>
    arb
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Extruded Bitmap *
  </para>
</entry>
<entry>
  <para>
    ebm *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Elliptical Hyperboloid
  </para>
</entry>
<entry>
  <para>
    ehy
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Ellipsoid
  </para>
</entry>
<entry>
  <para>
    ell
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Elliptical Paraboloid
  </para>
</entry>
<entry>
  <para>
    epa
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Elliptical Torus
  </para>
</entry>
<entry>
  <para>
    eto
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Halfspace
  </para>
</entry>
<entry>
  <para>
    half
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Height-Field *
  </para>
</entry>
<entry>
  <para>
    hf *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    N-Manifold Geometry *
  </para>
</entry>
<entry>
  <para>
    nmg *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Non-Uniform Rational B-spline *
  </para>
</entry>
<entry>
  <para>
    nurb *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    particle *
  </para>
</entry>
<entry>
  <para>
    part *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    polygonal object
  </para>
</entry>
<entry>
  <para>
    polygon
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    pipe *
  </para>
</entry>
<entry>
  <para>
    pipe *
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Right Elliptical Cylinder
  </para>
</entry>
<entry>
  <para>
    rec
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Right Hyperbolic Cylinder
  </para>
</entry>
<entry>
  <para>
    rhc
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Right Parabolic Cylinder
  </para>
</entry>
<entry>
  <para>
    rpc
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Sphere
  </para>
</entry>
<entry>
  <para>
    sph
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Truncated General Cone
  </para>
</entry>
<entry>
  <para>
    tgc
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Torus
  </para>
</entry>
<entry>
  <para>
    tor
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    Volume/Voxel *
  </para>
</entry>
<entry>
  <para>
    vol *
  </para>
  </entry>
</row>
       </tbody>
      </tgroup>
    </table>
<para>* = Implementation known to be incomplete as of this writing</para>
  <para>
    <figure>
    	<mediaobject>
      <imageobject>
        <imagedata fileref="images/prims.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
<para>
	These primitives can be combined using boolean operators to create complex shapes.  The three boolean operations supported are union, difference (or subtraction), and intersection.  Any number of primitives may be combined to produce a shape.  The union (u) of two solids is defined as the volume in either of the solids.  The difference (-) of two solids is the volume of the first solid which is not in the volume of the second solid.  The intersection (+) of two solids is the volume that is contained in both solids.
</para>
  <para>
    <figure>
    	<mediaobject>
      <imageobject>
        <imagedata fileref="images/bool.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
<para>
	The result of performing a set of boolean operations is a new shape.  In BRL-CAD this new shape is known as a ``combination''.  This is frequently abbreviated as ``comb''.  A ``comb'' can be further combined with other shapes to create still more complex shapes.  For example, the shape of a simple cup might be created by subtracting a cylinder from a slightly larger cylinder.  From this ``comb'' shape, the shape of a mug could be created by adding a handle.  The handle might be composed of an elliptical torus with the part of the torus that would be inside the cup removed.  Logically this is:

<programlisting>
Cup = Outside - Inside

Handle = Ring - Outside

Mug = Cup union Handle
</programlisting>
</para>
  <para>
  <figure>
  	<mediaobject>
      <imageobject>
        <imagedata fileref="images/cup_and_mug_small.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
<para>
In this way the shape of objects are built up from components.
</para>
<para>
When the desired shape of an object is attained, a special combination called a ``region'' is created.  A ``region'' represents an actual material component of the model.  It represents an item which is made from a homogeneous type of material.  In the example above two combinations are created: Cup and Handle.  These two are brought together to form an object (Mug) which is made of a single material (such as ceramic or bone china).  Material properties such as color, texture, transparency, reflectivity, etc. are assigned to regions.
</para>
<para>
The model is built up as a tree-like structure known as a Directed Acyclic Graph or DAG.  It is permissible for a node to be referenced by different parts of the model.  In the mug example, the solid "Outside" is a part of two different combinations: Cup and Handle.  In this example the graph of the mug object looks like this:
<programlisting>
			  Torus
			 /
		Handle (-)
	       /	 \
	Mug (u)		  Cylinder
	       \	 /
		Cup -- (-)
			 \
			  Insides
</programlisting>
It is possible to refer to combinations and regions multiple times as well.  For example, if a modeler were trying to create a cupboard containing three separate identical mugs, he might create a structure as follows:
<programlisting>
	 Mug 1			    Ring
        /     \			   /
       /       \	 Handle (-)
     (u)        \       /	   \
Mugs (u)- Mug 2--Mug (u)	    Outside
     (u)        /       \	   /
       \       /	 Cup -- (-)
        \     /			   \
	 Mug 3			    Inside
</programlisting>
Users familiar with other CAD software may prefer to think of the ``region'' as a ``part''.  Combinations containing of ``regions'' may be thought of as ``assemblies''.
</para>
	</section>
<section>
	<title>
		Starting MGED
	</title>
<para>
	The program for editing BRL-CAD geometry is called ``mged''.
</para>
<para>
All the geometry for a particular model or application is generally stored in a single file called a database.  Each database may contain many different objects.  By convention, the files containing BRL-CAD geometry have an extension of ``.g''.
</para>
<para>
Before starting mged the user should assure that the X-Windows DISPLAY environment variable has been properly set.  This indicates where applications should display the windows they create.
</para>
<para>
We use the following conventions for denoting text:
<programlisting>
	Text typed by the user
	Text output by the program
</programlisting>
</para>
<para>
To edit or create a geometry file, the user starts the mged program from the shell by giving the command:
<programlisting>
   % mged -c cup.g
</programlisting>
</para>
<para>
The filename is required.  Unlike many programs which allow the user to create a new document or database in memory, mged always keeps everything on disk.  After each user command, the contents of the disk file are brought up to date.  By doing this, the amount of work lost in the event of a system crash is minimized.
</para>
<para>
When mged is started, it prints out the release number and date of compilation. When multiple versions of mged are installed on a machine, this allows the user to verify that the proper version is being started.
</para>
<para>
If the file specified does not exist when mged is started, it will stop and ask if the user wishes to create a new database:
<programlisting>
   % mged -c cup.g
   BRL-CAD Release 4.5   Graphics Editor (MGED)
       Mon May 19 16:31:32 EDT 1997, Compilation 5377
       bparker@vapor.arl.mil:/m/cad/.mged.6d

   cup.g: No such file or directory
   Create new database (y|n)[n]?
At this point pressing the ``y'' key followed by a return will create the new database.  Any other (non-y) keys (followed by a return) will cause mged to quit without creating the database.
   % mged -c cup.g
   BRL-CAD Release 4.5   Graphics Editor (MGED)
       Mon May 19 16:31:32 EDT 1997, Compilation 5377
       bparker@vapor.arl.mil:/m/cad/.mged.6d

   cup.g: No such file or directory
   Create new database (y|n)[n]? y
   Creating new database "cup.g"
   Untitled MGED Database (units=mm)
   attach (nu|X|ogl|glx)[nu]?
</programlisting>
</para>
<para>
At this point, mged is asking what type of geometry display window you would like.  The default is always ``nu'' for Null or ``no geometry display''.  If you are creating geometry, it is desirable to be able to see it.  The common choices are:
</para>
<table frame="all">
	<title>Common Choices</title>
   <tgroup cols="2">
     <colspec align="left" />
      <colspec align="left" />
        <thead>
<row>
<entry>
  <para>
    Name
  </para>
</entry>
	<entry>
  <para>
    Display Type
  </para>
</entry>
</row>
</thead>
<tbody>
<row>
<entry>
  <para>
    X
  </para>
</entry>
	<entry>
  <para>
    X Windows
  </para>
</entry>
</row>
<row>
<entry>
  <para>
    glx
  </para>
</entry>
	<entry>
  <para>
    Iris gl under X Windows
  </para>
  </entry>
</row>
<row>
	<entry>
  <para>
    ogl
  </para>
</entry>
<entry>
  <para>
    OpenGL under X Windows
  </para>
</entry>
</row>
</tbody>
</tgroup>
</table>
<para>
	Enter one of the names listed followed by a return.
</para>
<para>
	<programlisting>
   % mged -c cup.g
   BRL-CAD Release 4.5   Graphics Editor (MGED)
       Mon May 19 16:31:32 EDT 1997, Compilation 5377
       bparker@vapor.arl.mil:/m/cad/.mged.6d

   cup.g: No such file or directory
   Create new database (y|n)[n]? y
   Creating new database "cup.g"
   Untitled MGED Database (units=mm)
   attach (nu|X|ogl|glx)[nu]? ogl
   mged>
</programlisting>
</para>
<para>
	At this point you should have a window that looks something like this:
	</para>
	  <para>
<figure>
	<mediaobject>
      <imageobject>
        <imagedata fileref="images/faceplate_sm.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
  <para>
When the MGED program has a display window or device attached, it displays a border around the region of the screen being used along with some ancillary status information.  Together, this information is termed the editor ``faceplate''.
</para>
<para>
In the upper left corner of the window is a small enclosed area which is used to display the current editor state. The current editor state indicates whether objects are selected for editing and what modeling operations are allowed.
</para>
<para>
Underneath the state display is a zone in which three ``pop-up'' menus may appear.  The top menu is termed the ``button menu,'' as it contains menu items which duplicate many functions which were originally available via an external button box peripheral.  Having these frequently used functions available on a pop-up menu can greatly decrease the number of times that the user needs to remove his hand from the pointing device (either mouse or tablet puck) to reach for the buttons.
</para>
<para>
Below is an example of the faceplate and first level menu.
</para>
  <para>
<figure>
	<mediaobject>
      <imageobject>
        <imagedata fileref="images/faceplate_menu_sm.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
  <para>
The second menu is used primarily for the various editing states, at which time it contains all the editing operations which are generic across all objects (scaling, rotation, and translation).  The third menu contains selections for object-specific editing operations.  The choices on these menus are detailed below.
</para>
<para>
Running across the entire bottom of the faceplate is a thin rectangular display area which holds two lines of text.  The first line always contains a numeric display of the model-space coordinates of the center of the view and the current size of the viewing cube, both of which are displayed in the currently selected editing units.  The first line also contains the current rotation rates.
</para>
<para>
The second line has several uses, depending on editor mode.  In various editing states this second line will contain certain path selection information.  When the angle/distance cursor function is activated, the second line will be used to display the current settings of the cursor.
</para>
<para>
All numeric interaction between the user and the editor are in terms of user-selected display units.  The user may select from millimeters, centimeters, meters, inches, and feet, and the currently active display units are noted in the first display line.  One important implementation detail is that all numeric values are stored in the database in millimeters. When MGED interacts with the user, it converts values from the database into the units selected by the user before displaying them.  Likewise, values that the user enters are converted to millimeters before being written to the database.
</para>
</section>
<section>
	<title>
		The Screen Coordinate System
	</title>
	<para>
	Objects drawn on the screen are clipped in X, Y, and Z, to the size indicated on the first status line.  This creates a conceptual ``viewing cube''.  Only objects inside this cube are visible.  This feature allows objects within the cube to be seen, without cluttering the display with objects which are within view in X and Y, but quite far away in the Z direction.  This is especially useful when the display is zoomed in on a small portion of the geometry.  On some displays Z axis clipping can be selectively enabled and disabled as a viewing aid.
</para>
<para>
The MGED editor uses the standard right-handed screen coordinate system shown in the figure below.
</para>
<para>
    <figure>
    	<mediaobject>
      <imageobject>
        <imagedata fileref="images/coord-axes.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
</para>
<para>
	The Z axis is perpendicular to the screen and the positive Z direction is out of the screen towards the viewer.  The directions of positive (+) and negative (-) axis rotations are also indicated.  For these rotations, the ``Right Hand Rule'' applies: Point the thumb of the right hand along the direction of +X axis and the other fingers will describe the sense of positive rotation.
</para>
</section>
<section>
	<title>
		Creating Geometry: The Cup
	</title>
<para>
Let's look at the commands needed to build the cup geometry described in the first section.  The following MGED editing session contains all the commands needed to create the mug.  Each command will be explained below.
<programlisting>
   % newmged Mug.g
   BRL-CAD Release 4.5   Graphics Editor (MGED)
       Tue May 20 10:33:44 EDT 1997, Compilation 5378
       jra@vapor.arl.mil:/m/cad/.mged.6d

   Mug.g: No such file or directory
   Create new database (y|n)[n]? y
   Creating new database "Mug.g"
   Untitled MGED Database (units=mm)
   attach (nu|X|ogl|glx)[nu]? ogl
   mged> title MGED Tutorial Geometry
   mged> units in
   New editing units = 'in'
   mged> in outside.s rcc
   Enter X, Y, Z of vertex: 0 0 0
   Enter X, Y, Z of height (H) vector: 0 0 3.5
   Enter radius: 1.75
   42 vectors in 0.006435 sec
   mged> in inside.s rcc 0 0 0.25 0 0 3.5 1.5
   42 vectors in 0.006435 sec
   mged> in ring.s eto 0 2.5 1.75 1 0 0
   Enter X, Y, Z, of vector C: .6 0 0
   Enter radius of revolution, r: 1.45
   Enter elliptical semi-minor axis, d: 0.2
   2479 vectors in 0.087375 sec
   mged> comb cup.c u outside.s - inside.s
   mged> comb handle.c u ring.s - outside.s
   mged> r mug.r u cup.c u handle.c
   Defaulting item number to 1002
   Creating region id=1001, air=0, los=100, GIFTmaterial=1
</programlisting>
The first step in preparing a new database is to provide a title which describes the contents of the database.  This is an important opportunity to describe the contents and purpose of the database.  Setting the title is done with the title command in MGED.
</para>
<para>
	<programlisting>
   mged> Title MGED Tutorial Geometry
</programlisting>
When the database is first created, the default editing units are set to millimeters.  For this example, we want to specify the dimensions of the object in inches.  To arrange this, the units command
<programlisting>
   mged> units in
</programlisting>
Now we can create our first solid.  There are two techniques for creating geometry in MGED.  The commands for these two techniques are make and in (for ``insert'').  For precision modeling the in command offers the greatest control over the definition of the solid.  This is the approach we will use.
</para>
<para>
The ``in'' command can take all of its arguments on the command line, or it will prompt you for any missing portions.  Remembering what parameters need to be specified for each solid can be difficult at best.  All that you really need to enter is the command name.  Mged will prompt you for the rest of the parameters.
</para>
<para>
In the first example above we specify the name of the solid we are creating (``outside.s'') and the type of solid to create (``rcc''). Then mged prompts for the remaining arguments (vertex, height vector, and radius):
<programlisting>
   mged> in outside.s rcc
   Enter X, Y, Z of vertex: 0 0 0
   Enter X, Y, Z of height (H) vector: 0 0 3.5
   Enter radius: 1.75
</programlisting>
</para>
<para>
For the solid ``inside.s'' we specify all the parameters on the command line, so mged does not prompt us for additional arguments.  In the case of the solid ``ring.s'' we specify some, but not all of the parameters, and mged prompts us for the missing ones:
<programlisting>
   mged> in inside.s rcc 0 0 0.25 0 0 3.5 1.5
   42 vectors in 0.006435 sec
   mged> in ring.s eto 0 2.5 1.75 1 0 0
   Enter X, Y, Z, of vector C: .6 0 0
   Enter radius of revolution, r: 1.45
   Enter elliptical semi-minor axis, d: 0.2
   2479 vectors in 0.087375 sec
</programlisting>
</para>
<para>
As a minimal example, if we wanted to create a sphere called ``ball.s'' we could simply type the ``in'' command and let mged prompt us for everything else:
<programlisting>
   mged> in
   Enter name of solid: ball.s
   Enter solid type:  sph
   Enter X, Y, Z of vertex:  0 0 0
   Enter radius:  3
   51 vectors in 0.117187 sec
</programlisting>
</para>
<para>
The three boolean operators supported are union, subtraction and intersection. These operations are denoted by the operators u, - and + respectively.  Mged uses these in a sort of prefix notation.  In this notation the union operator has higher precedence than either subtraction or intersection.  Hence the following boolean sequence
<programlisting>
	(A union B) subtract C

is written as

	u A - C u B - C
</programlisting>
</para>
<para>
The comb command creates a boolean combination.  In our example we use this to create the shape of the outside of the cup called ``cup.s'' Reading the command above that creates cup.c, we note that cup.c is formed from the union of the volume defined by the solid ``outside.s'' and the subtraction of the volume defined by the solid ``inside.s''.
</para>
<para>
The r command creates a ``region''.  It is just like creating a combination, but the results are a volume of one logical material type.
</para>
<para>
Assigning material properties is done with the mater or shader command.  Here we define which shader should be used when rendering the object, and the parameters for the shader.  The simplest shader is the ``plastic'' shader which uses a Phong lighting model.  For our mug this will be fine.  We specify the plastic shader and set the color to a shade of green.
<programlisting>
   mged> mater mug.r
   Shader =
   Shader?  ('del' to delete, CR to skip) plastic
   Color = (No color specified)
   Color R G B (0..255)? ('del' to delete, CR to skip) 32 128 32
   Inherit = 0:  lower nodes (towards leaves) override
   Inheritance (0|1)? (CR to skip) 0
</programlisting>
</para>
<para>
The Inheritance option should be left 0.  This option will be discussed later.
Once we have created our geometry, it would be nice to look at the wireframe from a variety of angles.  By clicking on the button menu box a set of options is displayed.  The buttons labeled "35,25", "Top", "Right", "Front", and "45,45" offer a set of standard views.
</para>
<para>
It is possible to raytrace the current view from within mged.  But to do so we need a place to display the image.  We start up a framebuffer server (number 1) to accommodate this:

 <programlisting>
   mged> exec fbserv 1 /dev/sgip &#38;
</programlisting>
</para>
<para>
This runs the ``fbserv'' program which will maintain a framebuffer window for us.  Now we are ready to raytrace an image.  First we'll clear the geometry window of all the primitives and combinations and regions we've created.  Then we display the region we want to raytrace with the ``draw'' command.  Finally, we'll select a nice viewing angle of azimuth 35 elevation 25 with the ``ae'' command.

<programlisting>
   mged> Z
   mged> draw mug.r
   mged> ae 35 25
</programlisting>
Now we are ready to raytrace an image.  The ``rt'' command starts the raytracer on the geometry.  We must tell it where we want the pixels displayed with the ``-F'' option, and the size of the image with the -s option:
<programlisting>
   mged> rt -F:1 -s 512
</programlisting>
The rt program prints a variety of information when it runs:
<programlisting>
rt -F:0 -s 512
rt -s50 -M -F:0 -s 512 cup.g mug.r
mged> BRL-CAD Release 4.4   Ray-Tracer
    Thu Jan  5 10:08:14 EST 1995, Compilation 1
    mike@wilson.arl.mil:/vld/src/brlcad/rt

db title:  MGED Tutorial Geometry
initial dynamic memory use=131072.
GETTREE: cpu = 0.001619 sec, elapsed = 0.004842 sec
    parent: 0.0user 0.0sys 0:00real 0% 0i+0d 2100maxrss 0+27pf 0+1csw
  children: 0.0user 0.0sys 0:00real 0% 0i+0d 0maxrss 0+0pf 0+0csw
Additional dynamic memory used=0. bytes

...................Frame     0...................
PREP: cpu = 0.001296 sec, elapsed = 0.003973 sec
    parent: 0.0user 0.0sys 0:00real 0% 0i+0d 2100maxrss 0+7pf 1+0csw
  children: 0.0user 0.0sys 0:00real 0% 0i+0d 0maxrss 0+0pf 0+0csw
Additional dynamic memory used=0. bytes
Tree: 3 solids in 1 regions
Model: X(-45,45), Y(-45,116), Z(-8,97)
View: 35 azimuth, 25 elevation off of front view
Orientation: 0.248097, 0.476591, 0.748097, 0.389435
Eye_pos: 87.6646, 90.5654, 97.5286
Size: 236.164mm
Grid: (0.461258, 0.461258) mm, (512, 512) pixels
Beam: radius=0.230629 mm, divergence=0 mm/1mm
Dynamic scanline buffering
Lighting: Ambient = 40%
  Implicit light 0: (155.394, -35.3438, 49.9036), aimed at (0, 0, -1)
  Implicit light 0: invisible, no shadows, 1000 lumens (83%), halfang=180

SHOT: cpu = 6.66068 sec, elapsed = 7.33342 sec
    parent: 6.6user 0.0sys 0:07real 91% 0i+0d 2100maxrss 0+20pf 0+251csw
  children: 0.0user 0.0sys 0:07real 0% 0i+0d 0maxrss 0+0pf 0+0csw
Additional dynamic memory used=0. bytes
154520 solid/ray intersections: 94456 hits + 60064 miss
pruned 61.1%:  151248 model RPP, 0 dups skipped, 50361 solid RPP
Frame     0:   262144 pixels in       6.66 sec =   39356.94 pixels/sec
Frame     0:   262144 rays   in       6.66 sec =   39356.94 rays/sec (RTFM)
Frame     0:   262144 rays   in       6.66 sec =   39356.94 rays/CPU_sec
Frame     0:   262144 rays   in       7.33 sec =   35746.50 rays/sec (wallclock)
</programlisting>
</para>
<para>
If all goes well, you will get an image of a green mug on a black background.
</para>
  <para>
<figure>
	<mediaobject>
      <imageobject>
        <imagedata fileref="images/mug_green.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
<para>
Now let's improve on our basic cup.  The lip of this cup looks a little too squared off.  To fix this, we'll add a rounded top to the lip.  To do this we create a circular torus solid positioned at exactly the top of the cup.  Then we can add it to the combination ``cup.c''.
<programlisting>

   mged> in rim.s tor 0 0 3.5 0 0 1 1.625 0.125
   214 vectors in 0.001814 sec
   mged> comb cup.c u rim.s
</programlisting>
Now we have a unique condition.  The solid rim.s was added to the list of objects being displayed when it was created.  However, now it is also a part of mug.r (via cup.c).  If we raytrace the current view we will have 2 copies of this solid.  The raytracer will complain that they overlap.  The best way to fix this is to clear the display, redisplay the new, complete object, and then raytrace.  The ``Z'' command clears all objects from the display. Then we can redisplay the objects we want to raytrace with the ``draw'' command.
<programlisting>
   mged> Z
   mged> draw mug.r
</programlisting>
Since this is a frequent operation (clear the display list and draw something new) there is a shortcut:
<programlisting>
   mged> B mug.r
</programlisting>
The ``B'' is not very easy to remember (one suggested mnemonic is "blast"), but it is quite useful.
Now we are ready to raytrace again.

<programlisting>
   mged> rt -F:1 -s 512
   rt -s50 -M -F:1 -s 512 mug.g mug.r
   BRL-CAD Release 4.4   Ray-Tracer
       Thu Jan  5 10:08:14 EST 1995, Compilation 1
       mike@wilson.arl.mil:/vld/src/brlcad/rt

   db title:  MGED Tutorial Geometry
   initial dynamic memory use=131072.
   GETTREE: cpu = 0.001785 sec, elapsed = 0.005385 sec
       parent: 0.0user 0.0sys 0:00real 0% 0i+0d 2152maxrss 0+31pf 0+1csw
     children: 0.0user 0.0sys 0:00real 0% 0i+0d 0maxrss 0+0pf 0+0csw
   Additional dynamic memory used=0. bytes

   ...................Frame     0...................
   PREP: cpu = 0.001468 sec, elapsed = 0.004084 sec
       parent: 0.0user 0.0sys 0:00real 0% 0i+0d 2152maxrss 0+7pf 1+0csw
     children: 0.0user 0.0sys 0:00real 0% 0i+0d 0maxrss 0+0pf 0+0csw
   Additional dynamic memory used=0. bytes
   Tree: 4 solids in 1 regions
   Model: X(-45,45), Y(-45,116), Z(-8,97)
   View: 35 azimuth, 25 elevation off of front view
   Orientation: 0.248097, 0.476591, 0.748097, 0.389435
   Eye_pos: 87.6646, 90.5654, 116.579
   Size: 236.164mm
   Grid: (0.461258, 0.461258) mm, (512, 512) pixels
   Beam: radius=0.230629 mm, divergence=0 mm/1mm
   Dynamic scanline buffering
   Lighting: Ambient = 40%
     Implicit light 0: (155.394, -35.3438, 49.9036), aimed at (0, 0, -1)
     Implicit light 0: invisible, no shadows, 1000 lumens (83%), halfang=180

   SHOT: cpu = 7.26825 sec, elapsed = 7.94901 sec
       parent: 7.2user 0.0sys 0:07real 92% 0i+0d 2152maxrss 0+22pf 1+270csw
     children: 0.0user 0.0sys 0:07real 0% 0i+0d 0maxrss 0+0pf 0+0csw
   Additional dynamic memory used=0. bytes
   170747 solid/ray intersections: 99501 hits + 71246 miss
   pruned 58.3%:  151252 model RPP, 0 dups skipped, 64892 solid RPP
   Frame     0:   262144 pixels in       7.27 sec =   36067.02 pixels/sec
   Frame     0:   262144 rays   in       7.27 sec =   36067.02 rays/sec (RTFM)
   Frame     0:   262144 rays   in       7.27 sec =   36067.02 rays/CPU_sec
   Frame     0:   262144 rays   in       7.95 sec =   32978.18 rays/sec (wallclock)
</programlisting>
</para>
  <para>
<figure>
	<mediaobject>
      <imageobject>
        <imagedata fileref="images/rim.gif" width="250" />
      </imageobject>
  </mediaobject>
    </figure>
  </para>
	</section>
<section>
	<title>
	Editing Solids
</title>
<para>
So far we've focused on creating primitive solids and combinations.  Now let's look at ways of altering and deleting things that already exist.  We'll continue with our example mug geometry.  There are a number of changes that need to be made to make it more realistic.
</para>
<para>
The handle for the mug is a little awkward.  It sticks out too far from the side of the mug, and it is too wide.
</para>
<para>
The bottom is perfectly flat.  Any imperfection in the table top would cause it to wobble.
The inside bottom corner is too sharp. We need to create a "fillet" at the seam between side and bottom.
<programlisting>
Fixing the Handle

 kill handle.c
kill ring.s
in handle_01.s eto 0 2.25 1.25 1 0 0 .75 0.3 0 0 .15
in handle_02.s rpp -.5 .5 1 3.5 1.25 2.5
in handle_03.s rec 0 3 1.25 0 0 1.25 0.3 0 0 0 .15 0
in handle_04.s eto 0 2.25 2.5 1 0 0 .75 0.3 0 0 .15
</programlisting>
</para>
<para>
comb handle.c u handle_01.s - handle_02.s - outside.s u handle_04.s - handle_02.s - outside.s u handle_03.s
</para>
    <para>
<figure>
	<mediaobject>
        <imageobject>
          <imagedata fileref="images/handle.gif" width="250" />
        </imageobject>
    </mediaobject>
      </figure>
    </para>
</section>
<section>
	<title>
Adding a Base
</title>
<para>
	<programlisting>
 mvall outside.s outside_01.s
in outside_02.s tor 0 0 0 0 0 1 1.6875 .0625
comb cup.c u outside_02.s
in outside_03.s rcc 0 0 0 0 0 -.2 1.6875
comb cup.c u outside_03.s
in outside_04.s tor 0 0 -.2 0 0 1 1.6875 .1375
comb cup.c - outside_04.s
in outside_05.s ellg 0 0 -.2 1.5 0 0 0 1.5 0 0 0 .15
comb cup.c - outside_05.s
center 0 0 0
size 4
ae 170 -52 120
rt -s 512 -F :1
</programlisting>
</para>
    <para>
<figure>
	<mediaobject>
        <imageobject>
          <imagedata fileref="images/base.gif" width="250" />
        </imageobject>
    </mediaobject>
      </figure>
    </para>

</section>
<section>
	<title>
Adding a fillet
</title>
<para>
	<programlisting>
 mvall inside.s inside.c
mv inside.c inside_01.s
solid edit bottom of inside_01.s up to 0 0 0.3125
in inside_02.s tor 0 0 .3125 0 0 1 1.4375 0.0625
in inside_03.s rcc 0 0 0.25 0 0 0.125 1.4375
comb inside.c u inside_01.s u inside_02.s u inside_03.s
B mug.r
ae 35 85
size 5
rt -s 512 -F :1
</programlisting>
</para>
    <para>
<figure>
	<mediaobject>
        <imageobject>
          <imagedata fileref="images/fillet.gif" width="250" />
        </imageobject>
    </mediaobject>
      </figure>
    </para>
</section>
</section>
<section>
	<title>
		MGED’s New Graphical User Interface
	</title>

<section>
	<title>
		MGED’s New Graphical User Interface
	</title>

  <itemizedlist>
    <listitem>
      <para>
        <link linkend="GettingStarted">Getting
        Started</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="CommandWindow">Command
        Window</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="Panes">Panes (Display Manager
        Windows)</link>
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link linkend="ShiftGrips">Shift Grips
            (Default Mouse Bindings)</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="DefaultKeyBindings">Default
            Key Bindings</link>
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <link linkend="ControlPanels">Control
        Panels</link>
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link linkend="ADCControlPanel">ADC Control
            Panel</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="GridControlPanel">Grid
            Control Panel</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="QueryRayControlPanel">Query
            Ray Control Panel</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="RaytraceControlPanel">Raytrace
            Control Panel</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="AnimMateControlPanel">AnimMate
            Control Panel</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="SolidEditor">Solid
            Editor</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="SolidEditorInternal">Solid
            Editor (Internal)</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="CombinationEditor">Combination
            Editor</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link linkend="ColorEditor">Color
            Editor</link>
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <link linkend="StatusBar">Status Bar</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="MenuBar">Menu bar</link>
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link linkend="File">File</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="New">New</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Open">Open</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Insert">Insert</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Extract">Extract</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="g2asc">g2asc</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="raytrace">Raytrace</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SaveViewAs">Save View
                As</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="RTscript">RT
                    script</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Plot">Plot</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="PostScript">PostScript</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Preferences">Preferences</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Units">units</link>
                  </para>
                  <itemizedlist>
                    <listitem>
                      <para>
                        <link linkend="micrometers">micrometers</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="millimeters">millimeters</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="centimeters">centimeters</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="meters">meters</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="kilometers">kilometers</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="inches">inches</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="feet">feet</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="yards">yards</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="miles">miles</link>
                      </para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="cmd_line_ed">Command Line
                    Edit</link>
                  </para>
                  <itemizedlist>
                    <listitem>
                      <para>
                        <link linkend="emacs">emacs</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="vi">vi</link>
                      </para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="SpecialCharacters">Special
                    Characters</link>
                  </para>
                  <itemizedlist>
                    <listitem>
                      <para>
                        <link linkend="TclEvaluation">Tcl
                        Evaluation</link>
                      </para>
                    </listitem>
                    <listitem>
                      <para>
                        <link linkend="ObjectNameMatching">Object
                        Name Matching</link>
                      </para>
                    </listitem>
                  </itemizedlist>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ColorSchemes">Color
                    Schemes</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Close">Close</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Exit">Exit</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Edit">Edit</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="SolidSelection">Solid
                Selection</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="MatrixSelection">Matrix
                Selection</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SolidEditor">Solid
                Editor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="CombinationEditor">Combination
                Editor</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Create">Create</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="MakeSolid">Make
                Solid</link> arb8, arb7, arb6, arb5, arb4, sph, grip,
                ell, ellg, tor, tgc, tec, rec, trc, rcc, half, rpc, rhc,
                epa, ehy, eto, part, nmg, pipe
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SolidEditor">Solid
                Editor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="CombinationEditor">Combination
                Editor</link>-
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="view">View</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="Top">Top</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Bottom">Bottom</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Right">Right</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Left">Left</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Front">Front</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Rear">Rear</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="az35el25">az35,el25</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="az45el45">az45,el45</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ZoomIn">Zoom In</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ZoomOut">Zoom Out</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Default">Default</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="MultipaneDefaults">Multipane
                Defaults</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Zero">Zero</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="ViewRing">ViewRing</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="AddView">Add View</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SelectView">Select
                View</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="DeleteView">Delete
                View</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="NextView">Next View</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="PrevView">Prev View</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="LastView">Last View</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Settings">Settings</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="MouseBehavior">Mouse
                Behavior</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Default">Default</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Pickeditsolid">Pick
                    edit-solid</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Pickeditmatrix">Pick
                    edit-matrix</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Pickeditcombination">Pick
                    edit-combination</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Sweepraytracerectangle">Sweep
                    raytrace-rectangle</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Pickraytraceobject">Pick
                    raytrace-object(s)</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="queryray">Query
                    ray</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Sweeppaintrectangle">Sweep
                    paint-rectangle</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Sweepzoomrectangle">Sweep
                    zoom-rectangle</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Transform">Transform</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="View2">View</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ADC">ADC</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ModelParams">Model
                    Params</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="ConstraintCoords">Constraint
                Coords</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="model">Model</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="View3">View</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="object">Object</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="RotateAbout">Rotate
                About</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="ViewCenter">View
                    Center</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Eye">Eye</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ModelOrigin">Model
                    Origin</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="KeyPoint">Key
                    Point</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="ActivePane">Active
                Pane</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="UpperLeft">Upper
                    Left</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="UpperRight">Upper
                    Right</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="LowerLeft">Lower
                    Left</link>
                  </para>
	                </listitem>
                <listitem>
                  <para>
                    <link linkend="LowerRight">Lower
                    Right</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="ApplyTo">Apply To</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="ApplyActivePane">Active
                    Pane</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="LocalPanes">Local
                    Panes</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ListedPanes">Listed
                    Panes</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="AllPanes">All
                    Panes</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="QueryRayEffects">Query
                Ray Effects</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Text">Text</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Graphics">Graphics</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="both">both</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Grid">Grid</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Anchor">Anchor</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Spacing">Spacing</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="DrawGrid">Draw
                    Grid</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="SnapToGrid">Snap To
                    Grid</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="GridSpacing">Grid
                Spacing</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Autosize">Autosize</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Arbitrary">Arbitrary</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="micrometer">micrometer</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="millimeter">millimeter</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="centimeter">centimeter</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="decimeter">decimeter</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="meter">meter</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="kilometer">kilometer</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="inch10">1/10
                    inch</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="inch14">1/4
                    inch</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="inch10">1/2
                    inch</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="inch">inch</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="foot">foot</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="yard">yard</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="mile">mile</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Framebuffer">Framebuffer</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="All">All</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="RectangleArea">Rectangle
                    Area</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Overlay">Overlay</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Underlay">Underlay</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="FramebufferActive">Framebuffer
                    Active</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="ListenForClients">Listen
                    For Clients</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="ViewAxesPosition">View
                Axes Position</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="Center">Center</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="LowerLeft">Lower
                    Left</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="UpperLeft">Upper
                    Left</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="UpperRight">Upper
                    Right</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="LowerRight">Lower
                    Right</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Modes">Modes</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="DrawGrid">Draw
                Grid</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SnapToGrid">Snap
                To Grid</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="FramebufferActive">Framebuffer
                Active</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ListenForClients">Listen
                For Clients</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Persistentsweeprectangle2">Persistent
                sweep rectangle</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="AngleDistCursor2">Angle/Dist
                Cursor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Faceplate">Faceplate</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Axes">Axes</link>
              </para>
              <itemizedlist>
                <listitem>
                  <para>
                    <link linkend="View3">View</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="model">Model</link>
                  </para>
                </listitem>
                <listitem>
                  <para>
                    <link linkend="Edit">Edit</link>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <para>
                <link linkend="Multipane2">Multipane</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="EditInfo2">Edit Info</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="StatusBar2">Status
                Bar</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Collaborate2">Collaborate</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Rateknobs2">Rateknobs</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="DisplayLists2">Display
                Lists</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Misc">Misc</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="zclipping">Z
                Clipping</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Perspective">Perspective</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Faceplate">Faceplate</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="FaceplateGUI">Faceplate
                GUI</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="KeystrokeForwarding">Keystroke
                Forwarding</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="DepthCueing">Depth
                Cueing</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ZBuffer">Z Buffer</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Lighting">Lighting</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Tools">Tools</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="ADCControlPanel">ADC
                Control Panel</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="GridControlPanel">Grid
                Control Panel</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="QueryRayControlPanel">Query
                Ray Control Panel</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="RaytraceControlPanel">Raytrace
                Control Panel</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="AnimMateControlPanel">Animmate
                Control Panel</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="SolidEditor">Solid
                Editor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="CombinationEditor">Combination
                Editor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ColorEditor">Color
                Editor</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="CommandWindow">Command
                Window</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="GeometryWindow3">Geometry
                Window</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            <link linkend="Help">Help</link>
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <link linkend="AboutMGED">About
                MGED</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Helponcontext">Help on
                context</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="GettingStarted">Getting
                Started</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="ShiftGrips">Shift
                Grips</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Commands">Commands</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Apropos">Apropos</link>
              </para>
            </listitem>
            <listitem>
              <para>
                <link linkend="Manual">Manual</link>
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <section xml:id="GettingStarted">
    <title>Getting Started</title>
    <para>
      <emphasis role="strong">mged</emphasis> <emphasis>[-c] [-d
      display] [-h] [-r] [-x#] [-X#] [database [command]]</emphasis>
    </para>
    <para>
      The -c (Classic MGED) option causes MGED to start in the style of
      previous versions of MGED, that is, by prompting the user to
      select a display manager to attach and by remaining attached to
      the tty. Without this option MGED will detach itself from the tty
      and bring up the new GUI. The -d option provides a way to specify
      a display string. This string is expected to be in the same format
      as the X DISPLAY environment variable. The -h option causes the
      help message to print out. The -r option causes the database to be
      read-only (i.e. no editing allowed). The -x and -X options provide
      a way for the user to specify the debug level of librt and libbu,
      respectively. Note that if MGED is started by redirecting stdin or
      stdout, MGED will not enter interactive mode. Similarly, if MGED
      is started with a command, that command will be executed and MGED
      will exit. If the user starts MGED in <quote>’Classic</quote>’
      mode, the new GUI is still available via the
      <link linkend="gui">gui</link> command. There
      can be many instances of the GUI running at the same time. Each
      instance of the GUI owns four display manager windows (panes) and
      by default each of these panes has its view initialized as
      follows:
    </para>
    <table>
    	<title>MGED GUI COMMANDS</title>
      <tgroup cols="2">
        <colspec align="left" />
        <colspec align="left" />
        <thead>
          <row>
            <entry>
              Pane
            </entry>
            <entry>
              Azimuth and Elevation
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              upper left
            </entry>
            <entry>
              0 90
            </entry>
          </row>
          <row>
            <entry>
              upper right
            </entry>
            <entry>
              35 25
            </entry>
          </row>
          <row>
            <entry>
              lower left
            </entry>
            <entry>
              0 0
            </entry>
          </row>
          <row>
            <entry>
              lower right
            </entry>
            <entry>
              90 0
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>
    </para>
    <para xml:id="button">
      All four panes can be displayed simultaneously, or a single large
      pane containing the active pane can be displayed (look in the
      <quote>’Modes</quote><quote>menu). The active pane is the pane
      that is controlled by the GUI. The active pane can be changed from
      the</quote><quote>Settings</quote><quote>menu, or by certain key
      or mouse button actions. Essentially, any key sequence or mouse
      button action that will pop up an MGED menu in the pane will cause
      the active pane to move to the pane wherein this action occurred.
      For example, alt-f will pop up the file menu and make this pane
      the active pane. Similarly, alt-Button1 will pop up
      the</quote><quote>Settings</quote><quote>menu and alt-Button2 will
      pop up the</quote><quote>Modes</quote>’ menu.
    </para>
    <para>
      The new GUI also provides <quote>’Help on Context</quote><quote>.
      This is always available via the right mouse button (i.e. button
      3). The user can right mouse click on some feature of the GUI and
      a message window pops up with information about the feature. This
      behavior works everywhere except in the drawing panes (i.e.
      display manager windows) where a right mouse button is bound
      to</quote><quote>zoom 2.0</quote>’.
    </para>
    <para>
      There are many new features and improvements in MGED providing
      greater access to its underlying power. The single greatest
      improvement to MGED is the incorporation of Tcl/Tk. Tcl (tool
      command language) is an interpreted command language that can be
      embedded into an application providing the application with an
      interpreter as well as a built-in command language. Tk is an
      extension to Tcl for building GUI’s. Incorporating Tcl/Tk into
      MGED gives the user the ability to develop their own commands and
      GUI’s. Other new features are: command line editing similar to
      tcsh, multiple display managers opened simultaneously, shareable
      resources among display managers, view axes, model axes, edit
      axes, rubber banding for zoom or raytracing, support for color
      schemes, frame buffer support for display managers, snap to grid
      for accuracy with the mouse, query rays for interrogating the
      geometry, and improved solid/object/combination selection from
      among displayed geometry.
    </para>
  </section>
  <section xml:id="CommandWindow">
    <title>Command Window</title>
    <para>
      The main function of the command window is to allow the user to
      enter commands. The command window supports
      <link linkend="cmd_line_ed">command line editing</link> and
      command history. The two supported command line edit modes are
      emacs and vi. Look under File/ Preferences/Command_Line_Edit to
      change the edit mode.
    </para>
    <para>
      There are also two command interpretation modes. One is where MGED
      performs object name matching (i.e. globbing against the database)
      before passing the command line to MGED’s built-in Tcl
      interpreter. This is the same behavior seen in previous releases.
      The other command interpretation mode (Tcl Evaluation) passes the
      command line directly to the Tcl interpreter. Look under
      File/Preferences/ Special_Characters to change the interpretation
      mode.
    </para>
    <para>
      The command window also supports cut and paste as well as text
      scrolling. The default bindings for these operations are similar
      to those found in typical X Window applications such as xterm. For
      example:
    </para>
    <table>
    	<title>Commands</title>
      <tgroup cols="2">
        <colspec align="left" />
        <colspec align="left" />
        <thead>
          <row>
            <entry>
              Key-Button Sequence
            </entry>
            <entry>
              Action
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              ButtonPress-1
            </entry>
            <entry>
              begin text selection
            </entry>
          </row>
          <row>
            <entry>
              ButtonRelease-1
            </entry>
            <entry>
              end text selection
            </entry>
          </row>
          <row>
            <entry>
              Button1-Motion
            </entry>
            <entry>
              add to text selection
            </entry>
          </row>
          <row>
            <entry>
              Shift-Button1
            </entry>
            <entry>
              modify text selection
            </entry>
          </row>
          <row>
            <entry>
              Double-Button-1
            </entry>
            <entry>
              select word
            </entry>
          </row>
          <row>
            <entry>
              Triple-Button-1
            </entry>
            <entry>
              select line
            </entry>
          </row>
          <row>
            <entry>
              ButtonPress-2
            </entry>
            <entry>
              begin text operation
            </entry>
          </row>
          <row>
            <entry>
              ButtonRelease-2
            </entry>
            <entry>
              paste text
            </entry>
          </row>
          <row>
            <entry>
              Button2-Motion
            </entry>
            <entry>
              scroll text
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>
    </para>
    <para>
      Note - If motion was detected while Button2 was being pressed, no
      text will be pasted. In this case, it is assumed that scrolling
      was the intended operation. Of course, the user can also scroll
      the window using the scrollbar.
    </para>
  </section>
  <section xml:id="Panes">
    <title>Panes (Display Manager Windows)</title>
    <para>
      A pane is a place wherein solids/objects are drawn. Here the user
      can interact, via the mouse and/or keyboard, with the panes view
      or with solids/objects that are being edited. The user can also
      <link linkend="AccessMenuBar">access
      menus</link> from the menu bar from within the pane.
    </para>
    <section xml:id="ShiftGrips">
      <title>Shift Grips</title>
      <para>
        MGED offers the user a unified mouse-based interface for
        <quote>grabbing</quote> things and manipulating them. Since it
        was built for compatibility on top of the older interface:
      </para>
      <para>
        Mouse Button
      </para>
      <para>
        View Operation
      </para>
      <para>
        Mouse button
      </para>
      <para>
        View operation
      </para>
      <para>
        Button-1
      </para>
      <para>
        Zoom out
      </para>
      <para>
        Button-2
      </para>
      <para>
        Recenter view at the specified point
      </para>
      <para>
        Button-3
      </para>
      <para>
        Zoom in
      </para>
      <para>
				it uses the modifier keys: Shift, Control, and Alt.
        This use of modified mouse clicks to grab things is called the
        <quote>shift-grip</quote> interface. The Shift and Control keys
        are assigned in combinations to the three basic transformation
        operations as follows:
      </para>
      <para>
        Modifier Key
      </para>
      <para>
        Transformation Operation
      </para>
      <para>
        Shift
      </para>
      <para>
        Translate
      </para>
      <para>
        Ctrl
      </para>
      <para>
        Rotate
      </para>
      <para>
        Shift &amp; Ctrl
      </para>
      <para>
        Scale
      </para>
      <para>
 and the Alt key is assigned the meaning
        <quote>constrained transformation,</quote> which is described
        below. Thus, in general, holding the Shift key and a mouse
        button down and moving the mouse drags things around on the
        screen. The Control key and a mouse button allow one to rotate
        things, and the combination of Shift, Control, and a mouse
        button allow one to expand and contract things. These general
        functionalities are consistent throughout MGED, providing a
        unified interface. The precise meanings of <quote>drag things
        around,</quote> <quote>rotate things,</quote> and <quote>expand
        and contract things</quote> depends on the operating context.
      </para>
      <para>
        When one is merely viewing geometry the shift grips apply by
        default to the view itself. Thus they amount to panning,
        rotating, and zooming the eye relative to the geometry being
        displayed. When one is in solid-edit or matrix-edit mode (what
        used to be called object-edit mode), the shift grips apply by
        default to the model parameters. In this case, they modify the
        location, orientation, or size of object features or entire
        objects in the database.
      </para>
      <para>
        The default behaviors in the viewing and editing modes may be
        overridden by the <quote>Transform</quote> item in the
        <quote>Settings</quote> menu. This allows the user to specify
        that the shift grips should transform the view, the model
        parameters (if one is currently editing a solid or matrix) or
        the angle-distance cursor (in which case the mouse may be used
        to position the ADC, to change its angles, and to expand and
        contract its distance ticks). The behavior of the shift grips
        may be further changed by the <quote>Rotate About</quote> item
        in the <quote>Settings</quote> menu, which allows the user to
        specify the point about which shift-grip rotations should be
        performed. The choices include the view center, the eye, the
        model origin, and an object’s key point.
      </para>
      <section xml:id="CONSTRAINEDTRANSFORMATIONS">
        <title>CONSTRAINED TRANSFORMATIONS</title>
        <para>
          When the Alt key is held down along with either of the Shift
          and Control keys the transformations are constrained to a
          particular axis. For such constrained transformations the
          mouse buttons have the following meanings:
        </para>
        <table>
        	<title>CONSTRAINED TRANSFORMATIONS</title>
          <tgroup cols="2">
            <colspec align="left" />
            <colspec align="left" />
            <thead>
              <row>
                <entry>
                  Mouse Button
                </entry>
                <entry>
                  Axis
                </entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  Button-1
                </entry>
                <entry>
                  x
                </entry>
              </row>
              <row>
                <entry>
                  Button-2
                </entry>
                <entry>
                  y
                </entry>
              </row>
              <row>
                <entry>
                  Button-3
                </entry>
                <entry>
                  z
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <para>
 Thus, if the view is being transformed,
          Alt-Shift-Button-1 allows one to drag the objects being viewed
          left to right along the view-x axis. Similarly, if the model
          parameters are being transformed, Alt-Ctrl-Button-2 allows one
          to rotate the object about a line passing through the
          rotate-about point (as described above) and parallel to a
          y-axis. The coordinate system to which these transformations
          are constrained may be specified by the <quote>Constraint
          Coords</quote> item in the <quote>Settings</quote> menu, which
          allows the selection of any one of the model, view, and object
          coordinate systems.
        </para>
        <para>
          Besides the default mouse button bindings described above, the
          user can access the <quote>’Settings</quote><quote>menu with
          alt-Button1 and the</quote><quote>Modes</quote>’ menu with
          alt-Button2.
        </para>
      </section>
    </section>
    <section xml:id="DefaultKeyBindings">
      <title>Default Key Bindings</title>
      <para>
        MGED offers the user <quote>’short cuts</quote>’ to much of the
        functionality available via the menus as well as the command
        line interface. The table below lists the default key bindings:
      </para>
      <table>
      	<title>Short cut</title>
        <tgroup cols="2">
          <colspec align="left" />
          <colspec align="left" />
          <thead>
            <row>
              <entry>
                Key Sequence
              </entry>
              <entry>
                Behavior
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                a
              </entry>
              <entry>
                toggle angle distance cursor (ADC)
              </entry>
            </row>
            <row>
              <entry>
                e
              </entry>
              <entry>
                toggle edit axes
              </entry>
            </row>
            <row>
              <entry>
                m
              </entry>
              <entry>
                toggle model axes
              </entry>
            </row>
            <row>
              <entry>
                v
              </entry>
              <entry>
                toggle view axes
              </entry>
            </row>
            <row>
              <entry>
                i
              </entry>
              <entry>
                advance illumination pointer forward
              </entry>
            </row>
            <row>
              <entry>
                I
              </entry>
              <entry>
                advance illumination pointer backward
              </entry>
            </row>
            <row>
              <entry>
                p
              </entry>
              <entry>
                simulate mouse press (i.e. to pick a solid)
              </entry>
            </row>
            <row>
              <entry>
                0
              </entry>
              <entry>
                zero knobs
              </entry>
            </row>
            <row>
              <entry>
                x
              </entry>
              <entry>
                rate rotate about x axis
              </entry>
            </row>
            <row>
              <entry>
                y
              </entry>
              <entry>
                rate rotate about y axis
              </entry>
            </row>
            <row>
              <entry>
                z
              </entry>
              <entry>
                rate rotate about z axis
              </entry>
            </row>
            <row>
              <entry>
                X
              </entry>
              <entry>
                rate rotate about x axis
              </entry>
            </row>
            <row>
              <entry>
                Y
              </entry>
              <entry>
                rate rotate about y axis
              </entry>
            </row>
            <row>
              <entry>
                Z
              </entry>
              <entry>
                rate rotate about z axis
              </entry>
            </row>
            <row>
              <entry>
                3
              </entry>
              <entry>
                view - ae 35 25
              </entry>
            </row>
            <row>
              <entry>
                4
              </entry>
              <entry>
                view - ae 45 45
              </entry>
            </row>
            <row>
              <entry>
                f
              </entry>
              <entry>
                front view
              </entry>
            </row>
            <row>
              <entry>
                t
              </entry>
              <entry>
                top view
              </entry>
            </row>
            <row>
              <entry>
                b
              </entry>
              <entry>
                bottom view
              </entry>
            </row>
            <row>
              <entry>
                l
              </entry>
              <entry>
                left view
              </entry>
            </row>
            <row>
              <entry>
                r
              </entry>
              <entry>
                right view
              </entry>
            </row>
            <row>
              <entry>
                R
              </entry>
              <entry>
                rear view
              </entry>
            </row>
            <row>
              <entry>
                s
              </entry>
              <entry>
                enter solid illumination state
              </entry>
            </row>
            <row>
              <entry>
                o
              </entry>
              <entry>
                enter object illumination state
              </entry>
            </row>
            <row>
              <entry>
                q
              </entry>
              <entry>
                reject edit
              </entry>
            </row>
            <row>
              <entry>
                u
              </entry>
              <entry>
                zero knobs and sliders
              </entry>
            </row>
            <row>
              <entry>
                &lt; F1 &gt;
              </entry>
              <entry>
                toggle depthcue
              </entry>
            </row>
            <row>
              <entry>
                &lt; F2 &gt;
              </entry>
              <entry>
                toggle
                <link linkend="zclipping">zclipping</link>
              </entry>
            </row>
            <row>
              <entry>
                &lt; F3 &gt;
              </entry>
              <entry>
                toggle perspective
              </entry>
            </row>
            <row>
              <entry>
                &lt; F4 &gt;
              </entry>
              <entry>
                toggle zbuffer
              </entry>
            </row>
            <row>
              <entry>
                &lt; F5 &gt;
              </entry>
              <entry>
                toggle lighting
              </entry>
            </row>
            <row>
              <entry>
                &lt; F6 &gt;
              </entry>
              <entry>
                toggle perspective angle
              </entry>
            </row>
            <row>
              <entry>
                &lt; F7 &gt;
              </entry>
              <entry>
                toggle
                <link linkend="Faceplate">faceplate</link>
              </entry>
            </row>
            <row>
              <entry>
                &lt; F8 &gt;
              </entry>
              <entry>
                toggle
                <link linkend="FaceplateGUI">Faceplate
                GUI</link>
              </entry>
            </row>
            <row>
              <entry>
                &lt; F9 &gt;
              </entry>
              <entry>
                toggle
                <link linkend="KeystrokeForwarding">keystroke
                forwarding</link>
              </entry>
            </row>
            <row>
              <entry>
                &lt; F12 &gt;
              </entry>
              <entry>
                zero knobs
              </entry>
            </row>
            <row>
              <entry>
                &lt; Left &gt;
              </entry>
              <entry>
                rotate about y axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Right &gt;
              </entry>
              <entry>
                rotate about y axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Down &gt;
              </entry>
              <entry>
                rotate about x axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Up &gt;
              </entry>
              <entry>
                rotate about x axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Shift-Left &gt;
              </entry>
              <entry>
                translate in X direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Shift-Right &gt;
              </entry>
              <entry>
                translate in X direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Shift-Down &gt;
              </entry>
              <entry>
                translate in Z direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Shift-Up &gt;
              </entry>
              <entry>
                translate in Z direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-Shift-Left &gt;
              </entry>
              <entry>
                rotate about z axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-Shift-Right &gt;
              </entry>
              <entry>
                rotate about z axis
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-Shift-Down &gt;
              </entry>
              <entry>
                translate in Y direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-Shift-Up &gt;
              </entry>
              <entry>
                translate in Y direction
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-n &gt;
              </entry>
              <entry>
                goto next view
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-p &gt;
              </entry>
              <entry>
                goto previous view
              </entry>
            </row>
            <row>
              <entry>
                &lt; Control-t &gt;
              </entry>
              <entry>
                toggle between the current view and the last view
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>
        Besides the default key bindings listed above, the user can
        access menu items with <quote>’alt-key</quote><quote>sequences.
        For example, the</quote><quote>File</quote><quote>menu can be
        popped up with alt-f. The raytrace control panel can then be
        popped up by
        typing</quote><quote>r</quote><quote>(i.e.</quote><quote>R</quote><quote>is
        underlined in the</quote>’Raytrace…&quot; menu item).
      </para>
    </section>
  </section>
  <section xml:id="ControlPanels">
    <title>Control Panels</title>
    <para xml:id="ADCControlPanel">
      <emphasis role="strong">ADC Control Panel</emphasis>
    </para>
    <para>
      The <emphasis>ADC Control Panel</emphasis> is a tool for setting
      ADC parameters.
    </para>
    <para xml:id="GridControlPanel">
      <emphasis role="strong">Grid Control Panel</emphasis>
    </para>
    <para>
      The <emphasis>Grid Control Panel</emphasis> is a tool for setting
      grid parameters.
    </para>
    <para xml:id="QueryRayControlPanel">
      <emphasis role="strong">Query Ray Control Panel</emphasis>
    </para>
    <para>
      The <emphasis>Query Ray Control Panel</emphasis> is a tool for
      setting query ray parameters.
    </para>
    <para xml:id="RaytraceControlPanel">
      <emphasis role="strong">Raytrace Control Panel</emphasis>
    </para>
    <para>
      The <emphasis>Raytrace Control Panel</emphasis> is a tool for
      setting raytrace parameters.
    </para>
    <para xml:id="AnimMateControlPanel">
      <emphasis role="strong">AnimMate Control Panel</emphasis>
    </para>
    <para>
      The <emphasis>Animmate Control Panel</emphasis> is a tool for
      building animation scripts. The
      AnimMate tutorial is a
      good place to learn about this control panel.
    </para>
    <para xml:id="SolidEditor">
      <emphasis role="strong">Solid Editor</emphasis>
    </para>
    <para>
      The <emphasis>Solid Editor</emphasis> is a tool for editing
      solids.
    </para>
    <para xml:id="SolidEditorInternal">
      <emphasis role="strong">Solid Editor (Internal)</emphasis>
    </para>
    <para>
      The <emphasis>Solid Editor</emphasis> is a tool for editing MGED’s
      internal solid (i.e. held in es_int while in solid edit state).
      The internal solid is the in-memory copy of a solid that is being
      edited.
    </para>
    <para xml:id="CombinationEditor">
      <emphasis role="strong">Combination Editor</emphasis>
    </para>
    <para xml:id="ColorEditor">
      <emphasis role="strong">Color Editor</emphasis>
    </para>
    <para>
      The <emphasis>Color Editor</emphasis> is a tool for specifying
      colors in either RGB or HSV.
    </para>
  </section>
  <section xml:id="StatusBar">
    <title>Status Bar</title>
    <para>
      The <emphasis>status bar</emphasis> contains two lines for
      displaying information about the state of the active pane. The
      first line contains information about the view center, view size,
      local units, azimuth, elevation, twist, and rate of rotation about
      the x, y and z axes. The second line can contain several different
      things depending on the state. If the angle distance cursor is
      being drawn, information about its parameters are displayed.
      Specifically, angle 1, angle 2, tick distance, center and delta
      are displayed. Otherwise, if in the <emphasis>VIEWING</emphasis>
      state, the frames per second is displayed. If in <emphasis>SOL
      PICK</emphasis> or <emphasis>OBJ PICK</emphasis> state, the full
      path of the illuminated solid is displayed. If in <emphasis>OBJ
      PATH</emphasis> state, the full path of the previously selected
      solid is displayed along with an indication of which matrix along
      the path will be edited. And finally, if in either <emphasis>SOL
      EDIT</emphasis> or <emphasis>OBJ EDIT</emphasis> state the
      keypoint is displayed.
    </para>
  </section>
  <section  xml:id="AccessMenuBar">
    <title xml:id="MenuBar">Menu Bar</title>
    <itemizedlist>
      <listitem>
        <para xml:id="File">
          <emphasis role="strong">File</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="New">
              <emphasis role="strong">New</emphasis>- open a new
              database. Note - the database must not already exist.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Open">
              <emphasis role="strong">Open</emphasis>- open an existing
              database.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Insert">
              <emphasis role="strong">Insert</emphasis>- insert another
              database into the current database.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Extract">
              <emphasis role="strong">Extract</emphasis>- a tool for
              extracting objects out of the current database. This tool
              consists of an entry for specifying the destination file
              and an entry for specifying the objects to be extracted.
            </para>
          </listitem>
          <listitem>
            <para xml:id="g2asc">
              <emphasis role="strong">g2asc</emphasis>- converts the
              current database into an ascii file.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Raytrace">
              <emphasis role="strong">Raytrace</emphasis>- pops up the
              raytrace control panel.
            </para>
          </listitem>
          <listitem>
            <para xml:id="SaveViewAs">
              <emphasis role="strong">Save View As</emphasis>
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="RTscript">
                  RT script - saves the current view as an RT script
                  file.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Plot">
                  <emphasis role="strong">Plot</emphasis>- saves the
                  current view as a plot file.
                </para>
              </listitem>
              <listitem>
                <para xml:id="PostScript">
                  <emphasis role="strong">PostScript</emphasis>- saves
                  the current view a postscript file.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Preferences">
              <emphasis role="strong">Preferences</emphasis>
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Units">
                  Units
                </para>
                <itemizedlist>
                  <listitem>
                    <para xml:id="micrometers">
                      micrometers - set the unit of measure to
                      micrometers. 1 micrometer = 1/1,000,000 meters
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="millimeters">
                      <emphasis role="strong">millimeters</emphasis>-
                      set the unit of measure to millimeters. 1
                      millimeter = 1/1000 meters
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="centimeters">
                      <emphasis role="strong">centimeters</emphasis>-
                      set the unit of measure to centimeters. 1
                      centimeter = 1/100 meters
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="meters">
                      <emphasis role="strong">meters</emphasis>- set the
                      unit of measure to meters.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="kilometers">
                      <emphasis role="strong">kilometers</emphasis>- set
                      the unit of measure to kilometers. 1 kilometer =
                      1000 meters
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="inches">
                      <emphasis role="strong">inches</emphasis>- set the
                      unit of measure to inches. 1 inch = 25.4 mm
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="feet">
                      <emphasis role="strong">feet</emphasis>- set the
                      unit of measure to feet. 1 foot = 12 inches.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="yards">
                      <emphasis role="strong">yards</emphasis>- set the
                      unit of measure to yards. 1 yard = 36 inches.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="miles">
                      <emphasis role="strong">miles</emphasis>- set the
                      unit of measure to miles. 1 mile = 5280 feet.
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para xml:id="CommandLineEdit">
                  <link linkend="cmd_line_ed">Command Line
                  Edit</link>
                </para>
                <itemizedlist>
                  <listitem>
                    <para xml:id="emacs">
                      <link linkend="emacs">emacs</link>
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="vi">
                      <link linkend="vi">vi</link>
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para xml:id="SpecialCharacters">
                  <emphasis role="strong">Special Characters</emphasis>
                </para>
                <itemizedlist>
                  <listitem>
                    <para xml:id="TclEvaluation">
                      <emphasis role="strong">Tcl Evaluation</emphasis>
                      - set the command interpretation mode to Tcl mode.
                      In this mode, globbing is
                      <emphasis role="strong">not</emphasis> performed
                      against MGED database objects. Rather, the command
                      string is passed, unmodified, to the Tcl
                      interpreter.
                    </para>
                  </listitem>
                  <listitem>
                    <para xml:id="ObjectNameMatching">
                      <emphasis role="strong">Object Name
                      Matching</emphasis> - set the command
                      interpretation mode to MGED object name matching.
                      In this mode, globbing is performed against MGED
                      database objects.
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para xml:id="ColorSchemes">
                  <emphasis role="strong">Color Schemes</emphasis> -
                  pops up a tool for setting colors used by drawing
                  panes (display managers).
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Close">
              <emphasis role="strong">Close</emphasis> - close this
              instance of the MGED GUI.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Exit">
              <emphasis role="strong">Exit</emphasis> - exits MGED.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Edit">
          <emphasis role="strong">Edit</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="SolidSelection">
              <emphasis role="strong">Solid Selection</emphasis> - pops
              up a tool for selecting a solid to edit.
            </para>
          </listitem>
          <listitem>
            <para xml:id="MatrixSelection">
              <emphasis role="strong">Matrix Selection</emphasis> - pops
              up a tool for selecting a matrix to edit.
              <link linkend="SolidEditor">Solid
              Editor</link> - pops up a tool for creating and editing
              solids.
              <link linkend="CombinationEditor">Combination
              Editor</link> - pops up a tool for creating and editing
              combinations.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Create">
          <emphasis role="strong">Create</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="MakeSolid">
              <emphasis role="strong">Make Solid</emphasis> - gives the
              user a pulldown menu from which to select a solid to
              create. The following is a list of the available solid
              types that the
              <link linkend="make">make</link> command
              can create: arb8, arb7, arb6, arb5, arb4, sph, grip, ell,
              ellg, tor, tgc, tec, rec, trc, rcc, half, rpc, rhc, epa,
              ehy, eto, part, nmg, pipe.
            </para>
          </listitem>
          <listitem>
            <para xml:id="SoildEditor">
              <link linkend="SolidEditor">Solid
              Editor</link> - pops up a tool for creating and editing
              solids.
            </para>
          </listitem>
          <listitem>
            <para xml:id="CombinationEditor2">
              <link linkend="CombinationEditor">Combination
              Editor</link> - pops up a tool for creating and editing
              combinations.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="View">
          <emphasis role="strong">View</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="Top">
              <emphasis role="strong">Top</emphasis> - view of the top
              (i.e. azimuth = 270, elevation = 90)
            </para>
          </listitem>
          <listitem>
            <para xml:id="Bottom">
              <emphasis role="strong">Bottom</emphasis> - view of the
              bottom (i.e. azimuth = 270, elevation = -90)
            </para>
          </listitem>
          <listitem>
            <para xml:id="Right">
              <emphasis role="strong">Right</emphasis> - view of the
              right (i.e. azimuth = 270, elevation = 0)
            </para>
          </listitem>
          <listitem>
            <para xml:id="Left">
              <emphasis role="strong">Left</emphasis> - view of the left
              (i.e. azimuth = 90, elevation = 0)
            </para>
          </listitem>
          <listitem>
            <para xml:id="Front">
              <emphasis role="strong">Front</emphasis> - view of the
              front (i.e. azimuth = 0, elevation = 0)
            </para>
          </listitem>
          <listitem>
            <para xml:id="Rear">
              <emphasis role="strong">Rear</emphasis> - view of the rear
              (i.e. azimuth = 180, elevation = 0)
            </para>
          </listitem>
          <listitem>
            <para xml:id="az35el25">
              <emphasis role="strong">az35,el25</emphasis> - an oblique
              view (i.e. azimuth = 35, elevation = 25)
            </para>
          </listitem>
          <listitem>
            <para xml:id="az45el45">
              <emphasis role="strong">az45,el45</emphasis> - an oblique
              view (i.e. azimuth = 45, elevation = 45)
            </para>
          </listitem>
          <listitem>
            <para xml:id="ZoomIn">
              <emphasis role="strong">Zoom In</emphasis> - zoom in by a
              factor of 2.
            </para>
          </listitem>
          <listitem>
            <para xml:id="ZoomOut">
              <emphasis role="strong">Zoom Out</emphasis> - zoom out by
              a factor of 2.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Default">
              <emphasis role="strong">Default</emphasis> - same view as
              top (i.e. azimuth = 270, elevation = 90)
            </para>
          </listitem>
          <listitem>
            <para xml:id="MultipaneDefaults">
              <emphasis role="strong">Multipane Defaults</emphasis> -
              sets the view of all four panes to their defaults.
            </para>
            <table>
            	<title>Multipane Defaults</title>
              <tgroup cols="3">
                <colspec align="left" />
                <colspec align="left" />
                <colspec align="left" />
                <thead>
                  <row>
                    <entry>
                      Pane
                    </entry>
                    <entry>
                      Azimuth
                    </entry>
                    <entry>
                      Elevation
                    </entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>
                      upper left
                    </entry>
                    <entry>
                      90
                    </entry>
                    <entry>
                      0
                    </entry>
                  </row>
                  <row>
                    <entry>
                      upper right
                    </entry>
                    <entry>
                      35
                    </entry>
                    <entry>
                      25
                    </entry>
                  </row>
                  <row>
                    <entry>
                      lower left
                    </entry>
                    <entry>
                      0
                    </entry>
                    <entry>
                      0
                    </entry>
                  </row>
                  <row>
                    <entry>
                      lower right
                    </entry>
                    <entry>
                      90
                    </entry>
                    <entry>
                      0
                    </entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </listitem>
          <listitem>
            <para xml:id="Zero">
              <emphasis role="strong">Zero</emphasis> - stops all rate
              transformations.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="ViewRing">
          <emphasis role="strong">ViewRing</emphasis>
          A view ring is simply a dynamic list of views owned by
          a pane (display manager). This mechanism supports multiple
          views within a single pane. A view consists of a position in
          model space, a view size and an orientation.
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="AddView">
              <emphasis role="strong">Add View</emphasis> - Adds a view
              to the view ring.
            </para>
          </listitem>
          <listitem>
            <para xml:id="SelectView">
              <emphasis role="strong">Select View</emphasis> - a
              pulldown menu that lists the views in the view ring that
              can be selected.
            </para>
          </listitem>
          <listitem>
            <para xml:id="DeleteView">
              <emphasis role="strong">Delete View</emphasis> - a
              pulldown menu that lists the views in the view ring that
              can be deleted.
            </para>
          </listitem>
          <listitem>
            <para xml:id="NextView">
              <emphasis role="strong">Next View</emphasis> - go to the
              next view on the view ring.
            </para>
          </listitem>
          <listitem>
            <para xml:id="PrevView">
              <emphasis role="strong">Prev View</emphasis> - go to the
              previous view on the view ring.
            </para>
          </listitem>
          <listitem>
            <para xml:id="LastView">
              <emphasis role="strong">Last View</emphasis> - go to the
              last view. This can be used to toggle between two
              arbitrary views.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Settings">
          <emphasis role="strong">Settings</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="MouseBehavior">
              <emphasis role="strong">Mouse Behavior</emphasis> - a menu
              for selecting among the available mouse behaviors.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Default2">
                  <emphasis role="strong">Default</emphasis> - enter the
                  default MGED mouse behavior mode. In this mode, the
                  user gets mouse behavior that is the same as MGED 4.5
                  and earlier.
                </para>
                <table>
                	<title>Default</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          center view, or some edit action if in an edit
                          state
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Pickeditsolid">
                  <emphasis role="strong">Pick edit-solid</emphasis> -
                  enter pick edit-solid mode. In this mode, the mouse is
                  used to fire rays for selecting a solid to edit. If
                  more than one solid is hit, a listbox of the hit
                  solids is presented. The user then selects a solid to
                  edit from this listbox. If a single solid is hit, it
                  is selected for editing. If no solids were hit, a
                  dialog is popped up saying that nothing was hit. The
                  user must then fire another ray to continue selecting
                  a solid. When a solid is finally selected, solid edit
                  mode is entered. When this happens, the mouse behavior
                  mode is set to default mode. Note - When selecting
                  items from a listbox, a left buttonpress highlights
                  the solid in question until the button is released. To
                  select a solid, double click with the left mouse
                  button.
                </para>
                <table>
                	<title>Commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Fire edit-solid ray
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Pickeditmatrix">
                  <emphasis role="strong">Pick edit-matrix</emphasis> -
                  enter pick edit-matrix mode. In this mode, the mouse
                  is used to fire rays for selecting a matrix to edit.
                  If more than one solid is hit, a listbox of the hit
                  solids is presented. The user then selects a solid
                  from this listbox. If a single solid is hit, that
                  solid is selected. If no solids were hit, a dialog is
                  popped up saying that nothing was hit. The user must
                  then fire another ray to continue selecting a matrix
                  to edit. When a solid is finally selected, the user is
                  presented with a listbox consisting of the path
                  components of the selected solid. From this listbox,
                  the user selects a path component. This component
                  determines which matrix will be edited. After
                  selecting the path component, object/matrix edit mode
                  is entered. When this happens, the mouse behavior mode
                  is set to default mode. Note - When selecting items
                  from a listbox, a left buttonpress highlights the
                  solid/matrix in question until the button is released.
                  To select a solid/matrix, double click with the left
                  mouse button.
                </para>
                <table>
                	<title>Commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Fire edit-matrix ray
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Pickeditcombination">
                  <emphasis role="strong">Pick
                  edit-combination</emphasis> - enter pick
                  edit-combination mode. In this mode, the mouse is used
                  to fire rays for selecting a combination to edit. If
                  more than one combination is hit, a listbox of the hit
                  combinations is presented. The user then selects a
                  combination from this menu. If a single combination is
                  hit, that combination is selected. If no combinations
                  were hit, a dialog is popped up saying that nothing
                  was hit. The user must then fire another ray to
                  continue selecting a combination to edit. When a
                  combination is finally selected, the combination edit
                  tool is presented and initialized with the values of
                  the selected combination. When this happens, the mouse
                  behavior mode is set to default mode. Note - When
                  selecting items from a menu, a left buttonpress
                  highlights the combination in question until the
                  button is released. To select a combination, double
                  click with the left mouse button.
                </para>
                <table>
                	<title>Commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Fire edit-combination ray
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Sweepraytracerectangle">
                  <emphasis role="strong">Sweep
                  raytrace-rectangle</emphasis> - enter sweep
                  raytrace-rectangle mode. If the framebuffer is active,
                  the rectangular area as specified by the user is
                  raytraced. The rectangular area is also painted with
                  the current contents of the framebuffer. Otherwise,
                  only the rectangle is drawn.
                </para>
                <table>
                	<title>Command</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Draw raytrace-rectangle
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Pickraytraceobject">
                  <emphasis role="strong">Pick
                  raytrace-object(s)</emphasis> - enter pick
                  raytrace-object mode. In this mode, the user can pick
                  an object for raytracing or for adding to the list of
                  objects to be raytraced.
                </para>
              </listitem>
              <listitem>
                <para xml:id="queryray">
                  <emphasis role="strong">Query ray</emphasis> - enter
                  query ray mode. In this mode, the mouse is used to
                  fire rays. The data from the fired rays can be viewed
                  textually, graphically or both.
                </para>
                <table>
                	<title>Commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Fire query ray
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Sweeppaintrectangle">
                  <emphasis role="strong">Sweep
                  paint-rectangle</emphasis> - enter sweep
                  paint-rectangle mode. If the framebuffer is active,
                  the rectangular area as specified by the user is
                  painted with the current contents of the framebuffer.
                  Otherwise, only the rectangle is drawn.
                </para>
                <table>
                	<title>commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Draw paint rectangle
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
              <listitem>
                <para xml:id="Sweepzoomrectangle">
                  <emphasis role="strong">Sweep
                  zoom-rectangle</emphasis> - enter sweep zoom-rectangle
                  mode. The rectangular area as specified by the user is
                  used to zoom the view. Note - as the user stretches
                  out the zoom rectangle, the rectangle is constrained
                  to be the same shape as the window. This insures that
                  the user gets what he or she sees.
                </para>
                <table>
                	<title>Commands</title>
                  <tgroup cols="2">
                    <colspec align="left" />
                    <colspec align="left" />
                    <thead>
                      <row>
                        <entry>
                          Mouse Button
                        </entry>
                        <entry>
                          Behavior
                        </entry>
                      </row>
                    </thead>
                    <tbody>
                      <row>
                        <entry>
                          1
                        </entry>
                        <entry>
                          Zoom out by a factor of 2
                        </entry>
                      </row>
                      <row>
                        <entry>
                          2
                        </entry>
                        <entry>
                          Draw zoom-rectangle
                        </entry>
                      </row>
                      <row>
                        <entry>
                          3
                        </entry>
                        <entry>
                          Zoom in by a factor of 2
                        </entry>
                      </row>
                    </tbody>
                  </tgroup>
                </table>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Transform">
              <emphasis role="strong">Transform</emphasis> - a menu for
              selecting a transform mode. The transform mode determines
              what will be transformed when using the mouse.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="View2">
                  <emphasis role="strong">View</emphasis> - set the
                  transform mode to VIEW. When in VIEW mode, the mouse
                  can be used to transform the view. This is the
                  default.
                </para>
              </listitem>
              <listitem>
                <para xml:id="ADC">
                  <emphasis role="strong">ADC</emphasis> - set the
                  transform mode to ADC. When in ADC mode, the mouse can
                  be used to transform the angle distance cursor while
                  the angle distance cursor is being displayed. If the
                  angle distance cursor is not being displayed, the
                  behavior is the same as VIEW mode.
                </para>
              </listitem>
              <listitem>
                <para xml:id="ModelParams">
                  <emphasis role="strong">Model Params</emphasis> - set
                  the transform mode to Model Params. When in Model
                  Params mode, the mouse can be used to transform the
                  model parameters.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="ConstraintCoords">
              <emphasis role="strong">Constraint Coords</emphasis> - a
              menu for selecting a coordinate system to use while
              performing
             	constrained transformations with the mouse.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Model">
                  <emphasis role="strong">Model</emphasis> - constrained
                  transformations will use model coordinates.
                </para>
              </listitem>
              <listitem>
                <para xml:id="View3">
                  <emphasis role="strong">View</emphasis> - constrained
                  transformations will use view coordinates.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Object">
                  <emphasis role="strong">Object</emphasis> -
                  constrained transformations will use object
                  coordinates.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="RotateAbout">
              <emphasis role="strong">Rotate About</emphasis> - a menu
              for selecting the point about which to rotate.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="ViewCenter">
                  <emphasis role="strong">View Center</emphasis> - set
                  the center of rotation to be about the view center.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Eye">
                  <emphasis role="strong">Eye</emphasis> - set the
                  center of rotation to be about the eye.
                </para>
              </listitem>
              <listitem>
                <para xml:id="ModelOrigin">
                  <emphasis role="strong">Model Origin</emphasis> - set
                  the center of rotation to be about the model origin.
                </para>
              </listitem>
              <listitem>
                <para xml:id="KeyPoint">
                  <emphasis role="strong">Key Point</emphasis> - set the
                  center of rotation to be about the key point.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="ApplyActivePane">
              <emphasis role="strong">Active Pane</emphasis> - a menu
              for selecting the active pane. The active pane is the pane
              (display manager) that is tied to the GUI, effectively
              becoming the target of GUI interactions that affect panes.
              In other words, if the user types the command, <quote>’ae
              35 25</quote><quote>in the command window, and the active
              pane is the upper left pane, then its</quote> view
              orientation will become azimuth=35 and elevation=25.
              Similarly, if the user selects Settings/Grid/Draw_Grid
              from the pulldown menus the drawing of the grid will be
              toggled in the active pane.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="UpperLeft">
                  <emphasis role="strong">Upper Left</emphasis> - set
                  the active pane to be the upper left pane. Any
                  interaction with the GUI that affects a pane will be
                  directed at the upper left pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="UpperRight">
                  <emphasis role="strong">Upper Right</emphasis> - set
                  the active pane to be the upper right pane. Any
                  interaction with the GUI that affects a pane will be
                  directed at the upper right pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="LowerLeft">
                  <emphasis role="strong">Lower Left</emphasis> - set
                  the active pane to be the lower left pane. Any
                  interaction with the GUI that affects a pane will be
                  directed at the lower left pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="LowerRight">
                  <emphasis role="strong">Lower Right</emphasis> - set
                  the active pane to be the lower right pane. Any
                  interaction with the GUI that affects a pane will be
                  directed at the lower right pane.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="ApplyTo">
              <emphasis role="strong">Apply To</emphasis> - a menu for
              selecting the <quote>’Apply To</quote>’ mode. This further
              specifies what pane(s) will be affected by actions that
              affect panes.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="ActivePane">
                  <emphasis role="strong">Active Pane</emphasis> - set
                  the <quote>’Apply To</quote>’ mode such that the
                  user’s interaction with the GUI is applied to the
                  active pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="LocalPanes">
                  <emphasis role="strong">Local Panes</emphasis> - set
                  the <quote>’Apply To</quote>’ mode such that the
                  user’s interaction with the GUI is applied to all
                  panes local to this instance of the GUI.
                </para>
              </listitem>
              <listitem>
                <para xml:id="ListedPanes">
                  <emphasis role="strong">Listed Panes</emphasis> - set
                  the <quote>’Apply To</quote>’ mode such that the
                  user’s interaction with the GUI is applied to all
                  panes listed in the Tcl variable
                  mged_gui(id,apply_list) (Note - id refers to the GUI’s
                  id).
                </para>
              </listitem>
              <listitem>
                <para xml:id="AllPanes">
                  <emphasis role="strong">All Panes</emphasis> - set the
                  <quote>’Apply To</quote>’ mode such that the user’s
                  interaction with the GUI is applied to all panes.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="QueryRayEffects">
              <emphasis role="strong">Query Ray Effects</emphasis> - a
              menu for selecting the effects the user will see as a
              result of firing a query ray.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Text">
                  <emphasis role="strong">Text</emphasis> - set qray
                  effects mode to <quote>’text</quote>’. In this mode,
                  only textual output is used to represent the results
                  of firing a query ray.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Graphics">
                  <emphasis role="strong">Graphics</emphasis> - set qray
                  effects mode to <quote>’graphics</quote>’. In this
                  mode, only graphical output is used to represent the
                  results of firing a query ray.
                </para>
              </listitem>
              <listitem>
                <para xml:id="both">
                  <emphasis role="strong">both</emphasis> - set qray
                  effects mode to <quote>’both</quote>’. In this mode,
                  both textual and graphical output is used to represent
                  the results of firing a query ray.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Grid">
              <emphasis role="strong">Grid</emphasis> - a menu of grid
              related settings. A grid is a lattice of points over the
              pane. The regular spacing between the points gives the
              user accurate visual cues regarding dimension. After
              setting the anchor point and grid spacing, the user can
              use snapping to gain a high degree of accuracy while using
              the mouse.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Anchor">
                  <emphasis role="strong">Anchor</emphasis> - this pops
                  up an entry dialog for specifying the grid anchor
                  point. The grid anchor point is a point such that when
                  the grid is drawn one of its points must be located
                  exactly at the anchor point. The anchor point is
                  specified using model coordinates and local units.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Spacing">
                  <link linkend="GridSpacing">Spacing</link>
                </para>
              </listitem>
              <listitem>
                <para xml:id="DrawGrid">
                  <emphasis role="strong">Draw Grid</emphasis> - toggles
                  drawing the grid.
                </para>
              </listitem>
              <listitem>
                <para xml:id="SnapToGrid">
                  <emphasis role="strong">Snap To Grid</emphasis> -
                  toggles snapping to grid points. When snapping to grid
                  points is active, the user’s mouse actions are
                  <quote>’snapped</quote>’ to the nearest grid point
                  before being further processed. This gives the user a
                  high degree of accuracy while using the mouse.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="GridSpacing">
              <emphasis role="strong">Grid Spacing</emphasis> - a menu
              for selecting <quote>’canned</quote>’ grid spacings. Note
              - all of these selections will result in a square grid.
            </para>
        </listitem>
              <listitem>
                <para xml:id="Autosize">
                  <emphasis role="strong">Autosize</emphasis> - set the
                  grid spacing according to the current view size. The
                  number of ticks will be between 20 and 200 in user
                  units. The major spacing will be set to 10 ticks per
                  major.
                ole="par
            </para>
              </listitem>
              <listitem>
                <para xml:id="Arbitrary">
                  <emphasis role="strong">Arbitrary</emphasis> - pops up
                  the grid spacing entry dialog. The user can use this
                  to set both the horizontal and vertical tick spacing.
                </para>
              </listitem>
              <listitem>
                <para xml:id="micrometer">
                  <emphasis role="strong">micrometer</emphasis> - set
                  the horizontal and vertical tick spacing to 1
                  micrometer.
                </para>
              </listitem>
              <listitem>
                <para xml:id="millimeter">
                  <emphasis role="strong">millimeter</emphasis> - set
                  the horizontal and vertical tick spacing
                </para>
              </listitem>
              <listitem>
                <para xml:id="centimeter">
                  <emphasis role="strong">centimeter</emphasis> - set
                  the horizontal and vertical tick spacing to 1
                  millimeter.
                </para>
              </listitem>
              <listitem>
                <para xml:id="decimeter">
                  <emphasis role="strong">decimeter</emphasis> - set the
                  horizontal and vertical tick spacing to 1 decimeter.
                </para>
              </listitem>
              <listitem>
                <para xml:id="meter">12
                  <emphasis role="strong">meter</emphasis> - set the
                  horizontal and vertical tick spacing to 1 meter.
                </para>
              </listitem>
              <listitem>
                <para xml:id="kilometer">
                  <emphasis role="strong">kilometer</emphasis> - set the
                  horizontal and vertical tick spacing to 1 kilometer.
                </para>
              </listitem>
              <listitem>
                <para xml:id="inch10">
                  <emphasis role="strong">1/10 inch</emphasis> - set the
                  horizontal and vertical tick spacing to 1/10 inches.
                </para>
              </listitem>
              <listitem>
                <para xml:id="inch14">
                  <emphasis role="strong">1/4 inch</emphasis> - set the
                  horizontal and vertical tick spacing to 1/4 inches.
                </para>
              </listitem>
              <listitem>
                <para xml:id="inch12">
                  <emphasis role="strong">1/2 inch</emphasis> - set the
                  horizontal and vertical tick spacing to 1/2 inches.
                </para>
              </listitem>
              <listitem>
                <para xml:id="inch">
                  <emphasis role="strong">inch</emphasis> - set the
                  horizontal and vertical tick spacing to 1 inch.
                </para>
              </listitem>
              <listitem>
                <para xml:id="foot">
                  <emphasis role="strong">foot</emphasis> - set the
                  horizontal and vertical tick spacing to 1 foot.
                </para>
              </listitem>
              <listitem>
                <para xml:id="yard">
                  <emphasis role="strong">yard</emphasis> - set the
                  horizontal and vertical tick spacing to 1 yard.
                </para>
              </listitem>
              <listitem>
                <para xml:id="mile">
                  <emphasis role="strong">mile</emphasis> - set the
                  horizontal and vertical tick spacing to 1 mile.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Framebuffer">
              <emphasis role="strong">Framebuffer</emphasis> - a menu of
              framebuffer related settings.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="All">
                  <emphasis role="strong">All</emphasis> - use the
                  entire pane for the framebuffer.
                </para>
              </listitem>
              <listitem>
                <para xml:id="RectangleArea">
                  <emphasis role="strong">Rectangle Area</emphasis> -
                  use only the specified rectangular area of the
                  framebuffer.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Overlay">
                  <emphasis role="strong">Overlay</emphasis> - put the
                  framebuffer in overlay mode. In this mode, the
                  framebuffer data is placed in the pane after the
                  geometry is drawn (i.e. the framebuffer data is is
                  drawn on top of the geometry).
                </para>
              </listitem>
              <listitem>
                <para xml:id="Underlay">
                  <emphasis role="strong">Underlay</emphasis> - put the
                  framebuffer in underlay mode. In this mode, the
                  framebuffer data is placed in the pane before the
                  geometry is drawn (i.e. the geometry is drawn on top
                  of the framebuffer data).
                </para>
              </listitem>
              <listitem>
                <para xml:id="FramebufferActive">
                  <emphasis role="strong">Framebuffer Active</emphasis>
                  - this toggles the framebuffer.
                </para>
              </listitem>
              <listitem>
                <para xml:id="ListenForClients">
                  <emphasis role="strong">Listen For Clients</emphasis>
                  - this toggles listening for clients. If the
                  framebuffer is listening for clients, new data can be
                  passed into the framebuffer. Otherwise, the
                  framebuffer is write protected. Actually, it is also
                  read protected. In other words, in order for programs
                  outside of MGED to communicate with any of MGED’s
                  framebuffers, the intended framebuffers must be
                  listening.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="ViewAxesPosition">
              <emphasis role="strong">View Axes Position</emphasis> - a
              menu of <quote>’canned</quote>’ view axes positions.
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="Center">
                  <emphasis role="strong">Center</emphasis> - locate the
                  view axes in the center of the active pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="LowerLeft2">
                  <emphasis role="strong">Lower Left</emphasis> - locate
                  the view axes in the lower left corner of the active
                  pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="UpperLeft2">
                  <emphasis role="strong">Upper Left</emphasis> - locate
                  the view axes in the upper left corner of the active
                  pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="UpperRight2">
                  <emphasis role="strong">Upper Right</emphasis> -
                  locate the view axes in the upper right corner of the
                  active pane.
                </para>
              </listitem>
              <listitem>
                <para xml:id="LowerRight2">
                  <emphasis role="strong">Lower Right</emphasis> -
                  locate the view axes in the lower right corner of the
                  active pane.
                </para>
              </listitem>
      <listitem>
        <para xml:id="Modes">
          <emphasis role="strong">Modes</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="DrawGrid2">
              <emphasis role="strong">Draw Grid</emphasis> - toggle
              drawing the grid. The grid is a lattice of points over the
              pane (display manager). The regular spacing between the
              points gives the user accurate visual cues regarding
              dimension. This spacing can be set by the user.
            </para>
          </listitem>
          <listitem>
            <para xml:id="SnapToGrid2">
              <emphasis role="strong">Snap To Grid</emphasis> - toggles
              snapping to grid points. When snapping to grid points is
              active, the user’s mouse actions are
              <quote>’snapped</quote>’ to the nearest grid point before
              being further processed. This gives the user a high degree
              of accuracy while using the mouse.
            </para>
          </listitem>
          <listitem>
            <para xml:id="FramebufferActive2">
              <emphasis role="strong">Framebuffer Active</emphasis> -
              this toggles the framebuffer.
            </para>
          </listitem>
          <listitem>
            <para xml:id="ListenForClients2">
              <emphasis role="strong">Listen For Clients</emphasis> this
              toggles listening for clients. If the framebuffer is
              listening for clients, new data can be passed into the
              framebuffer. Otherwise, the framebuffer is write
              protected. Actually, it is also read protected. In other
              words, in order for programs outside of MGED to
              communicate with any of MGED’s framebuffers, the intended
              framebuffers must be listening.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Persistentsweeprectangle2">
              <emphasis role="strong">Persistent sweep
              rectangle</emphasis> - this toggles drawing the rectangle
              while idle. For example, if the sweep rectangle is not
              persistent, the rectangle will not be drawn unless the
              user is actively sweeping out a rectangle (i.e. for
              raytracing, zoom etc.). And if the sweep rectangle is
              persistent, the rectangle will always be drawn.
            </para>
          </listitem>
          <listitem>
            <para xml:id="AngleDistCursor2">
              <emphasis role="strong">Angle/Dist Cursor</emphasis> -
              toggles drawing the angle distance cursor.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Faceplate">
              <emphasis role="strong">Faceplate</emphasis> - toggles
              drawing the <quote>’Classic MGED</quote>’ faceplate.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Axes">
              <emphasis role="strong">Axes</emphasis> - a menu of axes
            </para>
            <itemizedlist>
              <listitem>
                <para xml:id="View4">
                  <emphasis role="strong">View</emphasis> - toggle
                  display of the view axes. The view axes are used to
                  give the user visual cues indicating the current view
                  of model space. These axes are drawn the same as the
                  model axes, except that the view axes’ position is
                  fixed in view space. This position as well as other
                  characteristics can be set by the user using
                  <link linkend="rset">rset</link>.
                </para>
              </listitem>
              <listitem>
                <para xml:id="model">
                  <emphasis role="strong">Model</emphasis> - toggle
                  display of the model axes. The model axes are used to
                  give the user visual cues indicating the current view
                  of model space. The model axes are by default located
                  at the model origin and are fixed in model space. So,
                  if the user transforms the view, the model axes will
                  move with respect to the view. The model axes position
                  as well as other characteristics can be set by the
                  user using
                  <link linkend="rset">rset</link>.
                </para>
              </listitem>
              <listitem>
                <para xml:id="Edit2">
                  <emphasis role="strong">Edit</emphasis> - toggle
                  display of the edit axes. The edit axes are used to
                  give the user visual cues indicating how the edit is
                  progressing. They consist of a pair of axes. One
                  remains unmoved, while the other moves to indicate how
                  things have changed. Characteristics of the edit axes
                  can be changed using
                  <link linkend="rset">rset</link>.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para xml:id="Multipane2">
              <emphasis role="strong">Multipane</emphasis> - toggle
              between multipane and single pane mode. In multipane mode
              there are four panes, each with its own state.
            </para>
          </listitem>
          <listitem>
            <para xml:id="EditInfo2">
              <emphasis role="strong">Edit Info</emphasis> - Toggle
              display of edit information. If in solid edit state, the
              edit information is displayed in the internal solid
              editor. This editor, as its name implies, can be used to
              edit the solid as well as to view its contents. If in
              object edit state, the object information is displayed in
              a dialog box.
            </para>
          </listitem>
          <listitem>
            <para xml:id="StatusBar2">
              <link linkend="StatusBar">Status Bar</link>
              - toggle display of the command window’s status bar.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Collaborate2">
              <emphasis role="strong">Collaborate</emphasis> - toggle
              collaborate mode. When in collaborate mode, the upper
              right pane’s view can be shared with other instances of
              MGED’s new GUI that are also collaborating.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Rateknobs2">
              <emphasis role="strong">Rateknobs</emphasis> - toggle rate
              knob mode. When in rate knob mode, transformation with the
              mouse becomes rate based. For example, if the user rotates
              the view about the X axis, the view continues to rotate
              about the X axis until the rate rotation is stopped.
            </para>
          </listitem>
          <listitem>
            <para xml:id="DisplayLists2">
              <emphasis role="strong">Display Lists</emphasis> - toggle
              the use of display lists. This currently affects only Ogl
              display managers. When using display lists the screen
              update time is significantly faster. This is especially
              noticeable when running MGED remotely. Use of display
              lists is encouraged unless the geometry being viewed is
              bigger than the Ogl server can handle (i.e. the server
              runs out of available memory for storing display lists).
              When this happens the machine will begin to swap (and
              little else). If huge pieces of geometry need to be
              viewed, consider toggling off display lists. Note that
              using display lists while viewing geometry of any
              significant size will incur noticeable compute time up
              front to create the display lists.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Misc">
          <emphasis role="strong2">Misc</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="zclipping">
              <emphasis role="strong2">Z Clipping</emphasis> - toggles
              zclipping. When zclipping is active, the Z value of each
              point is checked against the min and max Z values of the
              viewing cube. If the Z value of the point is found to be
              outside this range, it is clipped (i.e. not drawn).
              Zclipping can be used to remove geometric detail that may
              be occluding geometry of greater interest.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Perspective">
              <emphasis role="strong">Perspective</emphasis> - toggles
              perspective_mode.
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="strong">Faceplate</emphasis> - toggles
              drawing the <quote>’Classic MGED</quote>’ faceplate.
            </para>
          </listitem>
          <listitem>
            <para xml:id="FaceplateGUI">
              <emphasis role="strong">Faceplate GUI</emphasis> - toggles
              drawing the <quote>’Classic MGED</quote>’ user interface
              (i.e. faceplate menu and scrollbars)
            </para>
          </listitem>
          <listitem>
            <para xml:id="KeystrokeForwarding">
              <emphasis role="strong">Keystroke Forwarding</emphasis> -
              toggles keystroke forwarding. When keystroke forwarding is
              active, any key events get forwarded to the command window
              for processing as if the user was typing directly into the
              command window. This behavior can often save the user time
              by not having to move the mouse out of the geometry window
              in order to type commands. The effects of any commands
              apply to the pane wherein the command was entered,
              regardless of whether or not this pane is the active pane.
            </para>
          </listitem>
          <listitem>
            <para xml:id="DepthCueing">
              <emphasis role="strong">Depth Cueing</emphasis> - toggles
              depth cueing. When depth cueing is active, lines that are
              farther away appear more faint.
            </para>
          </listitem>
          <listitem>
            <para xml:id="ZBuffer">
              <emphasis role="strong">Z Buffer</emphasis> - toggles Z
              buffer.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Lighting">
              <emphasis role="strong">Lighting</emphasis> - toggles
              lighting.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Tools">
          <emphasis role="strong">Tools</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="ADCControlPanel3">
              <link linkend="ADCControlPanel">ADC
              Control Panel</link> - pops up a tool for controlling the
              angle distance cursor.
            </para>
          </listitem>
          <listitem>
            <para xml:id="GridControlPanel2">
              <link linkend="GridControlPanel">Grid
              Control Panel</link> - pops up a tool for setting grid
              parameters.
            </para>
          </listitem>
          <listitem>
            <para xml:id="QueryRayControlPanel2">
              <link linkend="QueryRayControlPanel">Query
              Ray Control Panel</link> - pops up a tool for setting
              query ray parameters.
            </para>
          </listitem>
          <listitem>
            <para xml:id="RaytraceControlPanel2">
              <link linkend="RaytraceControlPanel">Raytrace
              Control Panel</link> - pops up a tool for raytracing.
            </para>
          </listitem>
          <listitem>
            <para xml:id="AnimMateControlPanel2">
              <link linkend="AnimMateControlPanel">Animmate
              Control Panel</link> - pops up for building animation
              scripts.
            </para>
          </listitem>
          <listitem>
            <para xml:id="SolidEditor3">
              <link linkend="SolidEditor">Solid
              Editor</link> - pops up a tool for creating and editing
              solids.
            </para>
          </listitem>
          <listitem>
            <para xml:id="CombinationEditor3">
              <link linkend="CombinationEditor">Combination
              Editor</link> - pops up a tool for creating and editing
              combinations.
            </para>
          </listitem>
          <listitem>
            <para xml:id="ColorEditor3">
              <link linkend="ColorEditor">Color
              Editor</link> - pops up a tool for defining a color
            </para>
          </listitem>
          <listitem>
            <para xml:id="CommandWindow3">
              <emphasis role="strong">Command Window</emphasis> - this
              is a convenience button that raises the command window.
            </para>
          </listitem>
          <listitem>
            <para xml:id="GeometryWindow3">
              <emphasis role="strong">Geometry Window</emphasis> - this
              is a convenience button that raises the geometry window.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para xml:id="Help">
          <emphasis role="strong">Help</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para xml:id="AboutMGED">
              <emphasis role="strong">About MGED</emphasis>
            </para>
          </listitem>
          <listitem>
            <para xml:id="Helponcontext">
              <emphasis role="strong">Help on context</emphasis> - The
              new GUI provides <quote>’Help on Context</quote><quote>.
              This is always available via the right mouse button (i.e.
              button 3). The user can right mouse click on some feature
              of the GUI and a message window pops up with information
              about the feature. This behavior works everywhere except
              in the drawing panes (i.e. display manager windows) where
              a right mouse button is bound to</quote><quote>zoom
              2.0</quote>’.
            </para>
          </listitem>
          <listitem>
            <para xml:id="GettingStarted3">
              <link linkend="GettingStarted">Getting
              Started</link>
            </para>
          </listitem>
          <listitem>
            <para xml:id="ShiftGrips3">
              <link linkend="ShiftGrips">Shift
              Grips</link>
            </para>
          </listitem>
          <listitem>
            <para xml:id="Commands">
              <emphasis role="strong">Commands</emphasis> - pops up a
              tool for getting information on MGED’s commands.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Apropos">
              <emphasis role="strong">Apropos</emphasis> - pops up a
              tool for searching for information about MGED’s commands.
            </para>
          </listitem>
          <listitem>
            <para xml:id="Manual">
              <emphasis role="strong">Manual</emphasis> - start a tool
              for browsing the online MGED manual. The web browser that
              gets started is dependent, first, on the WEB_BROWSER
              environment variable. If this variable exists and the
              browser identified by this variable exists, then that
              browser is used. Failing that the browser specified by the
              mged_default(web_browser) Tcl variable is tried. As a last
              resort, the existence of /usr/bin/netscape,
              /usr/local/bin/netscape and /usr/X11/bin/netscape is
              checked. If a browser has still not been located, the
              built-in Tcl browser is used.
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
</listitem>
</itemizedlist>
	 </section>
	</section>
</section>
<section xml:id="cmd_line_ed">
	<title>
		Command Line Editing
	</title>
		<section>
			<title>
Emacs Bindings
</title>
	<para>
		<programlisting>

<emphasis role="bold">Key Sequence</emphasis>			<emphasis role="bold">Function</emphasis>
BackSpace				backward delete character
Delete					backward delete character
Left					backward character
Right					forward character
Up						previous command
Down					next command
Home					beginning of line
End						end of line
C-a						move to beginning of line
C-b						move back one character
C-c						interrupt
C-d						delete character at cursor
C-e						move to end of line
C-f						move forward one character
C-h						backward delete character
C-k						delete to end of line
C-n						next history command
C-p						previous history command
C-t						transpose characters
C-u						delete whole line
C-w						backward delete word
</programlisting>
	</para>
</section>
<section>
	<title>
	VI Bindings
</title>
<para>
	<emphasis role="bold">
Insert and Command Mode
</emphasis>
</para>
<para>
	<programlisting>
<emphasis role="bold">Key Sequence</emphasis>   	<emphasis role="bold">Function</emphasis>
Delete			backward delete character
Up				previous command
Down			next command
Home			beginning of line
End				end of 	line
Control-a		beginning of line
Control-b		backward character
Control-c		interrupt command
Control-e		end of line
Control-f		forward character
Control-h		backward delete character
Control-k		delete end of line
Control-n		next command
Control-p		previous command
Control-t		transpose
Control-u		delete to beginning of line
Control-w		backward delete word
</programlisting>
</para>
</section>
<section>
<title>
Insert Mode
</title>
<para>
	<programlisting>
<emphasis role="bold">Key Sequence</emphasis> 		<emphasis role="bold">Function</emphasis>
Escape			command
Left			backward character, command
Right			forward character, command
BackSpace		backward delete character
</programlisting>
</para>
</section>
<section>
	<title>
Command Mode
</title>
<para>
	<programlisting>
<emphasis role="bold">
Key Sequence</emphasis>			<emphasis role="bold">Function</emphasis>
Left				backward character
Right				forward character
BackSpace			backward character
Space				forward character
A					end of line, insert (i.e. append to end of line)
C					delete to end of line, insert
D					delete to end of line
F					search backward character
I					beginning of line, insert
R					overwrite
X					backward delete character
0					beginning of line
$					end of line
;					continue search in same direction
,					continue search in opposite direction
a					forward character, insert (i.e. append)
b					backward word
c					change
d					delete
e					end of word
f					search forward character
h					backward character
i					insert
j 					next command
k	 				previous command
l					forward character
r 					replace character
s					delete character, insert
w					forward word
x 					delete character
</programlisting>
</para>
</section>
	</section>

<section>
	<title>
		MGED User Commands
	</title>
	<section xml:id="MGEDUserCommands">
		<title>
			MGED User Commands
		</title>
  <table frame="all">
  	<title>MGED User Commands</title>
  <tgroup cols='5' align='left' colsep='1' rowsep='1'>
    <tbody>
      <row>
  <entry>
    <link linkend="percent">%</link>
  </entry>
  <entry>
    <link linkend="ptarb">3ptarb</link>
  </entry>
  <entry>
    <link linkend="questionmark">?</link>
  </entry>
  <entry>
    <link linkend="questionmarkdevel">?devel</link>
  </entry>
  <entry>
    <link linkend="questionmarklib">?lib</link>
  </entry>
</row>
<row>
   <entry>
    <link linkend="B">B</link>
  </entry>
  <entry>
    <link linkend="E">E</link>
  </entry>
  <entry>
    <link linkend="M">M</link>
  </entry>
  <entry>
    <link linkend="z">Z</link>
  </entry>
  <entry>
    <link linkend="adc">adc</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="ae">ae</link>
  </entry>
  <entry>
    <link linkend="analyze">analyze</link>
  </entry>
  <entry>
    <link linkend="animmate">animmate</link>
  </entry>
  <entry>
    <link linkend="apropos">apropos</link>
  </entry>
  <entry>
    <link linkend="aproposdevel">aproposdevel</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="aproposlib">aproposlib</link>
  </entry>
  <entry>
    <link linkend="ARB">arb</link>
  </entry>
  <entry>
    <link linkend="arced">arced</link>
  </entry>
  <entry>
    <link linkend="area">area</link>
  </entry>
  <entry>
    <link linkend="arot">arot</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="attach">attach</link>
  </entry>
  <entry>
    <link linkend="attr">attr</link>
  </entry>
  <entry>
    <link linkend="autoview">autoview</link>
  </entry>
  <entry>
    <link linkend="bev">bev</link>
  </entry>
  <entry>
    <link linkend="bo">bo</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="bot_condense">bot_condense</link>
  </entry>
  <entry>
    <link linkend="bot_decimate">bot_decimate</link>
  </entry>
  <entry>
    <link linkend="bot_face_fuse">bot_face_fuse</link>
  </entry>
  <entry>
    <link linkend="bot_face_sort">bot_face_sort</link>
  </entry>
  <entry>
    <link linkend="bot_face_fuse">bot_face_fuse</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="bot_vertex_fuse">bot_vertex_fuse</link>
  </entry>
  <entry>
    <link linkend="build_region">build_region</link>
  </entry>
  <entry>
    <link linkend="c">c</link>
  </entry>
  <entry>
    <link linkend="cat">cat</link>
  </entry>
  <entry>
    <link linkend="center">center</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="color">color</link>
  </entry>
  <entry>
    <link linkend="comb">comb</link>
  </entry>
  <entry>
    <link linkend="comb_color">comb_color</link>
  </entry>
  <entry>
    <link linkend="copyeval">copyeval</link>
  </entry>
  <entry>
    <link linkend="copymat">copymat</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="cp">cp</link>
  </entry>
  <entry>
    <link linkend="cpi">cpi</link>
  </entry>
  <entry>
    <link linkend="d">d</link>
  </entry>
  <entry>
    <link linkend="dall">dall</link>
  </entry>
  <entry>
    <link linkend="db">db</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="db_glob">db_glob</link>
  </entry>
  <entry>
    <link linkend="dbconcat">dbconcat</link>
  </entry>
  <entry>
    <link linkend="debugbu">debugbu</link>
  </entry>
  <entry>
    <link linkend="debugdir">debugdir</link>
  </entry>
  <entry>
    <link linkend="debuglib">debuglib</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="debugmem">debugmem</link>
  </entry>
  <entry>
    <link linkend="debugnmg">debugnmg</link>
  </entry>
  <entry>
    <link linkend="decompose">decompose</link>
  </entry>
  <entry>
    <link linkend="delay">delay</link>
  </entry>
  <entry>
    <link linkend="dm">dm</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="draw">draw</link>
  </entry>
  <entry>
    <link linkend="dup">dup</link>
  </entry>
  <entry>
    <link linkend="e">e</link>
  </entry>
  <entry>
    <link linkend="eac">eac</link>
  </entry>
  <entry>
    <link linkend="echo">echo</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="edcodes">edcodes</link>
  </entry>
  <entry>
    <link linkend="edcolor">edcolor</link>
  </entry>
  <entry>
    <link linkend="edcomb">edcomb</link>
  </entry>
  <entry>
    <link linkend="edgedir">edgedir</link>
  </entry>
  <entry>
    <link linkend="edmater">edmater</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="eqn">eqn</link>
  </entry>
  <entry>
    <link linkend="em">em</link>
  </entry>
  <entry>
    <link linkend="erase">erase</link>
  </entry>
  <entry>
    <link linkend="erase_all">erase_all</link>
  </entry>
  <entry>
    <link linkend="ev">ev</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="exit">exit</link>
  </entry>
  <entry>
    <link linkend="expand">expand</link>
  </entry>
  <entry>
    <link linkend="export_body">export_body</link>
  </entry>
  <entry>
    <link linkend="expand_comb">expand_comb</link>
  </entry>
  <entry>
    <link linkend="extrude">extrude</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="eye_pt">eye_pt</link>
  </entry>
  <entry>
    <link linkend="e_muves">e_muves</link>
  </entry>
  <entry>
    <link linkend="facedef">facedef</link>
  </entry>
  <entry>
    <link linkend="facetize">facetize</link>
  </entry>
  <entry>
    <link linkend="find">find</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="fracture">fracture</link>
  </entry>
  <entry>
    <link linkend="g">g</link>
  </entry>
  <entry>
    <link linkend="garbage_collect">garbage_collect</link>
  </entry>
  <entry>
    <link linkend="gui">gui</link>
  </entry>
  <entry>
    <link linkend="help">help</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="helpdevel">helpdevel</link>
  </entry>
  <entry>
    <link linkend="helplib">helplib</link>
  </entry>
  <entry>
    <link linkend="hide">hide</link>
  </entry>
  <entry>
    <link linkend="history">history</link>
  </entry>
  <entry>
    <link linkend="i">i</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="idents">idents</link>
  </entry>
  <entry>
    <link linkend="ill">ill</link>
  </entry>
  <entry>
    <link linkend="in">in</link>
  </entry>
  <entry>
    <link linkend="inside">inside</link>
  </entry>
  <entry>
    <link linkend="item">item</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="joint">joint</link>
  </entry>
  <entry>
    <link linkend="journal">journal</link>
  </entry>
  <entry>
    <link linkend="keep">keep</link>
  </entry>
  <entry>
    <link linkend="keypoint">keypoint</link>
  </entry>
  <entry>
    <link linkend="kill">kill</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="killall">killall</link>
  </entry>
  <entry>
    <link linkend="killtree">killtree</link>
  </entry>
  <entry>
    <link linkend="knob">knob</link>
  </entry>
  <entry>
    <link linkend="l">l</link>
  </entry>
  <entry>
    <link linkend="labelvert">labelvert</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="listeval">listeval</link>
  </entry>
  <entry>
    <link linkend="loadtk">loadtk</link>
  </entry>
  <entry>
    <link linkend="lookat">lookat</link>
  </entry>
  <entry>
    <link linkend="ls">ls</link>
  </entry>
  <entry>
    <link linkend="l_muves">l_muves</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="make">make</link>
  </entry>
  <entry>
    <link linkend="mater">mater</link>
  </entry>
  <entry>
    <link linkend="matpick">matpick</link>
  </entry>
  <entry>
    <link linkend="memprint">memprint</link>
  </entry>
  <entry>
    <link linkend="mirface">mirface</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="mirror">mirror</link>
  </entry>
  <entry>
    <link linkend="mrot">mrot</link>
  </entry>
  <entry>
    <link linkend="mv">mv</link>
  </entry>
  <entry>
    <link linkend="mvall">mvall</link>
  </entry>
  <entry>
    <link linkend="nirt">nirt</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="nmg_collapse">nmg_collapse</link>
  </entry>
  <entry>
    <link linkend="nmg_simplify">nmg_simplify</link>
  </entry>
  <entry>
    <link linkend="oed">oed</link>
  </entry>
  <entry>
    <link linkend="opendb">opendb</link>
  </entry>
  <entry>
    <link linkend="orientation">orientation</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="orot">orot</link>
  </entry>
  <entry>
    <link linkend="oscale">oscale</link>
  </entry>
  <entry>
    <link linkend="overlay">overlay</link>
  </entry>
  <entry>
    <link linkend="p">p</link>
  </entry>
  <entry>
    <link linkend="pathlist">pathlist</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="paths">paths</link>
  </entry>
  <entry>
    <link linkend="permute">permute</link>
  </entry>
  <entry>
    <link linkend="pl">pl</link>
  </entry>
  <entry>
    <link linkend="plot">plot</link>
  </entry>
  <entry>
    <link linkend="polybinout">polybinout</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="pov">pov</link>
  </entry>
  <entry>
    <link linkend="prcolor">prcolor</link>
  </entry>
  <entry>
    <link linkend="prefix">prefix</link>
  </entry>
  <entry>
    <link linkend="press">press</link>
  </entry>
  <entry>
    <link linkend="preview">preview</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="prj_add">prj_add</link>
  </entry>
  <entry>
    <link linkend="ps">ps</link>
  </entry>
  <entry>
    <link linkend="pull">pull</link>
  </entry>
  <entry>
    <link linkend="push">push</link>
  </entry>
  <entry>
    <link linkend="putmat">putmat</link>
  </entry>
  </row>
<row>
  <entry>
    q
  </entry>
  <entry>
    <link linkend="qorot">qorot</link>
  </entry>
  <entry>
    <link linkend="qray">qray</link>
  </entry>
  <entry>
    <link linkend="query_ray">query_ray</link>
  </entry>
  <entry>
    <link linkend="quit">quit</link>
  </entry>
</row>
<row>
  <entry>
    <link linkend="qvrot">qvrot</link>
  </entry>
  <entry>
    <link linkend="r">r</link>
  </entry>
  <entry>
    <link linkend="rcodes">rcodes</link>
  </entry>
  <entry>
    <link linkend="rccblend">rcc-blend</link>
  </entry>
  <entry>
    <link linkend="rcccap">rcc-cap</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="rcctgc">rcc-tgc</link>
  </entry>
  <entry>
    <link linkend="rcctor">rcc-tor</link>
  </entry>
  <entry>
    <link linkend="read_muves">read_muves</link>
  </entry>
  <entry>
    <link linkend="red">red</link>
  </entry>
  <entry>
    <link linkend="refresh">refresh</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="regdebug">regdebug</link>
  </entry>
  <entry>
    <link linkend="regdef">regdef</link>
  </entry>
  <entry>
    <link linkend="regions">regions</link>
  </entry>
  <entry>
    <link linkend="release">release</link>
  </entry>
  <entry>
    <link linkend="rfarb">rfarb</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="rm">rm</link>
  </entry>
  <entry>
    <link linkend="rmater">rmater</link>
  </entry>
  <entry>
    <link linkend="rmats">rmats</link>
  </entry>
  <entry>
    <link linkend="rot">rot</link>
  </entry>
  <entry>
    <link linkend="rotobj">rotobj</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="rpparch">rpp-arch</link>
  </entry>
  <entry>
    <link linkend="rppcap">rpp-cap</link>
  </entry>
  <entry>
    <link linkend="rrt">rrt</link>
  </entry>
  <entry>
    <link linkend="rt">rt</link>
  </entry>
  <entry>
    <link linkend="rtcheck">rtcheck</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="savekey">savekey</link>
  </entry>
  <entry>
    <link linkend="saveview">saveview</link>
  </entry>
  <entry>
    <link linkend="sca">sca</link>
  </entry>
  <entry>
    <link linkend="sed">sed</link>
  </entry>
  <entry>
    <link linkend="setview">setview</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="shader">shader</link>
  </entry>
  <entry>
    <link linkend="shells">shells</link>
  </entry>
  <entry>
    <link linkend="showmats">showmats</link>
  </entry>
  <entry>
    <link linkend="size">size</link>
  </entry>
  <entry>
    <link linkend="solids">solids</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="sphpart">sph-part</link>
  </entry>
  <entry>
    <link linkend="status">status</link>
  </entry>
  <entry>
    <link linkend="summary">summary</link>
  </entry>
  <entry>
    <link linkend="sv">sv</link>
  </entry>
  <entry>
    <link linkend="sync">sync</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="t">t</link>
  </entry>
  <entry>
    <link linkend="ted">ted</link>
  </entry>
  <entry xml:id="title">
    <link linkend="title">title</link>
  </entry>
  <entry>
    <link linkend="tol">tol</link>
  </entry>
  <entry>
    <link linkend="tops">tops</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="torrcc">tor-rcc</link>
  </entry>
  <entry>
    <link linkend="tra">tra</link>
  </entry>
  <entry>
    <link linkend="track">track</link>
  </entry>
  <entry>
    <link linkend="translate">translate</link>
  </entry>
  <entry>
    <link linkend="tree">tree</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="t_muves">t_muves</link>
  </entry>
  <entry xml:id="units3">
    <link linkend="units">units</link>
  </entry>
  <entry>
    <link linkend="vars">vars</link>
  </entry>
  <entry xml:id="e">
    <link linkend="vdraw">vdraw</link>
  </entry>
  <entry>
    <link linkend="view">view</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="viewsize">viewsize</link>
  </entry>
  <entry>
    <link linkend="vnirt">vnirt</link>
  </entry>
  <entry>
    <link linkend="vquery_ray">vquery_ray</link>
  </entry>
  <entry>
    <link linkend="vrmgr">vrmgr</link>
  </entry>
  <entry>
    <link linkend="vrot">vrot</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="wcodes">wcodes</link>
  </entry>
  <entry>
    <link linkend="whatid">whatid</link>
  </entry>
  <entry xml:id="shader">
    <link linkend="which_shader">which_shader</link>
  </entry>
  <entry>
    <link linkend="whichair">whichair</link>
  </entry>
  <entry>
    <link linkend="whichid">whichid</link>
  </entry>
  </row>
<row>
  <entry>
    <link linkend="who">who</link>
  </entry>
  <entry>
    <link linkend="wmater">wmater</link>
  </entry>
  <entry>
    <link linkend="x">x</link>
  </entry>
  <entry>
    <link linkend="xpush">xpush</link>
  </entry>
  <entry>
    <link linkend="zoom">zoom</link>
  </entry>
  </row>
<row>
  <entry>
    <emphasis role="strong"></emphasis>
  </entry>
 </row>
</tbody>
</tgroup>
</table>
  <variablelist xml:id="percent">
    <varlistentry>
      <term>
        %
      </term>
      <listitem>
        <para>
          Start a <quote>/bin/sh</quote> shell process for the user. The
          <emphasis>mged</emphasis> prompt will be replaced by a system
          prompt for the shell, and the user may perform any legal shell
          commands. The <emphasis>mged</emphasis> process waits for the
          shell process to finish, which occurs when the user exits the
          shell. This only works in a command window associated with a
          tty (i.e., the window used to start <emphasis>mged</emphasis>
          in classic mode).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; %
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Start a new shell process.
  </para>
  <para>
<literal>$</literal> <emphasis role="strong">ls
    -al</emphasis> – Issue any shell commands.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    $ <emphasis role="strong">exit</emphasis> – Exit the shell.
  </para>
  <para>
    mged&gt; – Continue editing in <emphasis>mged</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ptarb">
    <varlistentry>
      <term>
        3ptarb [<emphasis>arb_name x1 y1 z1 x2 y2 z2 x3 y3 z3 x|y|z
        coord1 coord2 thickness</emphasis>]
      </term>
      <listitem>
        <para>
          Build an <link linkend="ARB">ARB8</link> shape by extruding a
          quadrilateral through a given <emphasis>thickness</emphasis>.
          The arguments may be provided on the command line; if they are
          not, they will be prompted for. The <emphasis>x1,
          y1,</emphasis> and <emphasis>z1</emphasis> are the coordinates
          of one corner of the quadrilateral. <emphasis>x2, y2,
          z2,</emphasis> and <emphasis>x3, y3, z3</emphasis> are the
          coordinates of two other corners. Only two coordinates of the
          fourth point are specified, and the code calculates the third
          coordinate to ensure all four points are coplanar. The
          <emphasis>x|y|z</emphasis> parameter indicates which
          coordinate of the fourth point will be calculated by the code.
          The <emphasis>coord1</emphasis> and
          <emphasis>coord2</emphasis> parameters supply the other two
          coordinates. The direction of extrusion for the quadrilateral
          is determined from the order of the four resulting points by
          the right-hand rule; the quadrilateral is extruded toward a
          viewer for whom the points appear in counter-clockwise order.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; 3ptarb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Start the <emphasis>3ptarb</emphasis> command.
  </para>
  <para>
    Enter name for this arb: <emphasis role="strong">thing</emphasis> – The new <link linkend="ARB">ARB8</link> will be named
    <emphasis>thing</emphasis>.
  </para>
  <para>
    Enter X, Y, Z for point 1: <emphasis role="strong">0 0 0</emphasis>
     – Point one is at the origin.
  </para>
  <para>
    Enter X, Y, Z for point 2: <emphasis role="strong">1 0 0</emphasis>
     – Point two is at (1, 0, 0).
  </para>
  <para>
    Enter X, Y, Z for point 3: <emphasis role="strong">1 1 0</emphasis>
     – Point three is at (1, 1, 0).
  </para>
  <para>
    Enter coordinate to solve for (x, y, or z):
    <emphasis role="strong">z</emphasis>
     – The code will calculate the <emphasis>z</emphasis>
    coordinate of the fourth point.
  </para>
  <para>
    Enter the X, Y coordinate values: <emphasis role="strong">0
    1</emphasis>
     – The <emphasis>x</emphasis> and<emphasis>y</emphasis>
    coordinates of the fourth point are 0 and 1.
  </para>
  <para>
    Enter thickness for this arb: <emphasis role="strong">3</emphasis>
     – The new <link linkend="ARB">ARB8</link> will be 3
    <link linkend="units">units</link> thick.
  </para>
  <para>
    mged&gt; <emphasis role="strong">3ptarb thing 0 0 0 1 0 0 1 1 0 z 0
    1 3</emphasis> – Same as above example, but with all arguments
    supplied on the command line.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="questionmark">
    <varlistentry>
      <term>
        ?
      </term>
      <listitem>
        <para>
          Provide a list of available <emphasis>mged</emphasis>
          commands. The <link linkend="questionmarkdevel">?devel</link>,
          <link linkend="questionmarklib">?lib</link>,
          <link linkend="help">help</link>,
          <link linkend="helpdevel">helpdevel</link>, and
          <link linkend="helplib">helplib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ?
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of available commands.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="questionmarkdevel">
    <varlistentry>
      <term>
        ?devel
      </term>
      <listitem>
        <para>
          Provide a list of available <emphasis>mged
          developer</emphasis> commands. The
          <link linkend="questionmark">?</link>,
          <link linkend="questionmarklib">?lib</link>,
          <link linkend="help">help</link>,
          <link linkend="helpdevel">helpdevel</link>, and
          <link linkend="helplib">helplib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ?devel
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of available <emphasis>developer</emphasis> commands.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry xml:id="questionmarklib">
      <term>
        ?lib
      </term>
      <listitem>
        <para>
          Provide a list of available <emphasis>BRL-CAD</emphasis>
          library interface commands. The
          <link linkend="questionmark">?</link>,
          <link linkend="questionmarkdevel">?devel</link>,
          <link linkend="help">help</link>,
          <link linkend="helpdevel">helpdevel</link>, and
          <link linkend="helplib">helplib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ?lib
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of available <emphasis>BRL-CAD</emphasis> library
    interface commands.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="B">
    <varlistentry>
      <term>
        B [<emphasis>-R -A -o -s C#/#/#</emphasis>]
        &lt;<emphasis>objects | attribute name/value
        pairs</emphasis>&gt;
      </term>
      <listitem>
        <para>
          Clear the <emphasis>mged</emphasis> display of any currently
          displayed objects, then display the list of objects provided
          in the parameter list. Equivalent to the
          <link linkend="z">Z</link> command followed by the command
          <link linkend="draw">draw</link>
          &lt;<emphasis>objects</emphasis>&gt;. The
          <emphasis>-C</emphasis> option provides the user a way to
          specify a color that overrides all other color specifications
          including combination colors and region id-based colors. The
          <emphasis>-A</emphasis> and <emphasis>-o</emphasis> options
          allow the user to select objects by attribute. The -s option
          specifies that subtracted and intersected objects should be
          drawn with solid lines rather than dot-dash lines. The
          -<emphasis>R</emphasis> option means do not automatically
          resize the view if no other objects are displayed. See the
          draw command for a detailed description of the options.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; B some_object
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Clear the display, then display the object named
    <emphasis>some_object</emphasis>.
  </para>
  <para>
    mged&gt; B -A -o Comment {First comment} Comment {Second comment}
  </para>
  <para>
    – Clear the display, then draw objects that have a
    <quote>Comment</quote> attribute with a value of either <quote>First
    comment</quote> or <quote>Second comment.</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="E">
    <varlistentry>
      <term>
        E [<emphasis>-s</emphasis>] &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          Display <emphasis>objects</emphasis> in an evaluated form. All
          the Boolean operations indicated in each object in
          <emphasis>objects</emphasis> will be performed, and a
          resulting faceted approximation of the actual objects will be
          displayed. Note that this is usually much slower than using
          the usual
          <link linkend="draw"><emphasis>draw</emphasis></link> command.
          The <emphasis>-s</emphasis> option provides a more accurate,
          but slower, approximation.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; E some_object
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display a faceted approximation of
    <emphasis>some_object</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="M">
    <varlistentry>
      <term>
        M 1|0 xpos ypos
      </term>
      <listitem>
        <para>
          Send an <emphasis>mged</emphasis> mouse (i.e., defaults to a
          middle mouse button) event. The first argument indicates
          whether the event should be a button press
          (<emphasis>1</emphasis>) or release (<emphasis>0</emphasis>).
          The <emphasis>xpos</emphasis> and <emphasis>ypos</emphasis>
          arguments specify the mouse position in
          <emphasis>mged</emphasis> screen coordinates between -2047 and
          +2047. With the default bindings, an <emphasis>mged</emphasis>
          mouse event while in the viewing mode moves the view so that
          the point currently at screen position
          (<emphasis>xpos</emphasis>, <emphasis>ypos</emphasis>) is
          repositioned to the center of the <emphasis>mged</emphasis>
          display (compare to the <link linkend="center">center</link>
          command). The <emphasis>M</emphasis> command may also be used
          in other editing modes to simulate an
          <emphasis>mged</emphasis> mouse event.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; M 1 100 100
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Translate the point at screen coordinates (100, 100) to the center
    of the <emphasis>mged</emphasis>display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="z">
    <varlistentry>
      <term>
        Z
      </term>
      <listitem>
        <para>
          Zap (i.e., clear) the <emphasis>mged</emphasis> display.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; Z
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Clear the <emphasis>mged</emphasis> display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="adc">
    <varlistentry>
      <term>
        adc [<emphasis>-i</emphasis>] [<emphasis>subcommand</emphasis>]
      </term>
      <listitem>
        <para>
          This command controls the angle/distance cursor. The
          <emphasis>adc</emphasis> command with no arguments toggles the
          display of the angle/distance cursor (ADC). The
          <emphasis>-i</emphasis> option, if specified, causes the given
          value(s) to be treated as increments. Note that the
          <emphasis>-i</emphasis> option is ignored when getting values
          or when used with subcommands where this option makes no
          sense. You can also control the position, angles, and radius
          of the ADC using a knob or the
          <link linkend="knob">knob</link> command. This command accepts
          the following subcommands:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        vars
      </term>
      <listitem>
        <para>
          Returns a list of all ADC variables and their values (i.e.,
          var = val).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        draw [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the draw parameter.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        a1 [<emphasis>angle</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get angle1 in degrees.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        a2 [<emphasis>angle</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get angle2 in degrees.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dst [<emphasis>distance</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get radius (distance) of tick in local units.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        odst [<emphasis>distance</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get radius (distance) of tick (+-2047).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        hv [<emphasis>position</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get position (grid coordinates and local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        xyz [<emphasis>position</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get position (model coordinates and local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        x [<emphasis>xpos</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get horizontal position (+-2047).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        y [<emphasis>ypos</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get vertical position (+-2047).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dh distance
      </term>
      <listitem>
        <para>
          Add to horizontal position (grid coordinates and local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dv distance
      </term>
      <listitem>
        <para>
          Add to vertical position (grid coordinates and local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dx distance
      </term>
      <listitem>
        <para>
          Add to <emphasis>x</emphasis> position (model coordinates and
          local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dy distance
      </term>
      <listitem>
        <para>
          Add to <emphasis>y</emphasis> position (model coordinates and
          local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        dz distance
      </term>
      <listitem>
        <para>
          Add to <emphasis>z</emphasis> position (model coordinates and
          local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchor_pos [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Anchor ADC to current position in model coordinates.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchor_a1 [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Anchor angle1 to go through anchorpoint_a1.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchor_a2 [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Anchor angle2 to go through anchorpoint_a2.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchor_dst [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Anchor tick distance to go through anchorpoint_dst.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchorpoint_a1 [<emphasis>x y z</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get anchor point for angle1 (model coordinates and
          local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchorpoint_a2 [<emphasis>x y z</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get anchor point for angle2 (model coordinates and
          local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        anchorpoint_dst [<emphasis>x y z</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get anchor point for tick distance (model coordinates
          and local units).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        reset
      </term>
      <listitem>
        <para>
          Reset all values to their defaults.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        help
      </term>
      <listitem>
        <para>
          Print the help message.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; adc
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Toggle display of the angle/distance cursor
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">adc a1 37.5</emphasis>
     – Set angle1 to 37.5˚.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">adc a1</emphasis> 37.5
     – Get angle1.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">adc xyz 100 0 0</emphasis>  – Move ADC position to (100, 0, 0), model coordinates
    and local units.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry xml:id="ae">
      <term>
        ae [<emphasis>-i</emphasis>] <emphasis>azimuth
        elevation</emphasis> [<emphasis>twist</emphasis>]
      </term>
      <listitem>
        <para>
          Set the view orientation for the <emphasis>mged</emphasis>
          display by rotating the eye position about the
          <link linkend="center">center</link> of the viewing cube. The
          eye position is determined by the supplied
          <link linkend="azimuth">azimuth</link> and
          <link linkend="ELEVATION">elevation</link> angles (degrees).
          The <emphasis>azimuth</emphasis> angle is measured in the
          <emphasis>xy</emphasis> plane with the positive
          <emphasis>x</emphasis> direction corresponding to an azimuth
          of 0˚. Positive azimuth angles are measured counter-clockwise
          about the positive <emphasis>z</emphasis> axis. Elevation
          angles are measured from the <emphasis>xy</emphasis> plane
          with +90˚ corresponding to the positive <emphasis>z</emphasis>
          direction and -90 corresponding to the negative
          <emphasis>z</emphasis> direction. If an optional
          <emphasis>twist</emphasis> angle is included, the view will be
          rotated about the viewing direction by the specified
          <emphasis>twist</emphasis> angle. The <emphasis>-i</emphasis>
          option results in the angles supplied being interpreted as
          increments.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ae -90 90
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – View from top direction.
  </para>
  <para>
<literal>mged&gt;</literal> <emphasis role="strong">ae
    270 0</emphasis>
     – View from right hand side.
  </para>
  <para>

 <literal>mged&gt;</literal> <emphasis role="strong">ae
    35 25 10</emphasis>
     – View from azimuth 35, elevation 25, with view rotated
    by 10˚.
  </para>
  <para>

<literal>mged&gt;</literal> <emphasis role="strong">ae
    -i 0 0 5</emphasis>
    – Rotate the current view through 5˚ about the viewing
    direction.
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="analyze">
    <varlistentry>
      <term>
        analyze [<emphasis>arb_name</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>analyze</quote> command displays the rotation and
          fallback angles, surface area, and plane equation for each
          face of the <link linkend="ARB">ARB</link> specified on the
          command line. The total surface area and volume and the length
          of each edge are also displayed. If executed while editing an
          <emphasis>ARB,</emphasis> the <emphasis>arb_name</emphasis>
          may be omitted, and the <emphasis>ARB</emphasis> being edited
          will be analyzed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; analyze arb_name
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Analyze the <emphasis>ARB</emphasis> named
    <emphasis>arb_name.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="animmate">
    <varlistentry>
      <term>
        animmate
      </term>
      <listitem>
        <para>
          The <quote>animmate</quote> command starts the Tcl/Tk-based
          animation tool. The capabilities and correct use of this
          command are too extensive to be described here, but there is a
          tutorial available.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="apropos">
    <varlistentry>
      <term>
        apropos keyword
      </term>
      <listitem>
        <para>
          The <quote>apropos</quote> command searches through the
          one-line usage messages for each <emphasis>mged</emphasis>
          command and displays the name of each command where a match is
          found.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
				Examples:
      </term>
      <listitem>
        <para>
          mged&gt; apropos region
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all commands that contain the word <quote>region</quote> in
    their one-line usage messages.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="aproposdevel">
    <varlistentry>
      <term>
        aproposdevel keyword
      </term>
      <listitem>
        <para>
          The <quote>aproposdevel</quote> command searches through the
          one-line usage messages for each <emphasis>mged
          developer</emphasis> command and displays the name of each
          command where a match is found.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; aproposdevel region
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all <emphasis>developer</emphasis> commands that contain the
    word <quote>region</quote> in their one-line usage messages.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="aproposlib">
    <varlistentry>
      <term>
        aproposlib keyword
      </term>
      <listitem>
        <para>
          The <quote>aproposlib</quote> command searches through the
          one-line usage messages for each <emphasis>BRL-CAD</emphasis>
          library interface command and displays the name of each
          command where a match is found.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; aproposlib mat
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all commands that contain the word <quote>mat</quote> in
    their one-line usage messages.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ARB">
    <varlistentry>
      <term>
        arb arb_name rotation fallback
      </term>
      <listitem>
        <para xml:id="ae4">
          The <quote>arb</quote> command creates a new
          <link linkend="ARB">ARB</link> shape with the specified
          <emphasis>arb_name</emphasis>. The new
          <emphasis>ARB</emphasis> will be 20 inches by 20 inches and 2
          inches thick. The square faces will be perpendicular to the
          direction defined by the rotation and fallback angles. This
          direction can be determined by interpreting the rotation angle
          as an <link linkend="azimuth">azimuth</link> and the fallback
          angle as an <link linkend="ELEVATION">elevation</link> as in
          the <link linkend="ae">ae</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; arb new_arb 35 25
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create <emphasis>new_arb</emphasis> with a rotation angle of 35˚
    and a fallback angle of 25˚.
  </para>
  <para>

<literal>mged&gt;</literal>
    <link linkend="ae"><emphasis role="strong">ae</emphasis></link><emphasis role="strong">35
    25</emphasis>
     – Rotate view to look straight on at square face of
    <emphasis>new_arb</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="arced">
    <varlistentry>
      <term>
        arced comb/memb anim_command
      </term>
      <listitem>
        <para xml:id="BOOLEAN">
          The objects in a <emphasis>BRL-CAD</emphasis> model are stored
          as Boolean combinations of primitive shapes and/or other
          combinations. These combinations are stored as Boolean trees,
          with each leaf of the tree including a corresponding
          transformation matrix. The <quote>arced</quote> command
          provides a means for directly editing these matrices. The
          first argument to the <quote>arced</quote> command must
          identify the combination and which member s matrix is to be
          edited. The <emphasis>comb/memb</emphasis> argument indicates
          that member <emphasis>memb</emphasis> of combination
          <emphasis>comb</emphasis> has the matrix to be edited. The
          remainder of the <quote>arced</quote> command line consists of
          an <emphasis>animation</emphasis> command to be applied to
          that matrix. The available animation commands are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        matrix rarc &lt;xlate|rot&gt;<emphasis>matrix
        elements</emphasis>
        – Replace the members matrix with the given matrix.
      </para>
    </listitem>
    <listitem>
      <para>
        matrix lmul &lt;xlate|ro&gt;<emphasis>matrix elements</emphasis>

			 – Left multiply the members matrix with the given
        matrix.
      </para>
    </listitem>
    <listitem>
      <para>
        matrix rmul &lt;xlate|rot&gt;<emphasis>matrix
        elements.</emphasis>  – Right multiply the members matrix with the given
        matrix.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; arced body/head matrix rot 0 0 45
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate member <emphasis>head</emphasis> (in combination
    <emphasis>body</emphasis>) about the <emphasis>z</emphasis> axis
    through a 45˚ angle. By default, the <emphasis>matrix</emphasis>
    commands expect a list of 16 matrix elements to define a matrix. The
    <emphasis>xlate</emphasis> option may be used along with three
    translation distances in the <emphasis>x</emphasis>,
    <emphasis>y</emphasis>, and <emphasis>z</emphasis> directions (in
    mm) as a shorthand notation for a matrix that is pure translation.
    Similarly, the <emphasis>rot</emphasis> option along with rotation
    angles (degrees) about the <emphasis>x</emphasis>,
    <emphasis>y</emphasis>, and <emphasis>z</emphasis> axes may be used
    as shorthand for a matrix that is pure rotation.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="area">
    <varlistentry>
      <term>
        area [<emphasis>tolerance</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>area</quote> command calculates an approximate
          presented area of one region in the <emphasis>mged</emphasis>
          display. For this command to work properly, a single
          <emphasis>BRL-CAD</emphasis> <link linkend="r">region</link>
          must be displayed using the <link linkend="E">E</link>
          command. The <emphasis>tolerance</emphasis> is the distance
          required between two vertices in order for them to be
          recognized as distinct vertices. This calculation considers
          only the minimum bounding polygon of the region and ignores
          holes.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt;
          <link linkend="z"><emphasis role="strong">Z</emphasis></link>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Clear the <emphasis>mged</emphasis> display(s).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <link linkend="E"><emphasis role="strong">E</emphasis></link><emphasis role="strong">region_1</emphasis>
			– <emphasis>E</emphasis> a single region.
  </para>
  <para>
<literal>mged&gt;</literal>
    <emphasis role="strong">area</emphasis> – Calculate the presented area of the enclosing polygon
    of the region.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="arot">
    <varlistentry>
      <term>
        arot x y z angle
      </term>
      <listitem>
        <para>
          The <quote>arot</quote> command performs a rotation about the
          specified axis (<emphasis>x y z</emphasis>) using screen units
          (-2048 to +2048). The amount of rotation is determined by
          <emphasis>angle,</emphasis> which is in degrees. Exactly what
          is rotated and how it is rotated are dependent on MGED s state
          as well as the state of the display manager. For example, in
          normal viewing mode, this command simply rotates the view.
          However, in primitive edit mode, it rotates the shape being
          edited.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; arot 0 0 1 10
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate 10 degrees about z axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="attach">
    <varlistentry>
      <term>
        attach [<emphasis>-d display_string</emphasis>] [<emphasis>-i
        init_script</emphasis>] [<emphasis>-n name</emphasis>]
        [<emphasis>-t is_toplevel</emphasis>] [<emphasis>-W
        width</emphasis>] [<emphasis>-N height</emphasis>] [<emphasis>-S
        square_size</emphasis>] win_type
      </term>
      <listitem>
        <para>
          The <quote>attach</quote> command is used to open a display
          window. The set of supported window types includes X and ogl.
          It should be noted that <emphasis>attach</emphasis> no longer
          releases previously attached display windows (i.e., multiple
          attaches are supported). To destroy a display window, use the
          <link linkend="release">release</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; attach ogl
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Open an ogl display window named .dm_ogl0 (assuming this is the
    first ogl display window opened using the default naming scheme).
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">attach ogl</emphasis>
     – Open a ogl display window named .dm_ogl1.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">attach -n myOgl -W 720 -N 486
    ogl</emphasis>
     – Open a 720x486 OpenGL display window named myOgl.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">attach -n myX -d remote_host:0 -i
    myInit X</emphasis>
    – Open an X display window named myX on remote_host
    that is initialized by myInit.
     – myInit might contain user specified bindings like
    those found in the default bindings.
  </para>
  <para>
<literal>mged&gt;</literal>
    <emphasis role="strong">toplevel .t</emphasis>
     – Create a toplevel window named .t.
  </para>
  <para>

<literal>mged&gt;</literal>
    <emphasis role="strong">attach -t 0 -S 800 -n .t.ogl ogl</emphasis>
     – Open a 800x800 OpenGl display window named .t.ogl
    that is not a top-level window.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">button .t.dismiss -text Dismiss -command
    <quote>release .t.ogl; destroy .t</quote></emphasis>
     – Create a button to dismiss the display manager etc.
  </para>
  <para>

 <literal>mged&gt;</literal>
    <emphasis role="strong">pack .t.ogl -expand 1 -fill both</emphasis>
    – Pack the display manager inside .t.
  </para>
  <para>

 <literal>mged&gt;</literal>
    <emphasis role="strong">pack .t.dismiss</emphasis>
    – Pack the Dismiss button inside .t.
  </para>
  <para>

 <literal>mged&gt;</literal>
    <emphasis role="strong">attach</emphasis>
    – List the help message that includes the valid display
    types.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="attr">
    <varlistentry>
      <term>
        attr get|set|rm|append|show object_name [arguments]
      </term>
      <listitem>
        <para>
          The <quote>attr</quote> command is used to create, change,
          retrieve, or view attributes of database
        </para>
        <para>
          objects. The arguments for <quote>set</quote> and
          <quote>append</quote> subcommands are attribute name/value
          pairs. The arguments for <quote>get,</quote>
          <quote>rm,</quote> and <quote>show</quote> subcommands are
          attribute names. The <quote>set</quote> subcommand sets the
          specified attributes for the object. The <quote>append</quote>
          subcommand appends the provided value to an existing
          attribute, or creates a new attribute if it does not already
          exist. The <quote>get</quote> subcommand retrieves and
          displays the specified attributes. The <quote>rm</quote>
          subcommand deletes the specified attributes. The
          <quote>show</quote> subcommand does a <quote>get</quote> and
          displays the results in a user readable format. Note that the
          attribute names may not contain embedded white space, and if
          attribute values contain embedded white space, they must be
          surrounded by <quote>{}</quote> or double quotes.
        </para>
        <para>
          Examples:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
    	<term>
    		region_1 comment
    	</term>
       <listitem>
        <para>
           mged&gt; attr set region_1 comment {This is a comment for
          region_1}
        </para>
        <para>
          – Assign an attribute named <quote>comment</quote> to
          <emphasis>region_1</emphasis>, its value is &quot;This is a
        </para>
        <para>
          comment for region_1&quot;
        </para>
        <para>
          mged&gt; attr show region_1 comment
        </para>
        <para>
          – List all the attributes for region_1
        </para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="autoview">
      <term>
        autoview
      </term>
      <listitem>
        <para>
          The <quote>autoview</quote> command resets the view_size and
          the view center such that all displayed objects are within the
          view.
        </para>
        <para>
          Examples:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
    	<term>
    		Autoview
    	</term>
      <listitem>
        <para>
          mged&gt; autoview
        </para>
        <para>
          – Adjust the view to see everything displayed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="bev">
      <term>
        bev [<emphasis>-t</emphasis>] [<emphasis>-P#</emphasis>] new_obj
        Boolean_formula
      </term>
      <listitem>
        <para>
          The <quote>bev</quote> command performs the operations
          indicated in the <emphasis>Boolean_formula</emphasis> and
          stores the result in <emphasis>new_obj</emphasis>. The
          <emphasis>new_obj</emphasis> will be stored as an
          NMG shape (it may be converted to a
          <link linkend="polysolid">polysolid</link> by using the
          <link linkend="nmg_simplify">nmg_simplify</link> command). If
          the <emphasis>-t</emphasis> option is specified, then the
          resulting object will consist entirely of triangular facets.
          The default is to allow facets of any complexity, including
          holes. The <emphasis>-P</emphasis> option specifies the number
          of CPUs to use for the calculation (however, this is currently
          ignored). Only simple <emphasis>Boolean_formulas</emphasis>
          are allowed. No parentheses are allowed and the operations are
          performed from left to right with no precedence. More complex
          expressions must be expressed as <emphasis>BRL-CAD</emphasis>
          objects using the <link linkend="r">r</link>,
          <link linkend="g">g</link>, or <link linkend="c">c</link>
          commands and evaluated using the
          <link linkend="facetize">facetize</link> or
          <link linkend="ev">ev</link> commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; bev -t triangulated_lens sphere1 + sphere2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a triangulated object by intersecting objects
    <emphasis>sphere1</emphasis> and <emphasis>sphere2.</emphasis>
  </para>
  <para>
    <emphasis role="strong">bo</emphasis><emphasis>[-o|-i pattern type]
    dest source</emphasis>
  </para>
  <para>
    The <quote>bo</quote> command is used to create or retrieve binary
    opaque objects. One of <emphasis>-i</emphasis> or
    <emphasis>-o</emphasis> must be specified.
  </para>
  <para>
    The <emphasis>-o</emphasis> option <quote>outputs</quote> or
    extracts a binary object from the database object
    <emphasis>source</emphasis> to a file called
    <emphasis>dest</emphasis>.
  </para>
  <para>
    The <emphasis>-i</emphasis> option <quote>inputs</quote> or imports
    a file called <emphasis>source</emphasis> into a binary object
    called <emphasis>dest</emphasis> in the database. There are two
    additional arguments that must be specified with the
    <emphasis>-i</emphasis> option: pattern and type. Currently, only
    uniform binary objects (arrays of values) are supported. As a
    result, the <emphasis>pattern</emphasis> is always
    <emphasis>u</emphasis> for <quote>uniform</quote> pattern. The
    <emphasis>type</emphasis> can be one of the following:
  </para>
  <para>
    <emphasis>f</emphasis>-&gt; float
  </para>
  <para>
    <emphasis>d</emphasis>-&gt; double
  </para>
  <para>
    <emphasis>c</emphasis>-&gt; char (8 bit)
  </para>
  <para>
    <emphasis>s</emphasis>-&gt; short (16 bit)
  </para>
  <para>
    <emphasis>i</emphasis>-&gt; int (32 bit)
  </para>
  <para>
    <emphasis>l</emphasis>-&gt; long (64 bit)
  </para>
  <para>
    <emphasis>C</emphasis>-&gt; unsigned char (8 bit)
  </para>
  <para>
    <emphasis>S</emphasis>-&gt; unsigned short (16 bit)
  </para>
  <para>
    <emphasis>I</emphasis>-&gt; unsigned int (32 bit)
  </para>
  <para>
    <emphasis>L</emphasis>-&gt; unsigned long (64 bit)
  </para>
  <para xml:id="bo">
    Examples:
  </para>
  <para>
    <literal>mged&gt;</literal> <emphasis role="strong">bo -i -u c cmds
    /usr/brlcad/html/manuals/mged/mged_cmds.html</emphasis>
  </para>
  <para>
    – Create an opaque uniform binary object of characters with the name
    <emphasis>cmds</emphasis> that contains the contents of the file
    <emphasis>/usr/brlcad/html/manuals/mged/mged_cmds.html.</emphasis>
  </para>
  <para>
    <literal>mged&gt;</literal> <emphasis role="strong">bo -o
    /home/jim/cmds.html cmds</emphasis>
  </para>
  <para>
    – Copy the contents of the binary object named
    <emphasis>cmds</emphasis> into the file named
    <emphasis>/home/jim/cmds.html.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="bot_condense">
    bot_condense new_bot_primitive old_bot_primitive
  </para>
  <para>
    The <quote>bot_condense</quote> command is used to eliminate unused
    vertices from a BOT primitive. It returns the number of vertices
    eliminated.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; bot_condense bot1_condensed bot1_original
  </para>
  <para>
    – Eliminate any unused vertices from the primitive named
    <emphasis>bot1_original</emphasis> and store the result in the new
    BOT primitive named bot1_condensed.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="bot_decimate">
    bot_decimate  c maximum_chord_error  n maximum_normal_error  e
    minimum_edge_length new_bot_primitive old_bot_primitive
  </para>
  <para>
    The <quote>bot_decimate</quote> command reduces the number of
    triangles in the <emphasis>old_bot_primitive</emphasis> and saves
    the results to the <emphasis>new_bot_primitive</emphasis>. The
    reduction is accomplished through an edge decimation algorithm. Only
    changes that do not violate the specified constraints are performed.
    The <emphasis>maximum_chord_error</emphasis>parameter specifies the
    maximum distance allowed between the original surface and the
    surface of the new BOT primitive in the current editing units. The
    <emphasis>maximum_normal_error</emphasis> specifies the maximum
    change in surface normal (degrees) between the old and new surfaces.
    The <emphasis>minimum_edge_length</emphasis> specifies the length of
    the longest edge that will be decimated. At least one constraint
    must be supplied. If more than one constraint is specified, then
    only operations that satisfy all the constraints are performed.
  </para>
  <para>
    Examples:
  </para>
  <para>
    mged&gt; bot_decimate -c 0.5 -n 10.0 bot.new abot
  </para>
  <para>
    – Create a new BOT primitive named <emphasis>bot.new</emphasis> by
    reducing the number of triangles
  </para>
  <para>
    in <emphasis>abot</emphasis> while keeping the resulting surface
    within 0.5 units of the surface of <emphasis>abot</emphasis> and
  </para>
  <para>
    keeping the surface normals within 10 degrees.
  </para>
  <para>
    Note that the constraints specified only relate the output BOT
    primitive to the input
  </para>
  <para>
    BOT primitive for a single invocation of the command. Repeated
    application of this
  </para>
  <para>
    command on its own BOT output will result in a final BOT primitive
    that has
  </para>
  <para>
    unknown relationships to the original BOT primitive. For example:
  </para>
  <para>
    mged&gt; bot_decimate -c 10.0 bot_b bot_a
  </para>
  <para>
    mged&gt; bot_decimate -c 10.0 bot_c bot_b
  </para>
  <para>
    – This sequence of commands will produce primitive
    <quote>bot_c</quote> with up to 20.0 units
  </para>
  <para>
    of chord error between <quote>bot_a</quote> and
    <quote>bot_c</quote>.
  </para>
  <para>
    mged&gt; bot_decimate -c 10.0 bot_b bot_a
  </para>
  <para>
    mged&gt; bot_decimate -n 5.0 bot_c bot_b
  </para>
  <para>
    – This sequence of commands will produce primitive
    <quote>bot_c</quote> with no guaranteed
  </para>
  <para>
    relationships to <quote>bot_a</quote>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    bot_face_fuse new_bot_primitive old_bot_primitive
  </para>
  <para xml:id="bot_face_fuse">
    The <quote>bot_face_fuse</quote> command is used to eliminate
    duplicate faces from a BOT solid. It returns the number of faces
    eliminated.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; bot_face_fuse bot1_fused bot1_original
  </para>
  <para>
    – Eliminate any duplicate faces from the primitive named
    <emphasis>bot1_original</emphasis> and store the result in the new
    BOT primitive named bot1_fused.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="bot_face_sort">
    bot_face_sort triangles_per_piece bot_primitive1 [bot_primitive2
    bot_primitive3 …]
  </para>
  <para>
    The <quote>bot_face_sort</quote> command is used to sort the list of
    triangles that constitutes the BOT primitive to optimize it for
    raytracing with the specified number of triangles per piece. Most
    BRL-CAD primitives are treated as a single object when a model is
    being prepared for raytracing, but BOT primitives are normally
    broken into <quote>pieces</quote> to improve performance. The
    raytracer normally uses four triangles per piece.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; bot_face_sort 4 bot1 bot2
  </para>
  <para>
    – Sort the faces of <emphasis>bot1</emphasis> and
    <emphasis>bot2</emphasis> to optimize them for raytracing with four
    triangles per piece.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="bot_vertex_fuse">
    bot_vertex_fuse <emphasis>new_bot_solid old_bot_primitive</emphasis>
  </para>
  <para>
    The <quote>bot_vertex_fuse</quote> command is used to eliminate
    duplicate vertices from a BOT solid. It returns the number of
    vertices eliminated. No tolerance is used, so the vertices must
    match exactly to be considered duplicates.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; bot_vertex_fuse bot1_fused bot1_original
  </para>
  <para>
    – Eliminate any duplicate vertices from the primitive named
    <emphasis>bot1_original</emphasis> and store the result in the new
    BOT primitive named bot1_fused.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="build_region">
    build_region [-a region_num] tag start_num end_num
  </para>
  <para>
    The <quote>build_region</quote> command builds a region from
    existing solids that have specifically formatted names based on the
    provided tags and numbers. The created region will be named
    <quote>tag.rx</quote>, where <quote>x</quote> is the first number
    (starting from 1) that produces an unused region name. If the
    <emphasis>-a</emphasis>option is used, then the specified
    <quote>region_num</quote> will be used for <quote>x.</quote> If that
    region already exists, this operation will append to it. If that
    region does not exist, a new one will be created. The solids that
    will be involved in this operation are those with names of the form
    <quote>tag.s#</quote> or <quote>tag.s#o@</quote>, where
    <quote>#</quote> is a number between <emphasis>start_num</emphasis>
    and <emphasis>end_num</emphasis> inclusive, <quote>o</quote> is
    either <quote>u</quote>, <quote>-</quote>, or <quote>+</quote>, and
    <quote>@</quote> is any number. The operators and numbers coded into
    the solid names are used to build the region.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; build_region abc 1 2
  </para>
  <para>
    – Creates a region named <quote>abc.r1</quote> consisting of:
  </para>
  <para>
    u abc.s1
  </para>
  <para>
    u abc.s2
  </para>
  <para>
    + abc.s2+1
  </para>
  <para>
    - abc.s2-1
  </para>
  <para>
    provided that the above shapes already exist in the database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="c">
    c [<emphasis>-c|r</emphasis>] <emphasis>combination_name</emphasis>
    [<emphasis>Boolean_expression</emphasis>]
  </para>
  <para>
    The <quote>c</quote> command creates a <emphasis>BRL-CAD</emphasis>
    combination with the name <emphasis>combination_name</emphasis>. The
    <emphasis>-r</emphasis> option indicates that the combination is a
    <emphasis>BRL-CAD</emphasis> region. The <emphasis>-c</emphasis>
    option is the default and indicates that the combination is not a
    region. The <emphasis>Boolean_expression</emphasis> allows
    parentheses. Where no order is specified, intersections are
    performed before subtractions or unions; then subtractions and
    unions are performed, left to right. Where there is no
    <emphasis>Boolean_expression</emphasis> and
    <emphasis>combination_name</emphasis>, a new empty combination will
    be created. If no <emphasis>Boolean_expression</emphasis> is
    provided, and <emphasis>combination_name</emphasis> does already
    exist and one of <emphasis>-c</emphasis> or <emphasis>-r</emphasis>
    is specified, then <emphasis>combination_name</emphasis> is flagged
    to agree with the indicated option. If a new
    <emphasis>region</emphasis> is created or an existing combination is
    flagged as a region with this command, its region-specific
    attributes will be set according to the current defaults (see
    <link linkend="regdef">regdef</link>). The
    <link linkend="comb">comb</link> and <link linkend="r">r</link>
    commands may also be used to create combinations.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; c -c abc (a u b) - (a + d)
  </para>
  <para>
    – Create a combination named <emphasis>abc</emphasis> according to
    the formula <emphasis>(a u b) - (a + d).</emphasis>
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="cat">
    <varlistentry>
      <term>
        cat <emphasis>&lt;objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>cat</quote> command displays a brief description of
          each item in the list of <emphasis>objects</emphasis>. If the
          item is a primitive shape, the type of shape and its vertex
          are displayed. If the item is a combination, the Boolean
          formula for that combination including operands, operators,
          and parentheses is displayed. If the combination is flagged as
          a region, then that fact is also displayed along with the
          region s ident code, air code, los, and GIFT material code.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; cat region_1 region_2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display the Boolean formulas for some regions.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="center">
    <varlistentry>
      <term>
        center [x y z]
      </term>
      <listitem>
        <para>
          The <quote>center</quote> command positions the center of the
          <emphasis>mged</emphasis> viewing cube at the specified model
          coordinates. This is accomplished by moving the eye position
          while not changing the viewing direction. (The
          <link linkend="lookat">lookat</link> command performs a
          related function by changing the viewing direction, but not
          moving the eye location.) The coordinates are expected in the
          current editing units. In case the coordinates are the result
          of evaluating a formula, they are echoed back. If no
          coordinates are provided, the current center coordinates (in
          current editing units, not mm) are printed and can be used in
          subsequent calculations.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    It is often convenient to use the center of the view when visually
    selecting key locations in the model for construction or animation
    because of (1) the visible centering dot on the screen, (2) the fact
    that zoom and rotation are performed with respect to the view
    center, (3) the default center-mouse behavior is to move the
    indicated point to the view center, and (4) the angle/distance
    cursors are centered by default. This command provides the means to
    set and retrieve those values numerically.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; center
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Print out the coordinates of the center of the
    <emphasis>mged</emphasis> display.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; center 12.5 5.6 8.7
  </para>
  <para>
    – Move the center of the <emphasis>mged</emphasis> display to the
    point (12.5, 5.6, 8.7).
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">set oldcent [center]</emphasis>
     – Set the Tcl variable $oldcent to the display center
    coordinates.
  </para>
  <para>
    mged&gt; set glob_compat_mode 0
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">units mm</emphasis>
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">eval center [vadd2 [center] {2 0
    0}]</emphasis>
     – Move the center point two mm in the model
    +<emphasis>x</emphasis> direction.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; units mm
  </para>
  <para>

 <literal>mged&gt;</literal> <emphasis role="strong">db
    adjust sphere.s V [center]</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="color">
    <varlistentry>
      <term>
        color low high r g b str
      </term>
      <listitem>
        <para>
          The <quote>color</quote> command creates an entry in the
          database that functions as part of a color lookup table for
          displayed regions. The ident number for the region is used to
          find the appropriate color from the lookup table. The
          <emphasis>low</emphasis> and <emphasis>high</emphasis> values
          are the limits of region ident numbers to have the indicated
          <emphasis>rgb</emphasis> color (0-255) applied. The
          <emphasis>str</emphasis> parameter is intended to be an
          identifying character string, but is currently ignored. The
          current list of color table entries may be displayed with the
          <link linkend="prcolor">prcolor</link> command, and the entire
          color table may be edited using the
          <link linkend="edcolor">edcolor</link> command. If a color
          lookup table exists, its entries will override any color
          assigned using the <link linkend="mater">mater</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; color 1100 1200 255 0 0 fake_string
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Make an entry in the color lookup table for regions with idents
    from 1100 to 1200 using the color red.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="comb">
    <varlistentry>
      <term>
        comb <emphasis>combination_name &lt;operation
        object</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>comb</quote> command creates a new combination or
          extends an existing one. If
          <emphasis>combination_name</emphasis> does not already exist,
          then it will be created using the indicated list of
          <emphasis>operations</emphasis> and
          <emphasis>objects</emphasis>. If it does exist, the list of
          <emphasis>operations</emphasis> and
          <emphasis>objects</emphasis> will be appended to the end of
          the existing combination. The <emphasis>&lt;operation
          object</emphasis>&gt; list is expected to be in the same form
          as used in the <link linkend="r">r</link> command. The
          <link linkend="c">c</link> command may also be used to create
          a <emphasis>combination</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; comb abc u a - b + c
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create combination abc as ((a - b) + c).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="comb_color">
    <varlistentry>
      <term>
        comb_color combination_name r g b
      </term>
      <listitem>
        <para>
          The <quote>comb_color</quote> command assigns the color
          <emphasis>rgb</emphasis> (0-255) to the existing combination
          named <emphasis>combination_name</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; comb_color region1 0 255 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Assign the color green to <emphasis>region1.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="copyeval">
    <varlistentry>
      <term>
        copyeval new_primitive path_to_old_ primitive
      </term>
      <listitem>
        <para>
          Objects in a <emphasis>BRL-CAD</emphasis> model are stored as
          Boolean trees (combinations), with the members being primitive
          shapes or other Boolean trees. Each member has a
          transformation matrix associated with it. This arrangement
          allows a primitive to be a member of a combination, and that
          combination may be a member of another combination, and so on.
          When a combination is displayed, the transformation matrices
          are applied to its members and passed down through the
          combinations to the leaf (primitive shape) level. The
          accumulated transformation matrix is then applied to the
          primitive before it is drawn on the screen. The
          <quote>copyeval</quote> command creates a new primitive object
          called <emphasis>new_ primitive</emphasis> by applying the
          transformation matrices accumulated along the
          <emphasis>path_to_old_primitive</emphasis> to the leaf
          primitive shape object at the end of the path and saving the
          result under the name <emphasis>new_ primitive</emphasis>. The
          <emphasis>path_to_old_ primitive</emphasis>must be a
          legitimate path ending with a primitive shape.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; copyeval shapeb comb1/comb2/comb3/shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create <emphasis>shapeb</emphasis> from
    <emphasis>shapea</emphasis> by applying the accumulated
    transformation matrices from the path comb1/comb2/comb3.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="copymat">
    <varlistentry>
      <term>
        copymat comb1/memb1 comb2/memb2
      </term>
      <listitem>
        <para>
          The <quote>copymat</quote> command copies the transformation
          matrix from a member of one combination to the member of
          another.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; copymat comb1/memb1 comb2/memb2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the matrix for member <emphasis>memb2</emphasis> in
    combination <emphasis>comb2</emphasis> equal to the matrix for
    member <emphasis>memb1</emphasis> in combination
    <emphasis>comb1.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="cp">
    <varlistentry>
      <term>
        cp from_object to_object
      </term>
      <listitem>
        <para>
          The <quote>cp</quote> command makes a duplicate of an object
          (shape or combination). If <emphasis>from_object</emphasis> is
          a shape, then it is simply copied to a new shape named
          <emphasis>to_object</emphasis>. If
          <emphasis>from_object</emphasis> is a combination, then a new
          combination is created that contains exactly the same members,
          transformation matrices, etc., and it is named
          <emphasis>to_object</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; cp comb1 comb2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Make a duplicate of combination <emphasis>comb1</emphasis> and
    call it <emphasis>comb2.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="cpi">
    <varlistentry>
      <term>
        cpi old_tgc new_tgc
      </term>
      <listitem>
        <para>
          The <quote>cpi</quote> command copies
          <emphasis>old_tgc</emphasis> (an existing
          <link linkend="TGC">TGC</link> shape) to a new TGC shape
          (<emphasis>new_tgc</emphasis>), positions the new TGC such
          that its base vertex is coincident with the center of the top
          of <emphasis>old_tgc</emphasis>, and puts
          <emphasis>mged</emphasis> into the primitive edit state with
          <emphasis>new_tgc</emphasis> selected for editing. This
          command was typically used in creating models of wiring or
          piping runs; however, a <link linkend="pipe">pipe</link>
          primitive has since been added to <emphasis>BRL-CAD</emphasis>
          to handle such requirements.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; cpi tgc_a tgc_b
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Copy <emphasis>tgc_a</emphasis> to <emphasis>tgc_b</emphasis> and
    translate <emphasis>tgc_b</emphasis> to the end of
    <emphasis>tgc_a.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="d">
    <varlistentry>
      <term>
        d <emphasis>&lt;objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>d</quote> command deletes the specified list of
          objects from the <emphasis>mged</emphasis> display. This is a
          synonym for the <link linkend="erase">erase</link> command.
          Only objects that have been explicitly displayed may be
          deleted with the <quote>d</quote> command (use the
          <link linkend="who">who</link> command to see a list of
          explicitly displayed objects). Objects that are displayed as
          members of explicitly displayed combinations cannot be deleted
          from the display with this command (see
          <link linkend="dall">dall</link> or
          <link linkend="erase_all">erase_all</link>). Note that this
          has no effect on the <emphasis>BRL-CAD</emphasis> database
          itself. To actually remove objects from the database, use the
          <link linkend="kill">kill</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; d region1 shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delete <emphasis>region1</emphasis> and
    <emphasis>shapea</emphasis> from the <emphasis>mged</emphasis>
    display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="dall">
    <varlistentry>
      <term>
        dall <emphasis>&lt;objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>dall</quote> command deletes the specified list of
          objects from the <emphasis>mged</emphasis> display. This is a
          synonym for the <link linkend="erase_all">erase_all</link>
          command. This command will allow the user to delete objects
          that have not been explicitly displayed (unlike the
          <link linkend="d">d</link> command). Note that this has no
          effect on the <emphasis>BRL-CAD</emphasis> database itself. To
          actually remove objects from the database, use the
          <link linkend="kill">kill</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; dall region1 shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delete <emphasis>region1</emphasis> and
    <emphasis>shapea</emphasis> from the <emphasis>mged</emphasis>
    display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="db">
    <varlistentry>
      <term>
        db <emphasis>command</emphasis> [<emphasis>args…</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>db</quote> command provides an interface to a
          number of database manipulation routines. Note that this
          command always operates in units of millimeters. The
          <emphasis>command</emphasis> must be one of the following with
          appropriate arguments:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        match &lt;regular_exp&gt;
         – Return a list of all objects in that database that
        match the list of regular expressions.
      </para>
    </listitem>
    <listitem>
      <para>
        get shape_or_path [attribute]
        – Return information about the primitive shape at the
        end of the <emphasis>shape_or_path</emphasis>. If a path is
        specified, the transformation matrices encountered along that
        path will be accumulated and applied to the leaf shape before
        displaying the information. If no <emphasis>attribute</emphasis>
        is specified, all the details about the shape are returned. If a
        specific <emphasis>attribute</emphasis> is listed, then only
        that information is returned.
      </para>
    </listitem>
    <listitem>
      <para>
        put shape_name shape_type attributes
        – Create shape named <emphasis>shape_name</emphasis> of
        type <emphasis>shape_type</emphasis> with attributes as listed
        in <emphasis>attributes</emphasis>. The arguments to the
        <emphasis>put</emphasis> command are the same as those returned
        by the <emphasis>get</emphasis> command.
      </para>
    </listitem>
    <listitem>
      <para>
        adjust shape_name attribute new_value1 [new_value2 new_value3…]
         – Modify the shape named
        <emphasis>shape_name</emphasis> by adjusting the value of its
        <emphasis>attribute</emphasis> to the
        <emphasis>new_values</emphasis>.
      </para>
    </listitem>
    <listitem>
      <para>
        form object_type
        – Display the format used to display objects of type
        <emphasis>object_type</emphasis>.
      </para>
    </listitem>
    <listitem>
      <para>
        tops
        – Return all top-level objects.
      </para>
    </listitem>
    <listitem>
      <para>
        close
         – Close the previously opened database and delete the
        associated command.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; db match *.s
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of all objects in the database that end with
    <quote>.s</quote>.
  </para>
  <para>

 <literal>mged&gt;</literal> <emphasis role="strong">db
    get cone.s</emphasis>
    – Get a list of all the attributes and their values for
    shape <emphasis>cone.s</emphasis>.
  </para>
  <para>

 <literal>mged&gt;</literal> <emphasis role="strong">db
    get cone.s V</emphasis>
     – Get the value of the <emphasis>V</emphasis> (vertex)
    attribute of shape <emphasis>cone.s</emphasis>.
  </para>
  <para>

<literal>mged&gt;</literal> <emphasis role="strong">db
    put new_cone.s tgc V {0 0 0} H {0 0 1} A {1 0 0} B {0 1 0} C {5 0 0}
    D {0 5 0}</emphasis>
    – Create a new <link linkend="TGC">TGC</link> shape
    named <emphasis>new_cone.s</emphasis> with the specified attributes.
  </para>
  <para>
<literal>mged&gt;</literal> <emphasis role="strong">db
    adjust new_cone.s V {0 0 10}</emphasis>
     – Adjust the <emphasis>V</emphasis> (vertex) attribute
    of <emphasis>new_cone.s</emphasis> to the value {0 0 10}.
  </para>
  <para>
 mged <emphasis role="strong">db form tgc</emphasis>
 – Display the format used by the
    <emphasis>get</emphasis> and <emphasis>put</emphasis> commands for
    the <link linkend="TGC">TGC</link> shape type.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
  	<title>db glob</title>
    <varlistentry>
      <term>
         <emphasis role="strong">
         db_glob cmd_string
         </emphasis>
      </term>
      <listitem>
        <para>
          Globs <emphasis>cmd_string</emphasis> against the MGED
          database resulting in an expanded command string.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="db_glob">
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; db_glob <quote>l r23\[0-9\]</quote>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>

 l r230 r231 r232 r233 r234 r235 r236 r237 r238 r239
  – Returns a command string to list objects r230 through
    r239.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="dbconcat">
    <varlistentry>
      <term>
        dbconcat [-s/-p] [-t] [-u] [-c]
        <emphasis>database_file</emphasis> [<emphasis>affix</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>dbconcat</quote> command concatenates an existing
          <emphasis>BRL-CAD</emphasis> database to the database
          currently being edited. If an <emphasis>affix</emphasis> is
          supplied, then all objects from the
          <emphasis>database_file</emphasis> will have that
          <emphasis>affix</emphasis> added to their names. The
          <emphasis>-s</emphasis> option indicates that the
          <emphasis>affix</emphasis> is a suffix, while the
          <emphasis>-p</emphasis> option (default) indicates that the
          <emphasis>affix</emphasis> is a prefix. Note that each
          <emphasis>BRL-CAD</emphasis> object must have a unique name,
          so care must be taken not to <quote>dbconcat</quote> a
          database that has objects with names the same as objects in
          the current database. The <link linkend="dup">dup</link>
          command may be used to check for duplicate names. If the
          <emphasis>dup</emphasis> command finds duplicate names, use
          the <emphasis>prefix</emphasis> option to both the
          <emphasis>dup</emphasis> and <emphasis>dbconcat</emphasis>
          commands to find a <emphasis>prefix</emphasis> that produces
          no duplicates. If duplicate names are encountered during the
          <quote>dbconcat</quote> process, and no
          <emphasis>affix</emphasis> is supplied, computer-generated
          prefixes will be added to the object names coming from the
          <emphasis>database_file</emphasis> (but member names appearing
          in combinations will not be modified, so this is a dangerous
          practice and should be avoided). If the
          <emphasis>-t</emphasis> option is specified, then the title of
          the <emphasis>database_file</emphasis> will become the new
          title of the current <emphasis>BRL-CAD</emphasis> database. If
          the <emphasis>-u</emphasis> option is specified, the units of
          the current database will be set to that of the
          <emphasis>database_file</emphasis> being concatted. The
          <emphasis>-c</emphasis> option specifies that the region color
          table in the concatted <emphasis>database_file</emphasis>
          should replace any region color table in the current
          <emphasis>BRL-CAD</emphasis> database.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          <literal>mged&gt;</literal> <emphasis role="strong">dbconcat
          model_two.g two_</emphasis>
        </para>
        <para>
          <literal>mged&gt;</literal> <emphasis role="strong">dbconcat
          -s model_two.g</emphasis>
        </para>
        <para>
          <literal>mged&gt;</literal> <emphasis role="strong">dbconcat
          -c -p model_two.g two_</emphasis>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="debugbu">
    <varlistentry>
      <term>
        debugbu [<emphasis>hex_code</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>debugbu</quote> command allows the user to set or
          check the debug flags used by <emphasis>libbu</emphasis>. With
          no arguments, the <emphasis>debugbu</emphasis> command
          displays all the possible settings for the
          <emphasis>bu_debug</emphasis> flag and the current value. When
          a <emphasis>hex_code</emphasis> is supplied, that value is
          used as the new value for <emphasis>bu_debug</emphasis>.
          Similar debug commands for other <emphasis>BRL-CAD</emphasis>
          libraries are <link linkend="debuglib">debuglib</link> for
          <emphasis>librt</emphasis> and
          <link linkend="debugnmg">debugnmg</link> for the
          NMG  portion of
          <emphasis>librt</emphasis>. Other debugging commands include
          <link linkend="debugmem">debugmem</link> and
          <link linkend="debugdir">debugdir</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          <literal>mged&gt;</literal> debugbu
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">debugbu 2</emphasis>
  </para>
  <para>
    – Set <emphasis>bu_debug</emphasis> to &lt;MEM_CHECK&gt;.
  </para>
  <para xml:id="debugdir">
    debugdir
  </para>
  <para>
    The <quote>debugdir</quote> command displays a dump of the in-memory
    directory for the current database file. The information listed for
    each directory entry includes:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        memory address of the directory structure.
      </para>
    </listitem>
    <listitem>
      <para>
        name of the object.
      </para>
    </listitem>
    <listitem>
      <para>
        <quote>d_addr</quote> for objects on disk, or <quote>ptr</quote>
        for objects in memory.
      </para>
    </listitem>
    <listitem>
      <para>
        <quote>SOL,</quote> <quote>REG,</quote> or <quote>COM</quote> if
        the object is a shape, region, or combination, respectively.
      </para>
    </listitem>
    <listitem>
      <para>
        file offset (for objects on disk) or memory pointer (for objects
        in memory).
      </para>
    </listitem>
    <listitem>
      <para>
        number of instances referencing this object (not normally filled
        in).
      </para>
    </listitem>
    <listitem>
      <para>
        number of database granules used by this object.
      </para>
    </listitem>
    <listitem>
      <para>
        number of times this object is used as a member in combinations
        (not normally filled in).
      </para>
    </listitem>
  </itemizedlist>
  <variablelist >
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; debugdir
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a dump of the in-memory directory.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="debuglib">
    <varlistentry>
      <term>
        debuglib [<emphasis>hex_code</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>debuglib</quote> command allows the user to set or
          check the debug flags used by <emphasis>librt</emphasis>. With
          no arguments, the <emphasis>debuglib</emphasis> command
          displays all the possible settings for the
          <emphasis>librt</emphasis> debug flag and the current value.
          When a <emphasis>hex_code</emphasis> is supplied, that value
          is used as the new value for the flag. Similar debug commands
          for other <emphasis>BRL-CAD</emphasis> libraries are
          <link linkend="debugbu">debugbu</link> for
          <emphasis>libbu</emphasis> and
          <link linkend="debugnmg">debugnmg</link> for the
          NMG portion of
          <emphasis>librt</emphasis>. Other debugging commands include
          <link linkend="debugmem">debugmem</link> and
          <link linkend="debugdir">debugdir</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; debuglib
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of available debug values for
    <emphasis>librt</emphasis> and the current value.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">debuglib 1</emphasis>  – Set the <emphasis>librt</emphasis> debug flag to
    &lt;DEBUG_ALLRAYS&gt; (print info about rays).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="debugmem">
    <varlistentry>
      <term>
        debugmem
      </term>
      <listitem>
        <para>
          The <quote>debugmem</quote> command prints a list of all the
          memory blocks that have been allocated and recorded in the
          <emphasis>memdebug</emphasis> table. Memory allocation is not
          normally recorded in the <emphasis>memdebug</emphasis> table,
          but executing the
          <link linkend="debugbu"><emphasis>debugbu</emphasis></link><emphasis>2</emphasis>
          command will turn on the &lt;MEM_CHECK&gt; flag, and as long
          as that flag is set, all memory allocation will be recorded.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; debugmem
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of allocated memory blocks.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="debugnmg">
    <varlistentry>
      <term>
        debugnmg [<emphasis>hex_code</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>debugnmg</quote> command with no options displays a
          list of all possible debug flags available for
          NMG processing. If the command is
          invoked with a hex number argument, that value is used as the
          new value for the <emphasis>NMG</emphasis> debug flag. Similar
          debug commands for other <emphasis>BRL-CAD</emphasis>
          libraries are <link linkend="debuglib">debuglib</link> for
          <emphasis>librt</emphasis> and
          <link linkend="debugbu">debugbu</link> for
          <emphasis>libbu</emphasis>. Other debugging commands include
          <link linkend="debugmem">debugmem</link> and
          <link linkend="debugdir">debugdir</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; debugnmg 100
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the <emphasis>NMG</emphasis> debug flag to get details on the
    classification process.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="decompose">
    <varlistentry>
      <term>
        decompose <emphasis>NMG_shape</emphasis>
        [<emphasis>prefix</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>decompose</quote> command processes an
          NMG shape and produces a series of
          new <emphasis>NMG</emphasis> shapes consisting of each
          maximally connected shell in the original
          <emphasis>NMG</emphasis> shape. If an optional prefix is
          supplied, the resulting <emphasis>NMG</emphasis> shapes will
          be named by using the prefix and adding an underscore
          character and a number to make the name unique. If no prefix
          is supplied, the default prefix <quote>sh</quote> will be
          used.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; decompose shape.nmg part
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Decompose the <emphasis>NMG</emphasis> shape named
    <emphasis>shape.nmg</emphasis> into maximally connected shells and
    put each resulting shell into a separate <emphasis>NMG</emphasis>
    shape named <emphasis>part_1</emphasis>,
    <emphasis>part_2</emphasis>, ….
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="delay">
    <varlistentry>
      <term>
        delay seconds microseconds
      </term>
      <listitem>
        <para>
          The <quote>delay</quote> command provides a delay of the
          specified time before the next command will be processed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; delay 5 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delay for 5 seconds.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="dm">
    <varlistentry>
      <term>
        dm <emphasis>subcommand</emphasis> [<emphasis>args</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>dm</quote> command provides a means to interact
          with the display manager at a lower level. The
          <emphasis>dm</emphasis> command accepts the following
          subcommands:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        set [<emphasis>var</emphasis> [<emphasis>val</emphasis>]]
      </term>
      <listitem>
        <para>
          The <quote>set</quote> subcommand provides a means to set or
          query display manager-specific variables. Invoked without any
          arguments, the <emphasis>set</emphasis> subcommand will return
          a list of all available internal display manager variables. If
          only the <emphasis>var</emphasis> argument is specified, the
          value of that variable is returned. If both
          <emphasis>var</emphasis> and <emphasis>val</emphasis> are
          given, then <emphasis>var</emphasis> will be set to
          <emphasis>val</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        size [<emphasis>width height</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>size</quote> subcommand provides a means to set or
          query the window size. If no arguments are given, the display
          manager s window size is returned. If
          <emphasis>width</emphasis> and <emphasis>height</emphasis> are
          specified, the display manager makes a request to have its
          window resized. Note that a size request is just that, a
          request, so it may be ignored, especially if the user has
          resized the window using the mouse.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        m <emphasis>button</emphasis> x y
      </term>
      <listitem>
        <para>
          The <quote>m</quote> subcommand is used to simulate an
          <link linkend="M">M</link> command. The
          <emphasis>button</emphasis> argument determines which mouse
          button is being used to trigger a call to this command. This
          value is used in the event handler to effect dragging the
          faceplate scrollbars. The <emphasis>x</emphasis> and
          <emphasis>y</emphasis> arguments are in X screen coordinates,
          which are converted to MGED screen coordinates before being
          passed to the <link linkend="M">M</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        am &lt;<emphasis>r</emphasis> | <emphasis>t</emphasis> |
        <emphasis>s</emphasis>&gt; x y
      </term>
      <listitem>
        <para>
          The <quote>am</quote> subcommand effects
          <emphasis>mged</emphasis> s alternate mouse mode. The
          alternate mouse mode gives the user a different way of
          manipulating the view or an object. For example, the user can
          drag an object or perhaps rotate the view while using the
          mouse. The first argument indicates the type of operation to
          perform (i.e., <emphasis>r</emphasis> for rotation,
          <emphasis>t</emphasis> for translation, and
          <emphasis>s</emphasis> for scale). The <emphasis>x</emphasis>
          and <emphasis>y</emphasis> arguments are in X screen
          coordinates and are transformed appropriately before being
          passed to the <link linkend="knob">knob</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        adc &lt;<emphasis>1</emphasis> | <emphasis>2</emphasis> |
        <emphasis>t</emphasis> | <emphasis>d</emphasis>&gt; x y
      </term>
      <listitem>
        <para>
          The <quote>adc</quote> subcommand provides a way of
          manipulating the angle distance cursor while using the mouse.
          The first argument indicates the type of operation to perform
          (i.e., <emphasis>1</emphasis> for angle 1,
          <emphasis>2</emphasis> for angle 2, <emphasis>t</emphasis> for
          translate, and <emphasis>d</emphasis> for tick distance). The
          <emphasis>x</emphasis> and <emphasis>y</emphasis> arguments
          are in X screen coordinates and are transformed appropriately
          before being passed to the <link linkend="adc">adc</link>
          command (i.e., not <quote>dm adc</quote>).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        con &lt;<emphasis>r</emphasis> | <emphasis>t</emphasis> |
        <emphasis>s</emphasis> &lt;<emphasis>x</emphasis> |
        <emphasis>y</emphasis> | <emphasis>z</emphasis>&gt; xpos ypos
      </term>
      <listitem>
        <para>
          This form of the <quote>con</quote> subcommand provides a way
          to effect constrained manipulation of the view or an object
          while using the mouse. This simulates the behavior of sliders
          without taking up screen real estate. The first argument
          indicates the type of operation to perform (i.e.,
          <emphasis>r</emphasis> for rotation, <emphasis>t</emphasis>
          for translation, and <emphasis>s</emphasis> for scale). The
          &lt;<emphasis>x</emphasis> | <emphasis>y</emphasis> |
          <emphasis>z</emphasis>&gt; argument is the axis of rotation,
          translation, or scale. The <emphasis>xpos</emphasis> and
          <emphasis>ypos</emphasis> arguments are in X screen
          coordinates and are transformed appropriately before being
          passed to the <link linkend="knob">knob</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        con <emphasis>a</emphasis> &lt;<emphasis>x</emphasis> |
        <emphasis>y</emphasis> | <emphasis>1</emphasis> |
        <emphasis>2</emphasis> | <emphasis>d</emphasis>&gt; xpos ypos
      </term>
      <listitem>
        <para>
          This form of the <quote>con</quote> subcommand provides a way
          to effect constrained manipulation of the angle distance
          cursor while using the mouse. This simulates the behavior of
          sliders without taking up screen real estate. The first
          argument indicates that this is to be applied to the angle
          distance cursor. The next argument indicates the type of
          operation to perform (i.e., <emphasis>x</emphasis> for
          translate in the <emphasis>x</emphasis> direction,
          <emphasis>y</emphasis> for translate in the
          <emphasis>y</emphasis> direction, <emphasis>1</emphasis> for
          angle 1, <emphasis>2</emphasis> for angle 2, and
          <emphasis>d</emphasis> for tick distance). The
          <emphasis>xpos</emphasis> and <emphasis>ypos</emphasis>
          arguments are in <emphasis>x</emphasis> screen coordinates and
          are transformed appropriately before being passed to the
          <link linkend="knob">knob</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; dm set
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get a list of the available display manager internal variables.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    set perspective 1</emphasis>  – Turn on perspective projection in the display.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    size</emphasis>  – Return the size to the display manager.
  </para>
  <para>
    mged&gt; <emphasis role="strong">dm size 900 900</emphasis>  – Request that the display manager window be resized to
    900x900.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    m 2 100 200</emphasis>  – Simulate a button2 press at (100, 200) in X screen
    coordinates.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    am r 400 100</emphasis>  – Start an alternate mouse mode rotation.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    adc d 300 200</emphasis>  – Start a tick distance manipulation.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    con t z 200 200</emphasis>  – Start a constrained translation down the Z axis.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    con a d 200 100</emphasis>  – Start a constrained tick distance manipulation.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">dm
    idle</emphasis>  – End drag.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="draw">
    <varlistentry>
      <term>
        draw [<emphasis>-R -A -s -o -C#/#/#</emphasis>]
        &lt;<emphasis>objects | attribute name/value
        pairs</emphasis>&gt;
      </term>
      <listitem>
        <para>
          Add &lt;<emphasis>objects</emphasis>&gt; to the display list
          so that they will appear on the <emphasis>MGED</emphasis>
          display. The <link linkend="e">e</link> command is a synonym
          for <emphasis>draw</emphasis>.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        The <emphasis>-C</emphasis> option provides the user a way to
        specify a color that overrides all other color specifications
        including combination colors and region-id-based colors.
      </para>
    </listitem>
    <listitem>
      <para>
        The <emphasis>-s</emphasis> option specifies that subtracted and
        intersected objects should be drawn with shape lines rather than
        dot-dash lines.
      </para>
    </listitem>
    <listitem>
      <para>
        The <emphasis>-A</emphasis> option specifies that the arguments
        provided to this command are attribute name/value pairs, and
        only objects having the specified attributes and values are to
        be displayed. The default (without <emphasis>-o</emphasis>) is
        that only objects having all the specified attribute name/value
        pairs will be displayed.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; draw object1 object2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Draw <emphasis>object1</emphasis> and <emphasis>object2</emphasis>
    in the <emphasis>MGED</emphasis> display.
  </para>
  <para>
    mged&gt; draw -C 255/255/255 object2
  </para>
  <para>
    – Draw <emphasis>object2</emphasis> in white.
  </para>
  <para>
    mged&gt; draw -A -o Comment {First comment} Comment {Second comment}
  </para>
  <para>
    – Draw objects that have a <quote>Comment</quote> attribute with a
    value of either <quote>First comment</quote> or <quote>Second
    comment.</quote>
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="dup">
    <varlistentry>
      <term>
        dup <emphasis>file</emphasis> [<emphasis>prefix</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>dup</quote> command checks the specified
          <emphasis>file</emphasis> (which is expected to contain a
          <emphasis>BRL-CAD</emphasis> model) for names that are the
          same as those in the current model. If a
          <emphasis>prefix</emphasis> is included on the command line,
          all names in the specified <emphasis>file</emphasis> will have
          that <emphasis>prefix</emphasis> added to their names before
          comparison with the current model. This command is often used
          prior to invoking the <link linkend="dbconcat">dbconcat</link>
          command to ensure that there are no name clashes.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; dup other_model.g
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Check <emphasis>other_model.g</emphasis> for names duplicating
    those in the current model.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; <emphasis role="strong">dup other_model.g abc</emphasis>  – Do the same check as above, but prefix all the names
    in <emphasis>other_model.g</emphasis> with <emphasis>abc</emphasis>
    before comparing with the names in the current model.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="e2">
    <varlistentry>
      <term>
        e [<emphasis>-R -A -o -s -C#/#/#</emphasis>]
        &lt;<emphasis>objects| attribute name/value pairs</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>e</quote> command adds the objects in the argument
          list to the display list so that they will appear on the
          <emphasis>MGED</emphasis> display. This is a synonym for the
          <link linkend="draw">draw</link> command; see that entry for a
          full list of options. The <emphasis>-C</emphasis> option
          provides the user a way to specify a color that overrides all
          other color specifications including combination colors and
          region-id-based colors. The -<emphasis>A</emphasis> and
          <emphasis>-o</emphasis> options allow the user to select
          objects by attribute. The -s specifies that subtracted and
          intersected objects should be drawn with solid lines rather
          than dot-dash lines. The -<emphasis>R</emphasis> option means
          do not automatically resize the view if no other objects are
          displayed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; e object1 object2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Draw <emphasis>object1</emphasis> and <emphasis>object2</emphasis>
    in the <emphasis>MGED</emphasis> display.
  </para>
  <para>
    mged&gt; e-A -o Comment {First comment} Comment {Second comment}
  </para>
  <para>
    – Draw objects that have a <quote>Comment</quote> attribute with a
    value of either <quote>First comment</quote> or <quote>Second
    comment</quote>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="eac">
    <varlistentry>
      <term xml:id="aircode">
        eac &lt;<emphasis>aircodes</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>eac</quote> command adds all the regions in the
          current model that have one of the
          <link linkend="aircodes">aircodes</link> in the argument list to
          the display list so that they will appear on the
          <emphasis>MGED</emphasis> display. Regions that have nonzero
          <link linkend="IDENT">ident numbers</link> will not be listed
          by this command. The <link linkend="whichair">whichair</link>
          command will perform the same search, but just lists the
          results.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; eac 1 2 3
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Draw all regions with <emphasis>aircodes</emphasis> 1, 2, or 3 in
    the <emphasis>MGED</emphasis> display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="echo">
    <varlistentry>
      <term>
        echo text
      </term>
      <listitem>
        <para>
          The <quote>echo</quote> command merely echos whatever text is
          provided as an argument on the command line. This is intended
          for use in <emphasis>MGED</emphasis> scripts.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; echo some text goes here
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display the text, <quote>some text goes here.</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="edcodes">
    <varlistentry>
      <term>
        edcodes &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>edcodes</quote> command puts the user into an
          editor to edit a file that has been filled with the
          <link linkend="IDENT">ident</link>, <link linkend="aircodes">air
          code</link>, <link linkend="material_code">material code</link>,
          <link linkend="LOS">LOS</link>, and name of all the
          <link linkend="REGION">regions</link> in the specified
          objects. The user may then modify the entries (except for the
          names). The editor used is whatever the user has set in the
          environment variable <emphasis>EDITOR</emphasis>. If
          <emphasis>EDITOR</emphasis> is not set, then
          <emphasis>/bin/ed</emphasis> is used.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; edcodes object1 object2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Edit the region codes for all regions below object1 and object2.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="edcolor">
    <varlistentry>
      <term>
        edcolor
      </term>
      <listitem>
        <para>
          The <quote>edcolor</quote> command puts the user into an
          editor to edit a file that has been filled with the
          <link linkend="IDENT">ident</link> based color lookup table.
          The entire table may be seen with the
          <link linkend="prcolor">prcolor</link> command, and entries
          may be added using the <link linkend="color">color</link>
          command. The editor used is whatever the user has set in the
          environment variable <emphasis>EDITOR</emphasis>. If
          <emphasis>EDITOR</emphasis> is not set, then
          <emphasis>/bin/ed</emphasis> is used.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; edcolor
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Edit the color table.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="edcomb">
    <varlistentry>
      <term>
        edcomb <emphasis>combname R|G regionid air_code los</emphasis>
        [<emphasis>material_code</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>edcomb</quote> command allows the user to modify
          the attributes of a combination. The
          <emphasis>combname</emphasis> is the name of the combination
          to be modified. An <emphasis>R</emphasis> flag indicates that
          the <link linkend="REGION">region</link> flag should be set;
          otherwise, the region flag is unset. If the region flag is not
          being set, then the remainder of the attributes are ignored.
          If the region flag is being set, then the
          <link linkend="IDENT">region_id</link>,
          <link linkend="aircode">aircode</link>,
          <link linkend="LOS">los</link>, and
          <link linkend="material_code">material_code</link> are set according
          to the arguments supplied.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; edcomb comb1 R 1001 0 50 8
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para xml:id="LOS">
    – Make <emphasis>comb1</emphasis> a <emphasis>region</emphasis> and
    set its <emphasis>ident</emphasis> to 1001, its <emphasis>air
    code</emphasis> to 0, its <emphasis>LOS</emphasis> to 50, and its
    <emphasis>material code</emphasis> to 8.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">edcomb comb1 0 0 0 0</emphasis>  – Unset the <emphasis>region</emphasis> flag for
    combination <emphasis>comb1.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="edgedir">
    <varlistentry>
      <term>
        edgedir [<emphasis>x y z</emphasis>]|[<emphasis>rot
        fb</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>edgedir</quote> command allows the user to set the
          direction of an edge by specifying a direction vector in the
          form of <emphasis>x, y,</emphasis>and<emphasis>z</emphasis>
          components or via rotation and fallback angles. This can only
          be done while moving an edge of an
          <link linkend="ARB">ARB</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; edgedir 0 1 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the edge being edited to be parallel to the
    <emphasis>y</emphasis> axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="edmater">
    <varlistentry>
      <term>
        edmater &lt;<emphasis>combinations</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>edmater</quote> command places the user in an
          editor ready to edit a file filled with
          <link linkend="SHADER">shader</link> arguments for the
          <link linkend="COMBINATION">combinations</link> listed on the
          command line. The arguments placed in the file for editing are
          the <emphasis>shader</emphasis> name and its own arguments,
          <link linkend="RGB">RGB</link> color,
          <emphasis>RGB_valid</emphasis> flag, and the
          <link linkend="inheritance">inheritance</link> flag. The
          editor used is whatever the user has set in the environment
          variable <emphasis>EDITOR</emphasis>. If
          <emphasis>EDITOR</emphasis> is not set, then
          <emphasis>/bin/ed</emphasis> is used.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; edmater comb1 comb2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para xml:id="SHADER">
    – Edit the <emphasis>shader</emphasis> parameters for combinations
    named <emphasis>comb1</emphasis> and <emphasis>comb2</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="eqn">
    <varlistentry>
      <term>
        eqn A B C
      </term>
      <listitem>
        <para>
          The <quote>eqn</quote> command allows the user to rotate the
          face of an <link linkend="ARB">ARB</link> shape by providing
          the coefficients of an equation of the desired plane for the
          face. The coefficients <emphasis>A, B</emphasis>, and
          <emphasis>C</emphasis> are from the plane equation:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <programlisting>
        Ax + By + Cz = D
</programlisting>
  <para>
    The user must be editing an <emphasis>ARB</emphasis> shape and be
    rotating a face of the <emphasis>ARB</emphasis> for this command to
    have any effect. When entering such a state, the user will be asked
    which of the face vertices should be held constant, and from this
    information the <emphasis>D</emphasis> coefficient of the equation
    is determined.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; eqn 0 0 1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the face of the <emphasis>ARB</emphasis> being edited to be
    parallel to the <emphasis>xy</emphasis> plane.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="em">
    <varlistentry>
      <term>
        em [ -C#/#/#] value [value value . . .]
      </term>
      <listitem>
        <para>
          The <quote>em</quote> command displays all regions that a
          MUVES_Component attribute that is set to any of the specified
          value arguments. The <emphasis> C</emphasis> option specifies
          a color to draw the regions.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
      	<para>
       Examples:
       </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
         <literal>mged&gt;</literal> em engine pilot
      </term>
      <listitem>
        <para>
          – Display all regions that have_muves_Component attributes
          equal to engine or pilot.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
      </term>
      <listitem>
        <para>
          mged&gt; em  C0/255/0 hydraulics
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        – Display all regions that have_muves_Component attributes equal
        to hydraulics in green.
      </term>
      <listitem>
      	<para>
      		        – Display all regions that have_muves_Component attributes equal
        to hydraulics in green.
      	</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="erase">
      <term>
        erase <emphasis>&lt;objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>erase</quote> command deletes the specified list of
          objects from the MGED<emphasis></emphasis>display. This is a
          synonym for the <link linkend="d">d</link> command. Only
          objects that have been explicitly displayed may be deleted
          with the <quote>erase</quote> command (use the
          <link linkend="who">who</link> command to see a list of
          explicitly displayed objects). Objects that are displayed as
          members of explicitly displayed combinations cannot be deleted
          from the display with this command (see
          <link linkend="dall">dall</link> or
          <link linkend="erase_all">erase_all</link>). Note that this
          has no effect on the <emphasis>BRL-CAD</emphasis> database
          itself. To actually remove objects from the database, use the
          <link linkend="kill">kill</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; erase region1 shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delete <emphasis>region1</emphasis> and
    <emphasis>shapea</emphasis> from the MGED display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="erase_all">
    <varlistentry>
      <term>
        erase_all <emphasis>&lt;objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>erase_all</quote> command deletes the specified
          list of objects from the MGED display. This is a synonym for
          the <link linkend="dall">dall</link> command. This command
          will allow the user to delete objects that have not been
          explicitly displayed (unlike the <link linkend="d">d</link> or
          <link linkend="erase">erase</link> commands). Note that this
          has no effect on the <emphasis>BRL-CAD</emphasis> database
          itself. To actually remove objects from the database, use the
          <link linkend="kill">kill</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; erase_all region1 shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delete <emphasis>region1</emphasis> and
    <emphasis>shapea</emphasis> from the MGED display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ev">
    <varlistentry>
      <term>
        ev [<emphasis>-dfnrstuvwST</emphasis>]
        [<emphasis>-P#</emphasis>] [-C#/#/#]
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>ev</quote> command evaluates the
          <emphasis>objects</emphasis> specified by tessellating all
          <link linkend="primitive">primitive shapes</link> in the objects
          and then performing any <link linkend="BOOLEAN">Boolean
          operations</link> specified in the
          <emphasis>objects</emphasis>. The result is then displayed in
          the MGED display according to the specified options:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        d – Do not perform Boolean operations or any checking; simply
        convert shapes to polygons and draw them. Useful for visualizing
        BOT and polysolid primitives.
      </para>
    </listitem>
    <listitem>
      <para>
        f – Fast path for quickly visualizing polysolid primitives.
      </para>
    </listitem>
    <listitem>
      <para>
        w – Draw wireframes (rather than polygons).
      </para>
    </listitem>
    <listitem>
      <para>
        n – Draw surface normals as little <quote>hairs.</quote>
      </para>
    </listitem>
    <listitem>
      <para>
        s – Draw shape lines only (no dot-dash for subtract and
        intersect).
      </para>
    </listitem>
    <listitem>
      <para>
        t – Perform CSG-to-tNURBS conversion (still under development).
      </para>
    </listitem>
    <listitem>
      <para>
        v – Shade using per-vertex normals, when present.
      </para>
    </listitem>
    <listitem>
      <para>
        u – Draw NMG edgeuses (for
        debugging).
      </para>
    </listitem>
    <listitem>
      <para>
        S – Draw tNURBs with trimming curves only, no surfaces.
      </para>
    </listitem>
    <listitem>
      <para>
        T – Do not triangulate after evaluating the Boolean (may produce
        unexpected results if not used with the <emphasis>w</emphasis>
        option).
      </para>
    </listitem>
    <listitem>
      <para>
        P# – Use # processors in parallel. Default=1.
      </para>
    </listitem>
    <listitem>
      <para>
        r – Draw all objects in red. Useful for examining objects
        colored black.
      </para>
    </listitem>
    <listitem>
      <para>
        C#/#/# – Draw all objects in in the specified rgb color.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ev region1 shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display evaluated <emphasis>region1</emphasis> and
    <emphasis>shapea</emphasis> as shaded polygons.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ev
    -wT region1</emphasis>  – Display evaluated <emphasis>region1</emphasis> as
    wireframe without triangulating.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="exit">
    <varlistentry>
      <term>
        exit
      </term>
      <listitem>
        <para>
          The <quote>exit</quote> command ends the MGED process. This is
          a synonym for the <link linkend="quit">quit</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; exit
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Stop MGED.
  </para>
  <para>
     
  </para>
  <para xml:id="expand">
    <emphasis role="strong">expand</emphasis> regular_expression
  </para>
  <para>
    The <quote>expand</quote> command performs matching of the
    <emphasis>regular_expression</emphasis> with the names of all the
    objects in the database. It returns all those that successfully
    match.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; expand *.r
  </para>
  <para>
    – Display a list of all database object names that end in
    <quote>.r</quote>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="export_body">
    export_body object file
  </para>
  <para>
    The <quote>export_body</quote> command is used to copy the contents
    of the specified binary <emphasis>object</emphasis> into the
    specified <emphasis>file</emphasis>. Currently, only binary objects
    containing a uniform array of simple objects is supported.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; export_body bin_chars /home/fred/chars
  </para>
  <para>
    – Copy the contents of <quote>bin_chars</quote> into the file
    <quote>/home/fred/chars</quote>
  </para>
  <para xml:id="expand_comb">
    expand_comb <emphasis>prefix comb …</emphasis>
  </para>
  <para>
    The <emphasis>expand_comb</emphasis> will create a new combination
    object <emphasis>prefix</emphasis>. For each Boolean node in the
    original tree of the combination a new combination will be created.
    Each combination constructed will contain a single Boolean operation
    of two leaf nodes. The leaf nodes will be named
    <emphasis>prefix</emphasis>l and <emphasis>prefix</emphasis>r for
    the left and right nodes of the tree respectively. Sub-nodes will
    have <quote>l</quote> and <quote>r</quote> suffixes added based upon
    whether they are left or right children of the node.
  </para>
  <para xml:id="groups">
    Note that regions, combinations and objects created with the
    <quote>g</quote> command (sometimes colloquially referred to as
    groups) are all combinations, and can be expanded with this command.
  </para>
  <para>
    <emphasis role="strong">Example:</emphasis>
  </para>
  <programlisting>
mged&gt; r foo.r u a - b + c u d + e
Defaulting item number to 1003
Creating region id=1003, air=0, GIFTmaterial=1, los=100
mged&gt; l foo.r
foo.r:  REGION id=1003  (air=0, los=100, GIFTmater=1) --
   u a
   - b
   + c
   u d
   + e
mged&gt; tree foo.r
foo.r/R
        u a
        - b
        + c
        u d
        + e

mged&gt; expand_comb_tree -c foo.r
mged&gt; l foo.r_xpand
foo.r_xpand:  REGION id=1003  (air=0, los=100, GIFTmater=1) --
   u foo.r_xpand_l
   u foo.r_xpand_r
mged&gt; tree foo.r_xpand
foo.r_xpand/R
        u foo.r_xpand_l/R
                u foo.r_xpand_ll/R
                        u a
                        - b
                + c
        u foo.r_xpand_r/R
                u d
                + e
</programlisting>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="extrude">
    extrude #### distance
  </para>
  <para>
    The <quote>extrude</quote> command modifies an
    <link linkend="ARB">ARB</link> shape by extruding the specified face
    through the specified <emphasis>distance</emphasis> to determine the
    position of the opposing face. The face to be extruded is identified
    by listing its vertex numbers as they are labeled in the MGED
    display when the <emphasis>ARB</emphasis> is edited. Note that the
    face identified is not moved, but the opposite face is adjusted so
    that it is the specified <emphasis>distance</emphasis> from the
    specified face. The order that the vertex numbers are listed
    determines the direction of the extrusion using the right-hand rule.
  </para>
  <para>
    Examples:
  </para>
  <para>
    mged&gt; extrude 1234 5
  </para>
  <para>
    – Move face 5678 so that it is 5 <link linkend="units">units</link>
    from face 1234.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="eye_pt">
    <varlistentry>
      <term>
        eye_pt x y z
      </term>
      <listitem>
        <para>
          The <quote>eye_pt</quote> command positions the <emphasis>eye
          point</emphasis> to the given <emphasis>x, y</emphasis>, and
          <emphasis>z</emphasis> coordinates (specified in mm).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; eye_pt 100 0 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Position the eye at 100 mm along the <emphasis>x</emphasis>axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="e_muves">
    <varlistentry>
      <term>
        e_muves MUVES_component1 MUVES_component2 …
      </term>
      <listitem>
        <para>
          The <quote>e_muves</quote> command displays the
          <emphasis>BRL-CAD</emphasis>
          <link linkend="REGION">regions</link> that are part of the
          indicated MUVES components. The internal list of MUVES
          components must have been created earlier by the
          <link linkend="read_muves">read_muves</link> command. The
          MUVES components listed on the command line must not use any
          wildcards (the expansion will result in
          <emphasis>BRL-CAD</emphasis> objects, not_muves components).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; e_muves fuel transmission
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display the <emphasis>BRL-CAD</emphasis> regions that make up the
    MUVES components named <quote>fuel</quote> and
    <quote>transmission</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="facedef">
    <varlistentry>
      <term>
        facedef <emphasis>####</emphasis> [<emphasis>a|b|c|d
        parameters</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>facedef</quote> command allows the user to redefine
          any face of an <link linkend="ARB">ARB8</link> shape. The user
          must be in Primitive Edit Mode with an
          <emphasis>ARB</emphasis> selected for editing. The optional
          parameters may be omitted, and MGED will prompt for the
          missing values. The options are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        a  – Specify the new location of this face by providing
        coefficients for its plane equation:
      </para>
    </listitem>
  </itemizedlist>
  <programlisting>
        Ax + By + Cz = D.
</programlisting>
  <itemizedlist>
    <listitem>
      <para>
        b  – Specify the new location of this face using three
        points.
      </para>
    </listitem>
    <listitem>
      <para>
        c  – Specify the new location of this face using rotation
        and fallback angles.
      </para>
    </listitem>
    <listitem>
      <para>
        d  – Specify the new location of this face by changing the
        <emphasis>D</emphasis> value in the plane equation.
      </para>
    </listitem>
    <listitem>
      <para>
        q  – Return to MGED prompt.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; facedef 1234 a 1 0 0 20
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Move face 1234 such that it is in the <emphasis>yz</emphasis>
    plane at <emphasis>x</emphasis>=20.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">facedef 5678 b 0 0 10 10 0 10 10 10
    10</emphasis>  – Move face 5678 such that it is in the plane formed by
    the three points (0 0 10), (10 0 10), and (10 10 10).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="facetize">
    <varlistentry>
      <term>
        facetize [<emphasis>-ntT</emphasis>] [<emphasis>-P#</emphasis>]
        new_object old_object
      </term>
      <listitem>
        <para>
          The <quote>facetize</quote> command creates
          <emphasis>new_object</emphasis> as a
          <link linkend="BOT">BOT</link> shape by tessellating all the
          <link linkend="primitive">primitive shapes</link> in
          <emphasis>old_object</emphasis> and then performing any
          <link linkend="BOOLEAN">Boolean operations</link> specified in
          <emphasis>old_object</emphasis>. The <emphasis>-T</emphasis>
          option indicates that all faces in the
          <emphasis>new_object</emphasis> should be triangulated. The
          <emphasis>-n</emphasis> option specifies that the resulting
          shape should be saved as an NMG shape. The
          <emphasis>-t</emphasis> option is to create TNURB faces rather
          than planar approximations (this option is still under
          development). The <emphasis>-P</emphasis> option is intended
          to allow the user to specify the number of CPUs to use for
          this command, but it is currently ignored.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; facetize region1.nmg region1.r
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a facetized <emphasis>BOT</emphasis> version of existing
    object <emphasis>region1.r.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="find">
    <varlistentry>
      <term>
        find &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>find</quote> command displays all
          <link linkend="COMBINATION">combinations</link> that have any
          of the <emphasis>objects</emphasis> specified as a
          <link linkend="member">member</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; find shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all <emphasis>combinations</emphasis> that refer to
    <emphasis>shapea.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="fracture">
    <varlistentry>
      <term>
        fracture <emphasis>NMG_shape</emphasis>
        [<emphasis>prefix</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>fracture</quote> command creates a new
          NMG shape for every
          <quote>face</quote> in the specified
          <emphasis>NMG_shape</emphasis>. The new shapes will be named
          by adding an underscore and a number to the
          <emphasis>prefix</emphasis>. If no <emphasis>prefix</emphasis>
          is specified, then the <emphasis>NMG_shape</emphasis> name
          provided is used in place of the <emphasis>prefix</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; fracture shape1.nmg f
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a series of <emphasis>NMG</emphasis> shapes named
    <quote>f_#</quote>, one for each face in
    <emphasis>shape1.nmg.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="g">
    <varlistentry>
      <term>
        g <emphasis>groupname</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>g</quote> command creates a special type of
          combination often referred to as a
          <link linkend="group">group</link>. This builds a
          <emphasis>combination</emphasis> by unioning together all the
          listed <emphasis>objects</emphasis>. If
          <emphasis>groupname</emphasis> already exists, then the list
          of <emphasis>objects</emphasis> will be unioned to the end of
          it. (Note that an existing <emphasis>groupname</emphasis> is
          not restricted to being a <emphasis>group</emphasis>; any
          <emphasis>combination</emphasis> is legal.) Other commands to
          build <emphasis>combinations</emphasis> are
          <link linkend="c">c</link>, <link linkend="r">r</link>, or
          <link linkend="comb">comb</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; g shape1.nmg f
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create or extend shape1.nmg by unioning in <emphasis>f.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="garbage_collect">
    <varlistentry>
      <term>
        garbage_collect
      </term>
      <listitem>
        <para>
          The <quote>garbage_collect</quote> command eliminates unused
          space in a BRL-CAD database file.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; garbage_collect
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Clean out unused space in the database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="gui">
    <varlistentry>
      <term>
        gui [<emphasis>-config b|c|g</emphasis>] [<emphasis>-d
        display_string</emphasis>] [<emphasis>-gd
        graphics_display_string</emphasis>] [<emphasis>-dt
        graphics_type</emphasis>] [<emphasis>-id name</emphasis>]
        [<emphasis>-c -h -j -s</emphasis>]
      </term>
      <listitem>
        <para>
          This command is used to create an instance of MGED s default
          Tcl/Tk graphical user interface (GUI). The following options
          are allowed:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
 <programlisting>
        -config b|c|g          Configure the GUI to display the command window, the
                               graphics window, or both. This option is useful only when
                               the GUI is combining the text and graphics windows. See the
                               -c option.

       -d display_string       Display/draw the GUI on the screen indicated by the
                               display_string. Note that this string format is the same as
                               the X DISPLAY environment variable.

       -gd display_string      Display/draw the graphics window on the screen indicated by
                               the display_string. Note that this string format is the same
                               as the X DISPLAY environment variable.

       -dt graphics_type       Indicates the type of graphics windows to use. The possible
                               choices are X and ogl (for machines that support OpenGL).
                               Defaults to ogl, if supported; otherwise X.

       -id name                Specify the id to use when referring to this instance of the
                               GUI.

       -c                      Combine text window and display manager windows.

       -s                      Use separate text window and display manager windows. This
                               is the default behavior.

       -j                      Join the collaborative session.

       -h                      Print the help message.
     </programlisting>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="help">
    <varlistentry>
      <term>
        help [<emphasis>command</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>help</quote> command returns a list of available
          MGED commands along with a one-line usage message for each. If
          a command is supplied as an argument, the one-line usage
          message for that command is returned. The
          <link linkend="helpdevel">helpdevel</link>,
          <link linkend="helplib">helplib</link>,
          <link linkend="questionmark">?</link>,
          <link linkend="questionmarkdevel">?devel</link>, and
          <link linkend="questionmarklib">?lib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; help ae
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display a one-line usage message for the <emphasis>ae</emphasis>
    command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="helpdevel">
    <varlistentry>
      <term>
        helpdevel [<emphasis>command</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>helpdevel</quote> command returns a list of
          available <emphasis>developer</emphasis> commands along with a
          one-line usage message for each. If a command is supplied as
          an argument, the one-line usage message for that command is
          returned. The <link linkend="help">help</link>,
          <link linkend="helplib">helplib</link>,
          <link linkend="questionmark">?</link>,
          <link linkend="questionmarkdevel">?devel</link>,and
          <link linkend="questionmarklib">?lib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; helpdevel winset
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display a one-line usage message for the
    <emphasis>winset</emphasis> command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="helplib">
    <varlistentry>
      <term>
        helplib [<emphasis>command</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>helplib</quote> command returns a list of available
          <emphasis>library</emphasis> commands along with a one-line
          usage message for each. If a command is supplied as an
          argument, the one-line usage message for that command is
          returned. The <link linkend="help">help</link>,
          <link linkend="helpdevel">helpdevel</link>,
          <link linkend="questionmark">?</link>,
          <link linkend="questionmarkdevel">?devel</link>, and
          <link linkend="questionmarklib">?lib</link> commands provide
          additional information on available commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; helplib mat_trn
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display a one-line usage message for the
    <emphasis>mat_trn</emphasis> command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="hide">
    hide &lt;objects&gt;
  </para>
  <para>
    The <quote>hide</quote> command sets the <quote>hidden</quote> flag
    for the specified objects. When this flag is set, the objects do not
    appear in <link linkend="hist_add">t</link> or
    <link linkend="hist_add">ls</link> command outputs. The
    <emphasis>-a</emphasis> option on the <emphasis>ls</emphasis> or
    <emphasis>t</emphasis> command will force hidden objects to appear
    in its output.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; hide sol_a
  </para>
  <para>
    – Mark <emphasis>sol_a</emphasis> as hidden.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="history">
    history [<emphasis>-delays</emphasis>]
  </para>
  <para xml:id="hist_add">
    The <quote>history</quote> command displays the list of commands
    executed during the current MGED session. The one exception is the
    <link linkend="hist_add">hist_add</link> command, which can add a
    command to the history list without executing it. If the
    <emphasis>-delays</emphasis> option is used, then the delays between
    commands will also be displayed.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; history
  </para>
  <para>
    – Display the command history list.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="i">
    <varlistentry>
      <term>
        i <emphasis>obj_name comb_name</emphasis>
        [<emphasis>operation</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>i</quote> command adds
          <emphasis>obj_name</emphasis> to the end of the combination
          named <emphasis>comb_name</emphasis>. The
          <emphasis>operation</emphasis> may be <quote>+,</quote>
          <quote>-,</quote> or <quote>u.</quote> If no
          <emphasis>operation</emphasis> is specified, <quote>u</quote>
          is assumed. If <emphasis>comb_name</emphasis> does not exist,
          it is created.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; i region3 group5
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Add <emphasis>region3</emphasis> to the combination
    <emphasis>group5.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="idents">
    <varlistentry>
      <term>
        idents <emphasis>file_name</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>idents</quote> command places a summary of the
          <link linkend="REGION">regions</link> in the list of
          <emphasis>objects</emphasis> specified in the file specified.
          If any regions include other regions, then only the first
          encountered region in that tree will be listed. The resulting
          file will contain two lists of regions, one in the order
          encountered in the list of <emphasis>objects</emphasis>, and
          the other ordered by <link linkend="IDENT">ident</link>
          number. The data written for each region includes (in this
          order) a sequential region count, the
          <emphasis>ident</emphasis> number, the
          <link linkend="air_code">air code</link>, the
          <link linkend="material_code">material code</link>, the
          <link linkend="LOS">LOS</link>, and the
          <link linkend="path">path</link> to the region.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; idents regions_file group1 group2 region3
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a file named <emphasis>regions_file</emphasis> and list all
    the regions in <emphasis>group1, group2,</emphasis> and
    <emphasis>region3</emphasis> in the file.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ill">
    <varlistentry>
      <term>
        ill obj_name
      </term>
      <listitem>
        <para>
          The <quote>ill</quote> command performs the function of
          selecting an object after entering
          <emphasis>solid</emphasis>(i.e.,
          primitive)<emphasis>illuminate</emphasis> or <emphasis>object
          illuminate</emphasis> mode. In <emphasis>solid
          illuminate</emphasis> mode, this command selects the specific
          shape for editing. In <emphasis>object illuminate</emphasis>
          mode, this command selects the leaf object for the object
          path, then the user may use the mouse to select where along
          the object path the editing should be applied. In both modes,
          the <emphasis>ill</emphasis> command will only succeed if the
          specified <emphasis>obj_name</emphasis> is only referenced
          once in the displayed objects; otherwise a <emphasis>multiply
          referenced</emphasis> message will be displayed. If the
          <emphasis>ill</emphasis> command fails, the user must resort
          to either using the mouse to make the selection, or using
          <link linkend="aip">aip</link> and <link linkend="M">M 1 0
          0</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ill shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Select <emphasis>shapea</emphasis> for editing.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="in">
    <varlistentry>
      <term>
        in [<emphasis>-f</emphasis>] [<emphasis>-s</emphasis>]
        <emphasis>new_shape_name shape_type</emphasis>
        &lt;<emphasis>parameters</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>in</quote> command allows the user to type in the
          arguments needed to create a shape with the name
          <emphasis>new_shape_name</emphasis> of the type
          <emphasis>shape_type</emphasis>. The command may be invoked
          with no arguments, and it will prompt the user for all needed
          information. The <emphasis>-s</emphasis> option will invoke
          the primitive edit mode on the new shape immediately after
          creation. The <emphasis>-f</emphasis> option does not draw the
          new shape, and therefore the <emphasis>-s</emphasis> option
          may not be used in conjunction with <emphasis>-f</emphasis>.
          The possible values for <emphasis>shape_type</emphasis> are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        arb8 – <link linkend="ARB">ARB</link> (eight vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb7 – <link linkend="ARB">ARB</link> (seven vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb6 – <link linkend="ARB">ARB</link> (six vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb5 – <link linkend="ARB">ARB</link> (five vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb4 – <link linkend="ARB">ARB</link> (four vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arbn   Arbitrary polyhedron with arbitrary number of vertices
        (plane equations).
      </para>
    </listitem>
    <listitem>
      <para>
        bot   Bag of Triangles.
      </para>
    </listitem>
    <listitem>
      <para>
        dsp   Displacement Map.
      </para>
    </listitem>
    <listitem>
      <para>
        pipe   Pipe (run of connected pipe or wire).
      </para>
    </listitem>
    <listitem>
      <para xml:id="EBM">
        ebm –<link linkend="EBM">Extruded Bit Map</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        vol –<link linkend="vol">Voxels</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        hf – <link linkend="height_field">Height Field</link> deprecated, see dsp.
      </para>
    </listitem>
    <listitem>
      <para>
        ars – <link linkend="arbitrary_faceted_solid">Arbitrary Faceted Solid</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        half – <link linkend="half_space">Half Space</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        sph – <link linkend="ellipsoid">Ellipsoid</link> (center and radius).
      </para>
    </listitem>
    <listitem>
      <para>
        ell – <link linkend="ellipsoid">Ellipsoid</link> (center and three
        semi-axes).
      </para>
    </listitem>
    <listitem>
      <para>
        ellg – <link linkend="ellipsoid">Ellipsoid</link> (foci and chord
        length).
      </para>
    </listitem>
    <listitem>
      <para>
        ell1 – <link linkend="ellipsoid">Ellipsoid</link> (center, one
        semi-axis, and a radius of revolution).
      </para>
    </listitem>
    <listitem>
      <para>
        tor – <link linkend="torus">Torus</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        tgc – <link linkend="TGC">Truncated General Cone</link> (most
        general TGC).
      </para>
    </listitem>
    <listitem>
      <para>
        tec – <link linkend="TGC">Truncated General Cone</link> (top
        radii are scaled from base radii).
      </para>
    </listitem>
    <listitem>
      <para>
        rec – <link linkend="TGC">Truncated General Cone</link> (right
        elliptical cylinder).
      </para>
    </listitem>
    <listitem>
      <para>
        trc – <link linkend="TGC">Truncated General Cone</link>
        (truncated right circular cone).
      </para>
    </listitem>
    <listitem>
      <para>
        rcc – <link linkend="TGC">Truncated General Cone</link> (right
        circular cylinder).
      </para>
    </listitem>
    <listitem>
      <para>
        box – <link linkend="ARB">ARB</link> (vertex and three vectors).
      </para>
    </listitem>
    <listitem>
      <para>
        raw – <link linkend="ARB">ARB</link> (right angle wedge).
      </para>
    </listitem>
    <listitem>
      <para>
        rpp – <link linkend="ARB">ARB</link> (axis aligned rectangular
        parallelepiped).
      </para>
    </listitem>
    <listitem>
      <para>
        rpc – <link linkend="right_parabolic_cylinder">Right Parabolic Cylinder</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        rhc – <link linkend="right_hyperbolic_cylinder">Right Hyperbolic Cylinder</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        epa – <link linkend="elliptical_paraboloid">Elliptical Paraboloid</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        ehy – <link linkend="elliptical_hyperboloid">Elliptical Hyperboloid</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        eto – <link linkend="elliptical_torus">Elliptical Torus</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        part – <link linkend="particle">Particle</link>.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; in new1 raw 0 0 0 0 0 1 1 0 0 0 1 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create an <emphasis>ARB</emphasis> named <emphasis>new1</emphasis>
    in the form of a right angle wedge.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="inside">
    <varlistentry>
      <term>
        inside [<emphasis>outside_shape_name
        new_inside_shape_name</emphasis>
        &lt;<emphasis>parameters</emphasis>&gt;]
      </term>
      <listitem>
        <para>
          The <quote>inside</quote> command creates a new shape that is
          <emphasis>inside</emphasis> an existing shape. This command is
          typically used to create an <emphasis>inside</emphasis> shape
          that can be subtracted from the original shape to produce a
          hollow shell. The command is typically used with no arguments,
          and it prompts the user for all needed information; however,
          all the parameters may be supplied on the command line. If
          MGED is in <emphasis>primitive
          edit mode</emphasis> when the <quote>inside</quote>
          command is issued, then the shape currently being edited will
          be used as the <quote>outside_shape.</quote> Similarly, if
          MGED is in <emphasis>matrix edit
          mode</emphasis> when the <quote>inside</quote> command
          is executed, then the current key
          shape will be used as the outside shape.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; inside out_arb in_arb 1 1 1 1 1 1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a shape named <emphasis>in_arb</emphasis> such that each
    face is 1 <link linkend="units">unit</link> from the corresponding
    face in <emphasis>out_arb.</emphasis>
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">inside in_arb 1 1 1 1 1 1</emphasis>  – Create a shape named <emphasis>in_arb</emphasis> such
    that each face is 1 <link linkend="units">unit</link> from the
    corresponding face in the current key
    shape or the shape currently being edited.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="item">
    <varlistentry>
      <term>
        item <emphasis>region_name ident_number</emphasis>
        [<emphasis>air_code</emphasis>
        [<emphasis>material_code</emphasis> [<emphasis>LOS</emphasis>]]]
      </term>
      <listitem>
        <para>
          The <quote>item</quote> command sets the values of
          <link linkend="IDENT">ident_number</link>,
          <link linkend="air_code">aircode</link>,
          <link linkend="material_code">material_code</link>, and
          <link linkend="LOS">LOS</link> for the specified
          <link linkend="REGION">region</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; item region_1 1137 0 8 100
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para xml:id="material_code">
    – Set <emphasis>ident number</emphasis> to 1137, <emphasis>air
    code</emphasis> to 0, <emphasis>material code</emphasis> to 8, and
    <emphasis>los</emphasis> to 100 for <emphasis>region_1.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="joint">
    joint <emphasis>command</emphasis> [<emphasis>options</emphasis>]
  </para>
  <para>
    articulation/animation commands (experimental)
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    ?
  </para>
  <para>
    This command returns a list of available joint commands.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    accept [<emphasis>-m</emphasis>] [<emphasis>joint_names</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    debug [<emphasis>hex code</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    help [<emphasis>commands</emphasis>]
  </para>
  <para>
    This command returns a usage message for each joint command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    holds [<emphasis>names</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    list [<emphasis>names</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    load file_name
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    mesh
  </para>
  <para>
    move <emphasis>joint_name p1</emphasis> [<emphasis>p2…p6</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    reject [<emphasis>joint_names</emphasis>]
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    save file_name
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    solve constraint
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    test file_name
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    unload
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="journal">
    <varlistentry>
      <term>
        journal [<emphasis>-d</emphasis>]
        [<emphasis>journal_file_name</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>journal</quote> command starts or stops the
          journaling of MGED commands to a file. If executed with no
          arguments, the command stops journaling. If
          <emphasis>journal_file_name</emphasis> is provided, that file
          will become the recipient of the journaling. If a
          <emphasis>-d</emphasis> option is also provided, the
          journaling will include the delays between commands.
          Journaling is off by default.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; journal journal_file
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Start journaling to <emphasis>journal_file.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="keep">
    <varlistentry>
      <term>
        keep <emphasis>keep_file</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>keep</quote> command copies the
          <emphasis>objects</emphasis> specified to the
          <emphasis>keep_file</emphasis>. If
          <emphasis>keep_file</emphasis> does not exist, it is created.
          If <emphasis>keep_file</emphasis> does exist, the
          <emphasis>objects</emphasis> are appended to it. The
          <emphasis>keep_file</emphasis> is a
          <emphasis>BRL-CAD</emphasis> database file. The
          <emphasis>objects</emphasis> in the list must exist in the
          current database.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; keep sample.g sample1 sample2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create <emphasis>sample.g</emphasis> file with objects
    <emphasis>sample1</emphasis> and <emphasis>sample2</emphasis> in it.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="keypoint">
    <varlistentry>
      <term>
        keypoint [<emphasis>x y z | reset</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>keypoint</quote> command without any options
          displays the current keypoint setting. If a point is
          specified, then that point becomes the
          <emphasis>keypoint</emphasis>. If <emphasis>reset</emphasis>
          is specified, then the default <emphasis>keypoint</emphasis>
          is restored. The <emphasis>keypoint</emphasis> is used as the
          center of rotation and scaling in primitive edit or matrix
          edit (formerly known as object edit) modes. This command has
          no effect when used in nonediting modes.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; keypoint 10 20 30
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the <emphasis>keypoint</emphasis> to the point (10 20 30) in
    model units.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="kill">
    <varlistentry>
      <term>
        kill [<emphasis>-f</emphasis>]
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>kill</quote> command deletes the specified
          <emphasis>objects</emphasis> from the current database. This
          command affects only the <emphasis>objects</emphasis> actually
          listed on the command line. If a combination is killed, its
          members are not affected. If the <emphasis>-f</emphasis>
          option is specified, then kill will not complain if some, or
          all, of the <emphasis>objects</emphasis> specified do not
          actually exist in the database. Note that the
          <emphasis>objects</emphasis> are killed immediately. There is
          no need for a <quote>write file</quote> command in MGED, and
          there is no <quote>undo</quote> command. Use this command with
          caution. Other commands that remove objects from the database
          are <link linkend="killall">killall</link> and
          <link linkend="killtree">killtree</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; kill group1 region2 shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Destroy <emphasis>group1</emphasis>, <emphasis>region2</emphasis>,
    and <emphasis>shapeb.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="killall">
    <varlistentry>
      <term>
		killall &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>killall</quote> command deletes the specified
          <emphasis>objects</emphasis> from the current database and
          removes all references to them from all
          <link linkend="COMBINATION">combinations</link> in the
          database. Note that the <emphasis>objects</emphasis> are
          killed immediately. There is no need for a <quote>write
          file</quote> command in MGED, and there is no
          <quote>undo</quote> command. <emphasis role="strong">Use this
          command with caution.</emphasis> Other commands that remove
          objects from the database are <link linkend="kill">kill</link>
          and <link linkend="killtree">killtree</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; killall group1 region2 shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Destroy <emphasis>group1</emphasis>, <emphasis>region2</emphasis>,
    and <emphasis>shapeb</emphasis> and remove all references to these
    objects from the database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="killtree">
    <varlistentry>
      <term>
        killtree &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>killtree</quote> command deletes the specified
          <emphasis>objects</emphasis> from the current database and
          recursively deletes all objects referenced by any of those
          objects. If one of the <emphasis>objects</emphasis> listed is
          a combination, then that <emphasis>combination</emphasis> as
          well as any objects that are members of that
          <emphasis>combination</emphasis> will be deleted. If a member
          of that <emphasis>combination</emphasis> is itself a
          <emphasis>combination</emphasis>, then all of its members will
          also be destroyed. This continues recursively until the
          primitive shapes are reached and
          destroyed. Note that the <emphasis>objects</emphasis> are
          killed immediately. There is no need for a <quote>write
          file</quote> command in MGED, and there is no
          <quote>undo</quote> command. Use this command with extreme
          caution. Other commands that remove objects from the database
          are <link linkend="kill">kill</link> and
          <link linkend="killall">killall</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; killtree group1 region2 shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Destroy <emphasis>group1</emphasis>, <emphasis>region2</emphasis>,
    and <emphasis>shapeb</emphasis> and remove all references to these
    objects from the database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="knob">
    <varlistentry>
      <term>
        knob [<emphasis>-e -i -m -v</emphasis>] [<emphasis>-o
        v|m|e|k</emphasis>] [<emphasis>zap|zero|(id</emphasis>
        [<emphasis>val</emphasis>])]
      </term>
      <listitem>
        <para>
          The <quote>knob</quote> command is used internally by MGED in
          the processing of knob input devices and is not recommended
          for users. The <emphasis>knob</emphasis> command provides a
          method for simulating knob input. With no options, it will
          display the current values for the knobs. With the
          <emphasis>zap</emphasis> or <emphasis>zero</emphasis> command
          provided, all the knob values will be reset to zero. If an
          <emphasis>id</emphasis> and <emphasis>value</emphasis> are
          provided, the specified knob setting will be simulated. If the
          <emphasis>-i</emphasis> option is specified, then the value
          provided will be used as an increment to be applied to the
          indicated knob. The knobs have different functions depending
          on the current mode. For example, if in primitive or matrix
          edit mode and a rotation or translation function is selected,
          the knob effects are applied to the edited object by default.
          However, the <emphasis>-v</emphasis> (view coordinates) and
          <emphasis>-m</emphasis> (model coordinates) options may be
          used to adjust the view without modifying primitives or
          matrices. The <emphasis>-e</emphasis> option allows the knob
          effects to be applied to the edited object when they would
          normally be applied to the view. The <emphasis>-o</emphasis>
          option allows the origin of rotation to be specified with
          <emphasis>v</emphasis>, <emphasis>m</emphasis>,
          <emphasis>e</emphasis>, and <emphasis>k</emphasis>, indicating
          view, model, and eye and keypoint, respectively. The units for
          <emphasis>value</emphasis> are degrees for rotation and local
          units for translation. The available <emphasis>knob
          ids</emphasis> are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        x – rate-based rotation about horizontal axis.
      </para>
    </listitem>
    <listitem>
      <para>
        y – rate-based rotation about vertical axis.
      </para>
    </listitem>
    <listitem>
      <para>
        z – rate-based rotation about axis normal to screen.
      </para>
    </listitem>
    <listitem>
      <para>
        X – rate-based translation in horizontal direction.
      </para>
    </listitem>
    <listitem>
      <para>
        Y – rate-based translation in vertical direction.
      </para>
    </listitem>
    <listitem>
      <para>
        Z – rate-based translation in direction normal to screen.
      </para>
    </listitem>
    <listitem>
      <para>
        S – rate-based Scale or Zoom.
      </para>
    </listitem>
    <listitem>
      <para>
        ax – absolute rotation about horizontal axis.
      </para>
    </listitem>
    <listitem>
      <para>
        ay – absolute rotation about vertical axis.
      </para>
    </listitem>
    <listitem>
      <para>
        az – absolute rotation about axis normal to screen.
      </para>
    </listitem>
    <listitem>
      <para>
        aX – absolute translation in horizontal direction.
      </para>
    </listitem>
    <listitem>
      <para>
        aY – absolute translation in vertical direction.
      </para>
    </listitem>
    <listitem>
      <para>
        aZ – absolute translation in direction normal to screen.
      </para>
    </listitem>
    <listitem>
      <para>
        aS – absolute Scale or Zoom.
      </para>
    </listitem>
    <listitem>
      <para>
        xadc – absolute translation of <link linkend="adc">adc</link> in
        horizontal direction (screen coordinates -2048 to +2048).
      </para>
    </listitem>
    <listitem>
      <para>
        yadc – absolute translation of <link linkend="adc">adc</link> in
        vertical direction (screen coordinates -2048 to +2048).
      </para>
    </listitem>
    <listitem>
      <para>
        ang1 – absolute rotation of <link linkend="adc">adc</link>
        angle1 (degrees).
      </para>
    </listitem>
    <listitem>
      <para>
        ang2 – absolute rotation of <link linkend="adc">adc</link>
        angle2 (degrees).
      </para>
    </listitem>
    <listitem>
      <para>
        distadc – distance setting of the <link linkend="adc">adc</link>
        (screen coordinates -2048 to +2048).
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; knob y 1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Start the view rotating about the vertical axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="l">
    <varlistentry>
      <term>
				l [-<emphasis>r</emphasis>]
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>l</quote> command displays a verbose description
          about the specified list of
          objects. If a specified
          <emphasis>object</emphasis> is a
          <link linkend="path">path</link>, then any transformation
          matrices along that <emphasis>path</emphasis> are applied. If
          the final <emphasis>path</emphasis> component is a
          combination, the command will list the
          <link linkend="BOOLEAN">Boolean</link> formula for the
          <emphasis>combination</emphasis> and will indicate any
          accumulated transformations (including any in that
          <emphasis>combination</emphasis>). If a
          <link linkend="SHADER">shader</link> and/or color has been
          assigned to the <emphasis>combination</emphasis>, the details
          will be listed. For a <link linkend="REGION">region</link>,
          its <link linkend="IDENT">ident</link>,
          <link linkend="air_code">air code</link>,
          <link linkend="material_code">material code</link>, and
          <link linkend="LOS">LOS</link> will also be listed. For
          primitive shapes, detailed
          <emphasis>shape</emphasis> parameters will be displayed with
          the accumulated transformation applied. If the
          <emphasis>-r</emphasis> (recursive) option is used, then each
          <emphasis>object</emphasis> on the command line will be
          treated as a <emphasis>path</emphasis>. If the
          <emphasis>path</emphasis> does not end at a primitive
          <emphasis>shape</emphasis>, then all possible
          <emphasis>paths</emphasis> from that point down to individual
          <emphasis>shapes</emphasis> will be considered. The
          <emphasis>shape</emphasis> at the end of each possible
          <emphasis>path</emphasis> will be listed with its parameters
          adjusted by the accumulated transformation.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; l region1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display details about region1.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">l
    group1/group2/region1/shape3</emphasis>  – Display shape parameters for
    <emphasis>shape3</emphasis> with matrices applied from the
    <emphasis>path.</emphasis>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">l
    -r a/b</emphasis>  – Display all possible paths that start with
    <emphasis>a/b</emphasis> and end in a primitive
    <emphasis>shape</emphasis>  – The shape parameters with the accumulated
    transformation applied will be displayed.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="labelvert">
    <varlistentry>
      <term>
        labelvert &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>labelvert</quote> command labels the vertices of
          the indicated <emphasis>objects</emphasis> with their
          coordinate values in the MGED display window. The
          <emphasis>objects</emphasis> must have already been displayed
          using <link linkend="e">e</link>, <link linkend="E">E</link>,
          <link linkend="ev">ev</link>, <link linkend="B">B</link>, or
          any other command that results in the display of an object.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; labelvert shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Place coordinate values in display near the vertices of
    <emphasis>shapeb.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="listeval">
    <varlistentry>
      <term>
        listeval [<emphasis>path</emphasis>]
      </term>
      <listitem>
        <para>
          <link linkend="COMBINATION">Combinations</link> may include
          transformation matrices to be applied to their members. A
          <emphasis>path</emphasis> through a series of
          <emphasis>combinations</emphasis> and ending with a
          primitive shape represents that
          <emphasis>primitive shape</emphasis> with the transformations
          accumulated through the path applied to it. The
          <quote>listeval</quote> command displays primitive shape
          parameters after applying the accumulated transformations from
          the indicated <emphasis>path</emphasis>. If the specified
          <emphasis>path</emphasis> does not end at a
          <emphasis>primitive shape</emphasis>, then all possible paths
          from the indicated <emphasis>path</emphasis> to any
          <emphasis>primitive shape</emphasis> will be evaluated and
          displayed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; listeval group1/region1/shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display the parameters for <emphasis>shapeb</emphasis> after
    applying the transformation matrix from <emphasis>group1</emphasis>
    for <emphasis>region1</emphasis> and the transformation matrix from
    <emphasis>region1</emphasis> for <emphasis>shapeb.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="lm">
    <varlistentry>
      <term>
        lm [-l] [values]
      </term>
      <listitem>
        <para>
          The <quote>lm</quote> command with no values argument lists
          the name of every region in the database (in alphabetical
          order), except for those marked as hidden with the hide
          command. If the values argument is supplied, only those
          regions with a <quote>MUVES_Component</quote> attribute having
          one of the values are listed. The  l option specifies to use a
          long format showing object name, object type, major type,
          minor type, and length.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
      	<para>
      	-
      </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
         mged&gt; lm engine
      </term>
      <listitem>
        <para>
          –List all regions with <quote>MUVES_Component</quote>
          attribute having a value of <quote>engine</quote>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
  		<term>
  			-
  		</term>
      <listitem>
        <para>
          mged&gt; lm  1 engine pilot
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        –List all regions with <quote>MUVES_Component</quote> attribute
        having a value of <quote>engine</quote> or <quote>pilot,</quote>
        and use the long format.
      </term>
      <listitem>
      	<para>
      		-
      	</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="loadtk">
      <term>
        loadtk
      </term>
      <listitem>
        <para>
          The <quote>loadtk</quote> command loads the initialization for
          the Tk window library. This is normally done automatically
          when the user <link linkend="attach">attaches</link> any
          display manager for MGED. If no display manager is attached,
          then the user must execute <emphasis>loadtk</emphasis> prior
          to using any Tk facilities.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; loadtk
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Initialize the Tk window library.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="lookat">
    <varlistentry>
      <term>
				lookat x y z
      </term>
      <listitem>
        <para>
          The <quote>lookat</quote> command adjusts the current view in
          MGED such that the eye is looking in the direction of the
          given coordinates, but does not move the eye point nor change
          the view_size. This is similar to just rotating the viewers
          head to look at the specified point, putting that point in the
          center of the MGED display. The
          <link linkend="center">center</link> command performs a
          similar function, but moves the eye_pt without changing the
          viewing direction.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; lookat 10 20 30
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the view to place the point (10 20 30) (model coordinates)
    in the center of the display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ls">
    <varlistentry>
      <term>
        ls [<emphasis>-A -o -a -c -r -s -p -l</emphasis>]
        [<emphasis>objects</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>ls</quote> command with no
          <emphasis>object</emphasis> argument lists the name of every
          object in the database (in alphabetical order) except for
          those marked as hidden with the
          <link linkend="center">hide</link> command. If the
          <emphasis>object</emphasis> argument is supplied, only those
          <emphasis>objects</emphasis> are listed. The
          <emphasis>object</emphasis> argument may include regular
          expressions. If the <emphasis>-A</emphasis> option is used,
          then the arguments are expected to be a list of attribute
          name/value pairs, and objects having attributes that match the
          provided list are listed. By default, an object must match all
          the specified attributes in order to be listed; however, the
          -<emphasis>o</emphasis> flag indicates that an object matching
          at least one attribute name/value pair should be listed. See
          the <link linkend="center">attr</link> command for information
          on how to set or get attributes. Regular expressions are not
          supported for attributes. The following options are also
          allowed:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        a - List all objects in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        c - List all non-hidden combinations in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        r - List all non-hidden regions in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        s - List all non-hidden primitives in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        p - List all non-hidden primitives in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        l - Use long format showing object name, object type, major
        type, minor type, and length.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    The <emphasis>ls</emphasis> command is a synonym for the
    <link linkend="t">t</link> command. Note that when any of the above
    options are used, the output is not formatted.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ls shape*
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all objects with names beginning with <quote>shape</quote>
    (output is formatted).
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ls
    -a shape*</emphasis>  – List all objects with names beginning with
    <quote>shape.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ls
    -p wheel*</emphasis>  – List all primitives with names beginning with
    <quote>wheel.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ls
    -r wheel*</emphasis>  – List all regions with names beginning with
    <quote>wheel.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ls
    -c suspension*</emphasis>  – List all combinations with names beginning with
    <quote>suspension.</quote>
  </para>
  <para>
    mged&gt; ls -A -o -r Comment {First comment} Comment {Second
    comment}
  </para>
  <para>
    – List all regions that have a <quote>Comment</quote> attribute that
    is set to either <quote>First comment</quote> or <quote>Second
    comment.</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="l_muves">
    <varlistentry>
      <term>
        l_muves MUVES_component1 MUVES_component2 …
      </term>
      <listitem>
        <para>
          The <quote>l_muves</quote> command lists the
          <emphasis>BRL-CAD</emphasis>
          <link linkend="REGION">regions</link> that are part of the
          indicated MUVES components. The internal list of MUVES
          components must have been created earlier by the
          <link linkend="read_muves">read_muves</link> command. The
          MUVES components listed on the command line must not use any
          wildcards (the expansion will result in
          <emphasis>BRL-CAD</emphasis> objects, not_muves components).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; l_muves fuel transmission
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List the <emphasis>BRL-CAD</emphasis> regions that make up the
    MUVES components named <quote>fuel</quote> and
    <quote>transmission</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="make">
    <varlistentry>
      <term>
        make -t | new_shape type
      </term>
      <listitem>
        <para>
          The <quote>make</quote> command creates a
          <emphasis>new_shape</emphasis> of the indicated type. The
          <emphasis>new_shape</emphasis> is sized according to the
          current view_size and is dependent on the
          <emphasis>type</emphasis>. The possible values for
          <emphasis>type</emphasis> are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        arb8 – <link linkend="ARB">ARB</link> (eight vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb7 – <link linkend="ARB">ARB</link> (seven vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb6 – <link linkend="ARB">ARB</link> (six vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb5 – <link linkend="ARB">ARB</link> (five vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        arb4 – <link linkend="ARB">ARB</link> (four vertices).
      </para>
    </listitem>
    <listitem>
      <para>
        bot – <link linkend="ls">BOT</link> (Bag Of Triangles).
      </para>
    </listitem>
    <listitem>
      <para>
        sph – <link linkend="ellipsoid">Ellipsoid</link> (sphere).
      </para>
    </listitem>
    <listitem>
      <para>
        ell – <link linkend="ellipsoid">Ellipsoid</link> (ellipsoid of
        revolution).
      </para>
    </listitem>
    <listitem>
      <para>
        ellg – <link linkend="ellipsoid">Ellipsoid</link> (general ellipsoid).
      </para>
    </listitem>
    <listitem>
      <para>
        tor – <link linkend="torus">Torus</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        tgc – <link linkend="TGC">Truncated General Cone</link> (most
        general TGC).
      </para>
    </listitem>
    <listitem>
      <para>
        tec – <link linkend="TGC">Truncated General Cone</link>
        (truncated elliptical cone).
      </para>
    </listitem>
    <listitem>
      <para>
        rec – <link linkend="TGC">Truncated General Cone</link> (right
        elliptical cylinder).
      </para>
    </listitem>
    <listitem>
      <para>
        trc – <link linkend="TGC">Truncated General Cone</link>
        (truncated right circular cone).
      </para>
    </listitem>
    <listitem>
      <para>
        rcc – <link linkend="TGC">Truncated General Cone</link> (right
        circular cylinder).
      </para>
    </listitem>
    <listitem>
      <para>
        half – <link linkend="half_space">Half Space</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        rpc – <link linkend="right_parabolic_cylinder">Right Parabolic Cylinder</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        rhc – <link linkend="right_hyperbolic_cylinder">Right Hyperbolic Cylinder</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        epa – <link linkend="elliptical_paraboloid">Elliptical Paraboloid</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        ehy – <link linkend="elliptical_hyperboloid">Elliptical Hyperboloid</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        eto – <link linkend="elliptical_torus">Elliptical Torus</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        part – <link linkend="particle">Particle</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        nmg – Non-Manifold Geometry (an NMG
        consisting of a single vertex is built).
      </para>
    </listitem>
    <listitem>
      <para>
        pipe – <link linkend="pipe">Pipe</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        grip – support for joints.
      </para>
    </listitem>
    <listitem>
      <para>
        extrude – experimental.
      </para>
    </listitem>
    <listitem>
      <para>
        sketch – experimental.
      </para>
    </listitem>
  </itemizedlist>
  <para>
     
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; make shapea sph
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a sphere named <emphasis>shapea.</emphasis>
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">make -t</emphasis>  – Return a list of shape types handled by
    <emphasis>make.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="mater">
    <varlistentry>
      <term>
        mater <emphasis>combination</emphasis>
        [<emphasis>shader_parameters</emphasis>[<emphasis>RGB</emphasis>
        [<emphasis>inheritance</emphasis>]]]
      </term>
      <listitem>
        <para>
          The <quote>mater</quote> command assigns
          <link linkend="SHADER">shader</link> parameters,
          <link linkend="RGB">RGB</link> color, and
          <link linkend="inheritance">inheritance</link> to an existing
          combination. The information may be included on the command
          line; otherwise the user will be prompted for it. Some
          available shaders are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        bump – bump maps.
      </para>
    </listitem>
    <listitem>
      <para>
        bwtexture – black and white texture maps.
      </para>
    </listitem>
    <listitem>
      <para>
        camo – camouflage.
      </para>
    </listitem>
    <listitem>
      <para>
        checker – checkerboard design.
      </para>
    </listitem>
    <listitem>
      <para>
        cloud – 2D Geoffrey Gardner style cloud texture map.
      </para>
    </listitem>
    <listitem>
      <para>
        envmap – environment mapping.
      </para>
    </listitem>
    <listitem>
      <para>
        fakestar – a fake star pattern.
      </para>
    </listitem>
    <listitem>
      <para>
        fbmbump – fbm noise applied to surface normal.
      </para>
    </listitem>
    <listitem>
      <para>
        fbmcolor – fbm noise applied to color.
      </para>
    </listitem>
    <listitem>
      <para>
        fire – flames simulated with turbulence noise.
      </para>
    </listitem>
    <listitem>
      <para>
        glass – Phong shader with values set to simulate glass.
      </para>
    </listitem>
    <listitem>
      <para>
        gravel – turbulence noise applied to color and surface normal.
      </para>
    </listitem>
    <listitem>
      <para>
        light – light source.
      </para>
    </listitem>
    <listitem>
      <para>
        marble – marble texture.
      </para>
    </listitem>
    <listitem>
      <para>
        mirror – Phong shader with values set to simulate mirror.
      </para>
    </listitem>
    <listitem>
      <para xml:id="plastic3">
        plastic – Phong shader with values set to simulate plastic.
      </para>
    </listitem>
    <listitem>
      <para>
        rtrans – random transparency.
      </para>
    </listitem>
    <listitem>
      <para>
        scloud – 3D cloud shader.
      </para>
    </listitem>
    <listitem>
      <para>
        spm – spherical texture maps.
      </para>
    </listitem>
    <listitem>
      <para>
        stack – allows stacking of shaders.
      </para>
    </listitem>
    <listitem>
      <para>
        stxt – shape texture mapping.
      </para>
    </listitem>
    <listitem>
      <para>
        texture – full color texture mapping.
      </para>
    </listitem>
    <listitem>
      <para>
        turbump – turbulence noise applied to surface normals.
      </para>
    </listitem>
    <listitem>
      <para>
        turcolor – turbulence noise applied to color.
      </para>
    </listitem>
    <listitem>
      <para>
        wood – wood texture.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mater region1 <quote>plastic {tr 0.5 re 0.2}</quote>
          210 100 100 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set <emphasis>region1</emphasis> to use the plastic shader with
    50% transparency, 20% reflectivity, a base color of (210 100 100),
    and inheritance set to 0.
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="matpick">
    <varlistentry>
      <term>
        matpick <emphasis>#</emphasis>|combination/member
      </term>
      <listitem>
        <para>
          The <quote>matpick</quote> command selects which matrix in the
          illuminated path should be edited. A number may be specified
          with 0 being the topmost selection. A
          <emphasis>combination/member</emphasis> may be specified to
          indicate that the matrix in <emphasis>combination</emphasis>
          that corresponds to <emphasis>member</emphasis> is to be
          edited. This command is only useful in matrix edit mode at the
          point where the user is selecting which matrix in the
          illuminated path should be edited. It is used internally by
          MGED; the user should generally use the mouse to make this
          selection.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; matpick group1/region3
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Select the matrix for <emphasis>region3</emphasis> in
    <emphasis>group1</emphasis> for editing.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="memprint">
        memprint
      </term>
      <listitem>
        <para>
          The <quote>memprint</quote> command displays memory maps for
          debugging purposes.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; memprint
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List memory maps.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="mirface">
    <varlistentry>
      <term>
        mirface <emphasis>#### x</emphasis>|<emphasis>y</emphasis>|z
      </term>
      <listitem>
        <para>
          The <quote>mirface</quote> command modifies an
          <link linkend="ARB">ARB</link> shape by mirroring the
          indicated face along the selected <emphasis>x</emphasis>,
          <emphasis>y</emphasis>, or <emphasis>z</emphasis> axis. An
          <emphasis>ARB</emphasis> shape must be selected for editing.
          Not all faces of all <emphasis>ARB</emphasis> types may be
          edited using this command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mirface 1234 x
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Modify currently edited <emphasis>ARB</emphasis> by moving the
    face opposite face 1234 such that it is the mirror image of face
    1234 across the <emphasis>yz</emphasis>plane.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="mirror">
    <varlistentry>
      <term>
        mirror <emphasis>old_object new_object
        x</emphasis>|<emphasis>y</emphasis>|z
      </term>
      <listitem>
        <para>
          The <quote>mirror</quote> command creates
          <emphasis>new_object</emphasis> by duplicating
          <emphasis>old_object</emphasis> and reflecting it along the
          indicated axis. If <emphasis>old_object</emphasis> is a
          primitive shape, then a new shape
          is created, with parameters adjusted to accomplish the
          <emphasis>mirror</emphasis> operation. If
          <emphasis>old_object</emphasis> is a combination, then
          <emphasis>new_object</emphasis> will simply be a copy of
          <emphasis>old_object</emphasis> with all of its members
          matrices set to perform the appropriate reflection.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mirror shape1 shape1_mirror x
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Make a copy of <emphasis>shape1</emphasis>, name it
    <emphasis>shape1_mirror</emphasis>, and adjust its parameters so
    that it is a mirror image of <emphasis>shape1</emphasis> across the
    <emphasis>yz</emphasis>plane.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="mrot">
        mrot x y z
      </term>
      <listitem>
        <para>
          Rotate the view using model <emphasis>x y z</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mrot 0 0 10
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the view about the model <emphasis>z</emphasis> axis by
    10˚.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="mv">
    <varlistentry>
      <term>
        mv old_name new_name
      </term>
      <listitem>
        <para>
          The <quote>mv</quote> command changes the name of
          <emphasis>old_name</emphasis> to
          <emphasis>new_name</emphasis>. Note that this does not change
          any references to <emphasis>old_name</emphasis> that may
          appear in other
          <link linkend="COMBINATION">combinations</link> in the
          database. The <link linkend="mvall">mvall</link> command will
          change an object s name everywhere.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mv shapea shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Change the name of <emphasis>shapea</emphasis> to
    <emphasis>shapeb.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="mvall">
    <varlistentry>
      <term>
        mvall old_name new_name
      </term>
      <listitem>
        <para>
          The <quote>mvall</quote> command changes the name of
          <emphasis>old_name</emphasis> to
          <emphasis>new_name</emphasis>. This will also change any
          references to <emphasis>old_name</emphasis> that may appear in
          other <link linkend="COMBINATION">combinations</link> in the
          database. The <link linkend="mv">mv</link> command will change
          an object s name without changing references to it. The
          <link linkend="prefix">prefix</link> command will also change
          the names and references of objects.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>

      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mvall shapea shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Change the name of <emphasis>shapea</emphasis> to
    <emphasis>shapeb</emphasis> everywhere it occurs in the database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="nirt">
    <varlistentry>
      <term>
        nirt [<emphasis>nirt_args</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>nirt</quote> command runs the
          <emphasis>nirt</emphasis> program that is distributed with
          <emphasis>BRL-CAD</emphasis> to intersect a single ray with
          the displayed objects. By default, <emphasis>nirt</emphasis>
          is run using the current database and the currently displayed
          objects, and it uses the current eye point as the ray start
          point and the current viewing direction as the ray direction.
          This effectively fires a ray at the center of the MGED
          display. The resulting collection of intersections between the
          ray and the objects is listed. Additional arguments may be
          supplied on the <emphasis>nirt</emphasis> command line. See
          the <emphasis>man</emphasis> page of <emphasis>nirt</emphasis>
          for more details.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; nirt
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Fire a single ray through the center of the MGED display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="nmg_collapse">
    <varlistentry>
      <term xml:id="nmg_shape">
        nmg_collapse old_nmg_shape new_nmg_shape maximum_error_dist
        [minimum_angle]
      </term>
      <listitem>
        <para>
          The <quote>nmg_collapse</quote> command simplifies an existing
          <link linkend="nmg_shape">nmg_shape</link> by a process of edge
          decimation. Each edge in the
          <emphasis>old_nmg_shape</emphasis> is considered; if it can be
          deleted without creating an error greater than the specified
          <emphasis>maximum_error_dist</emphasis>, then that edge is
          deleted. If a <emphasis>minimum_angle</emphasis> is specified
          (degrees), then the edge will not be deleted if it would
          create a triangle with an angle less than
          <emphasis>minimum_angle</emphasis>. The resulting shape is
          saved in <emphasis>new_nmg_shape</emphasis>. The
          <emphasis>old_nmg_shape</emphasis> must have been triangulated
          previous to using the <emphasis>nmg_collapse</emphasis>
          command. The resulting shape consists of all triangular faces.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; nmg_collapse nmg_old nmg_new 1.0 10.0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Decimate edges in <emphasis>nmg_old</emphasis> to produce an NMG
    with an error no greater than 1.0
    <link linkend="units">units</link>. The process will not create any
    triangles with an angle less than 10˚. The new NMG shape will be
    named <emphasis>nmg_new</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="nmg_simplify">
    <varlistentry xml:id="TGC">
      <term>
        nmg_simplify
        [<emphasis>arb</emphasis>|<emphasis>tgc</emphasis>|<emphasis>poly</emphasis>]
        new_shape nmg_shape
      </term>
      <listitem>
        <para>
          The <quote>nmg_simplify</quote> command attempts to convert an
          existing <link linkend="nmg_shape">nmg_shape</link> to a simpler
          <link linkend="primitive">primitive shape</link> type. The user
          may specify which type to attempt by including <emphasis>arb,
          tgc,</emphasis> or <emphasis>poly</emphasis> on the command
          line. If no shape type is specified, all will be attempted in
          the above order. If <emphasis>tgc</emphasis> is specified, the
          code will attempt to determine if the
          <emphasis>nmg_shape</emphasis> is an approximation of a
          <link linkend="TGC">TGC</link> shape.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; nmg_simplify poly shapea.poly shapea.nmg
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Convert the <emphasis>NMG</emphasis> shape named
    <emphasis>shapea.nmg</emphasis> to a
    <link linkend="polysolid">polysolid</link> named
    <emphasis>shapea.poly.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="oed">
    <varlistentry>
      <term>
        oed path_lhs path_rhs
      </term>
      <listitem>
        <para>
          The <quote>oed</quote> command places MGED directly into the
          matrix edit mode. The <emphasis>path_rhs</emphasis> must be a
          path to a primitive shape, and
          <emphasis>path_lhs</emphasis> must be a path to a combination
          that includes the first component of
          <emphasis>path_rhs</emphasis> as one of its members. Also,
          path_rhs/path_lhs must be a path that is currently displayed
          in mged. The edited matrix will be the matrix in the final
          component of <emphasis>path_lhs</emphasis> that corresponds to
          the first component of <emphasis>path_rhs</emphasis>. The last
          component in <emphasis>path_rhs</emphasis> is used as the
          reference shape during object editing.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; oed group1/group2 region1/shapea
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Place MGED into matrix edit mode, editing the matrix in
    <emphasis>group2</emphasis> that corresponds to
    <emphasis>region1</emphasis>, using <emphasis>shapea</emphasis> as
    the reference shape.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="opendb">
    <varlistentry>
      <term>
        opendb [<emphasis>database.g</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>opendb</quote> command closes the current database
          file and opens <emphasis>database.g</emphasis>. If
          <emphasis>database.g</emphasis> is not found, the current
          database is left open. If <emphasis>database.g</emphasis> is
          not specified on the command line, the name of the current
          database file is returned.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; opendb model.g
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Close the current database file and open
    <emphasis>model.g.</emphasis>
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">opendb</emphasis>  – Return the name of the current database file.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="orientation">
        orientation x y z w
      </term>
      <listitem>
        <para>
          The <quote>orientation</quote> command sets the view direction
          for MGED from the quaternion
          specified on the command line.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; orientation 1 0 0 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set viewing direction to bottom.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="orot">
    <varlistentry>
      <term>
        orot [<emphasis>-i</emphasis>] xdeg ydeg zdeg
      </term>
      <listitem>
        <para>
          The <quote>orot</quote> command performs a rotation of an
          object during matrix edit. The rotation is performed, in
          order: <emphasis>xdeg</emphasis> about the
          <emphasis>x</emphasis>axis, then <emphasis>ydeg</emphasis>
          about the <emphasis>y</emphasis>axis, and finally
          <emphasis>zdeg</emphasis> about the <emphasis>z</emphasis>
          axis. If the <emphasis>-i</emphasis> flag is given, then the
          angles are interpreted as increments to the last object
          rotation. The <link linkend="rotobj">rotobj</link> command is
          a synonym for <emphasis>orot</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; orot 0 0 35
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate currently edited object by 35˚ about the Z-axis from the
    original orientation.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="oscale">
    <varlistentry>
      <term>
				oscale scale_factor
      </term>
      <listitem>
        <para>
          The <quote>oscale</quote> command of matrix edit mode modifies
          the matrix to perform a uniform scale operation. A
          <emphasis>scale_factor</emphasis> of 2 doubles the size of the
          associated object, and a <emphasis>scale_factor</emphasis> of
          0.5 reduces it by half.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; oscale 3
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Increase the size of the currently edited object by a factor of 3.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="overlay">
    <varlistentry>
      <term>
        overlay <emphasis>plot_file</emphasis>
        [<emphasis>name</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>overlay</quote> command plots the specified UNIX
          <emphasis>plot_file</emphasis> in the MGED display. Phony
          object names are created for each part of the plot file that
          is in a unique color. The names are created by adding a color
          to the specified <emphasis>name</emphasis>, or to
          <quote>_PLOT_OVER</quote> if no name is provided. The color
          suffix is built by converting the
          <link linkend="RGB">RGB</link> color to a six digit hex
          number. Each color corresponds to 2 hex digits, so that white
          becomes <quote>ffffff,</quote> red becomes
          <quote>ff0000,</quote> green is <quote>00ff00,</quote> etc.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; overlay plot.upl tmp
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Plot the Unix plot file <emphasis>plot.upl</emphasis> in the MGED
    display, using <emphasis>tmp</emphasis> as the base for the phony
    object names.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="p">
    <varlistentry>
      <term>
        p <emphasis>value1</emphasis> [<emphasis>value2
        value3</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>p</quote> command provides precise control over
          primitive editing operations that would normally be done using
          the mouse or knobs. For example, a shape rotate may be
          performed by selecting <emphasis>rotate</emphasis> from the
          primitive edit menu, then providing the rotation angles with
          the <emphasis>p</emphasis> command. A command of <quote>p 0 30
          0</quote> would rotate the edited shape through 30˚ about the
          <emphasis>y</emphasis> axis. Similarly, many of the individual
          parameters of the edited shape may be set exactly using the
          <emphasis>p</emphasis> command. If the <emphasis>scale
          H</emphasis> menu item is selected while editing a
          <link linkend="TGC">TGC</link>, then the
          <emphasis>value1</emphasis> supplied with a
          <emphasis>p</emphasis> command specifies the actual length of
          the height vector for that <emphasis>TGC</emphasis>. This
          method is the recommended technique to set precise values for
          shape parameters. The
          <link linkend="translate">translate</link> and
          <link linkend="rotobj">rotobj</link> commands provide a
          similar capability for object editing.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; p 30
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the currently selected shape parameter of the currently edited
    shape to 30 <link linkend="units">units</link>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    pathlist &lt;<emphasis>combinations</emphasis>&gt;
  </para>
  <para xml:id="pathlist">
    The <quote>pathlist</quote> command lists all existing paths that
    start from the specified
    <link linkend="COMBINATION">combinations</link> and end at a
    primitive shape.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; pathlist group1 region2
  </para>
  <para>
    – List all existing paths that start from the
    <emphasis>combinations</emphasis> <emphasis>group1</emphasis> and
    <emphasis>region2</emphasis> and end at <emphasis>primitive
    shapes.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="paths">
    <varlistentry>
      <term>
        paths path_start
      </term>
      <listitem>
        <para>
          The <quote>paths</quote> command lists all existing paths that
          start from the specified <emphasis>path_start</emphasis> and
          end at a primitive shape. The
          <emphasis>path_start</emphasis> may be specified by
          <quote>/</quote> separated components, or they may be
          separated by spaces (but not both).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; paths group1 region2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all existing paths that start from
    <emphasis>group1/region2</emphasis> and end at a <emphasis>primitive
    shape.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="permute">
    <varlistentry>
      <term>
        permute tuple
      </term>
      <listitem>
        <para>
          The <quote>permute</quote> command permutes the vertex labels
          for the face of an <link linkend="ARB">ARB</link> shape that
          is currently being edited. The <emphasis>tuple</emphasis>
          indicates which face is affected and also indicates the
          desired result. The tuple is formed by concatting the list of
          vertex numbers for the face in the order desired such that the
          first vertex listed will become vertex number one (and
          therefore the default
          <link linkend="keypoint">keypoint</link>). Only a sufficient
          number of vertices to disambiguate need be included in the
          tuple. Note that this has no effect on the geometry of the
          <emphasis>ARB</emphasis>, but may affect any texture mapping
          involving this shape.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; permute 321
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rearrange the vertices of the currently edited
    <emphasis>ARB</emphasis> such that vertex #3 becomes vertex #1,
    vertex #2 remains #2, and vertex #1 becomes #3.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="pl">
    <varlistentry>
      <term>
        pl [<emphasis>-float</emphasis>] [<emphasis>-zclip</emphasis>]
        [<emphasis>-2d</emphasis>] [<emphasis>-grid</emphasis>]
        <emphasis>out_file</emphasis> | <quote>|</quote> filter
      </term>
      <listitem>
        <para>
          The <quote>pl</quote> command creates a UNIX plot of the
          current MGED display. If an <emphasis>output_file</emphasis>
          is specified, the plot is stored in that file. If a
          <emphasis>filter</emphasis> is specified, the output is sent
          to that <emphasis>filter</emphasis>. The
          <emphasis>-float</emphasis> option requests a plot file with
          real numbers rather than integers. The
          <emphasis>-zclip</emphasis> option requests that the plot be
          clipped to the viewing cube in the Z-direction. The
          <emphasis>-2d</emphasis> option requests a two-dimensional
          plot (the default is 3D). The <emphasis>-grid</emphasis>
          option is intended to include a grid in the plot, but is
          currently not implemented. This command uses the
          <emphasis>dm-plot</emphasis> display manager. The
          <link linkend="plot">plot</link> command performs the same
          function, but does not use the <emphasis>dm-plot</emphasis>
          display manager.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; pl -float | pldebug
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a UNIX plot of the current MGED display and pipe the
    results to the <emphasis>pldebug</emphasis> command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="plot">
    <varlistentry>
      <term>
        plot [<emphasis>-float</emphasis>] [<emphasis>-zclip</emphasis>]
        [<emphasis>-2d</emphasis>] [<emphasis>-grid</emphasis>]
        <emphasis>out_file</emphasis> | <quote>|</quote> filter
      </term>
      <listitem>
        <para>
          The <quote>plot</quote> command creates a UNIX plot of the
          current MGED display. If an <emphasis>output_file</emphasis>
          is specified, the plot is stored in that file. If a
          <emphasis>filter</emphasis> is specified, the output is sent
          to that <emphasis>filter</emphasis>. The
          <emphasis>-float</emphasis> option requests a plot file with
          real numbers rather than integers. The
          <emphasis>-zclip</emphasis> option requests that the plot be
          clipped to the viewing cube in the Z-direction. The
          <emphasis>-2d</emphasis> option requests a two-dimensional
          plot (the default is 3D). The <emphasis>-grid</emphasis>
          option is intended to include a grid in the plot, but is
          currently not implemented. This command does not use the
          <emphasis>dm-plot</emphasis> display manager. The
          <link linkend="pl">pl</link> command performs the same
          function, but does use the <emphasis>dm-plot</emphasis>
          display manager.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; plot -float | pldebug
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a UNIX plot of the current MGED display and pipe the
    results to the <emphasis>pldebug</emphasis> command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="polybinout">
        polybinout file
      </term>
      <listitem>
        <para>
          Store vlist polygons into polygon file (experimental).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="pov">
        pov args
      </term>
      <listitem>
        <para>
          Set the point-of-view (experimental).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="prcolor">
    <varlistentry>
      <term>
        prcolor
      </term>
      <listitem>
        <para>
          The <quote>prcolor</quote> command lists the entries in the
          <link linkend="IDENT">ident</link>-based color table. The
          ident number for a displayed
          <link linkend="REGION">region</link> is used to find the
          appropriate color from the lookup table. The
          <emphasis>low</emphasis> and <emphasis>high</emphasis> values
          are the limits of region ident numbers to have the indicated
          <emphasis>r g b</emphasis> color (0-255) applied. The color
          table entries may be modified using the
          <link linkend="color">color</link> command, and the entire
          color table may be edited using the
          <link linkend="edcolor">edcolor</link> command. If a color
          lookup table exists, its entries will override any color
          assigned using the <link linkend="mater">mater</link> command.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="prefix">
    <varlistentry>
      <term>
        prefix <emphasis>new_prefix</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>prefix</quote> command changes the name of all the
          <emphasis>objects</emphasis> listed by adding the specified
          <emphasis>new_ prefix</emphasis>. All references to the
          <emphasis>objects</emphasis> will also be changed. The
          <link linkend="mvall">mvall</link> command performs a similar
          function.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; prefix test_ group1 regiona shapeb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Change the names of objects <emphasis>group1, regiona</emphasis>,
    and <emphasis>shapeb</emphasis> to <quote>test_group1,</quote>
    <quote>test_regiona,</quote> and <quote>test_shapeb.</quote> All
    references to these objects will reflect the new names.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    prj_add [-t] [-b] [-n] shaderfile [image_file] [image_width]
    [image_height]
  </para>
  <para>
    The <quote>prj_add</quote> command appends information to the
    specified <emphasis>shaderfile</emphasis>. The information appended
    is in the form required by the <quote>projection</quote> shader
    (<emphasis>prj</emphasis>) and includes the
    <emphasis>image_file</emphasis> (typically a <quote>pix</quote>
    file), the image_width and image_height, and current view parameters
    from the MGED display. The resulting <emphasis>shaderfile</emphasis>
    may then be used as the parameter to the
    <emphasis>prj</emphasis>shader. Before executing this command, the
    region wireframe display in MGED should be aligned with the
    <emphasis>image_file</emphasis> (underlaid in MGED s framebuffer)
    and the <emphasis>image_file</emphasis> should have the same height
    and width as the mged display. The <emphasis>-t</emphasis> option
    indicates that the image should be projected through the object. The
    <emphasis>-n</emphasis> option requests that antialiasing not be
    done.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    press button_label
  </para>
  <para xml:id="press">
    The <quote>press</quote> command simulates the pressing of a button.
    All of these button actions can be run directly as a command. The
    <emphasis>button_label</emphasis> indicates which button to
    simulate. The available buttons are:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        help – Provide a list of the available
        <emphasis>button_labels.</emphasis>
      </para>
    </listitem>
    <listitem>
      <para>
        35,25 – Switch to a view from an
        <link linkend="azimuth">azimuth</link> of 35˚ and an
        <link linkend="ELEVATION">elevation</link> of 25˚.
      </para>
    </listitem>
    <listitem>
      <para>
        45,45 – Switch to a view from an
        <link linkend="azimuth">azimuth</link> of 45˚ and an
        <link linkend="ELEVATION">elevation</link> of 45˚.
      </para>
    </listitem>
    <listitem>
      <para>
        accept – Simulate the <emphasis>accept</emphasis> button
        (accepts edits and writes the edited object to the database).
      </para>
    </listitem>
    <listitem>
      <para>
        reject – Simulate the <emphasis>reject</emphasis> button
        (discards edits).
      </para>
    </listitem>
    <listitem>
      <para>
        reset – Resets view to <emphasis>top</emphasis> and resizes such
        that all displayed objects are within the view.
      </para>
    </listitem>
    <listitem>
      <para>
        save – Remember the current view aspect and size.
      </para>
    </listitem>
    <listitem>
      <para>
        restore – Restore the most recently saved view.
      </para>
    </listitem>
    <listitem>
      <para>
        adc – Toggle display of the <link linkend="adc">adc</link>.
      </para>
    </listitem>
    <listitem>
      <para>
        front – Switch to view from the front (synonym for
        <link linkend="ae">ae</link> 0 0).
      </para>
    </listitem>
    <listitem>
      <para>
        left – Switch to view from the left (synonym for
        <link linkend="ae">ae</link> 90 0).
      </para>
    </listitem>
    <listitem>
      <para>
        rear – Switch to view from the rear (synonym for
        <link linkend="ae">ae</link> 180 0).
      </para>
    </listitem>
    <listitem>
      <para>
        right – Switch to view from the right (synonym for
        <link linkend="ae">ae</link> 270 0).
      </para>
    </listitem>
    <listitem>
      <para>
        bottom – Switch to view from the bottom (synonym for
        <link linkend="ae">ae</link> -90 -90).
      </para>
    </listitem>
    <listitem>
      <para>
        top – Switch to view from the top (synonym for
        <link linkend="ae">ae</link> -90 90).
      </para>
    </listitem>
    <listitem>
      <para>
        oill – Enter object illuminate mode.
      </para>
    </listitem>
    <listitem>
      <para>
        orot – Enter object rotate mode (must already be in matrix edit
        mode).
      </para>
    </listitem>
    <listitem>
      <para>
        oscale – Enter object scale mode (must already be in matrix edit
        mode).
      </para>
    </listitem>
    <listitem>
      <para>
        oxscale – Enter object scale (x-direction only) mode (must
        already be in matrix edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        oyscale – Enter object scale (y-direction only) mode (must
        already be in matrix edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        ozscale – Enter object scale (z-direction only) mode (must
        already be in matrix edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        oxy – Enter object translate mode (must already be in matrix
        edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        ox – Enter object translate (horizontal only) mode (must already
        be in matrix edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        oy – Enter object translate (vertical only) mode (must already
        be in matrix edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        sill – Enter solid (i.e., primitive) illuminate mode.
      </para>
    </listitem>
    <listitem>
      <para>
        sedit – (deprecated) Enter primitive edit mode.
      </para>
    </listitem>
    <listitem>
      <para>
        srot – Enter solid (i.e., primitive) rotate mode (must be in
        primitive edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        sscale – Enter solid (i.e., primitive) scale mode (must be in
        primitive edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        sxy – Enter solid (i.e., primitive) translate mode (must be in
        primitive edit mode).
      </para>
    </listitem>
    <listitem>
      <para>
        zoomin – Zoom in, synonym for zoom 2.
      </para>
    </listitem>
    <listitem>
      <para>
        zoomout – Zoom out, synonym for zoom 0.5.
      </para>
    </listitem>
    <listitem>
      <para>
        rate – Toggle between rate and absolute mode for knobs and
        sliders.
      </para>
    </listitem>
    <listitem>
      <para>
        edit   (deprecated) Toggle between edit and view modes for knobs
        and sliders (useful during editing to allow the knobs and
        sliders to be used for either editing operations (in edit mode)
        or to adjust the view without affecting the edited object (in
        view mode).
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; press top
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Switch to view from the top direction.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="preview">
    <varlistentry>
      <term>
        preview [<emphasis>-v</emphasis>] [<emphasis>-d
        delay</emphasis>] [<emphasis>-D start_frame_number</emphasis>]
        [<emphasis>-K end_frame_number</emphasis>] rt_script_file
      </term>
      <listitem>
        <para>
          The <quote>preview</quote> command allows the user to
          <emphasis>preview</emphasis> animation scripts in MGED. The
          <emphasis>-d</emphasis> option provides a delay in seconds to
          be applied between each frame (the default is no delay). The
          <emphasis>-D</emphasis> option allows the user to specify a
          starting frame number, and the <emphasis>-K</emphasis> option
          allows the specification of an ending frame number. The
          <emphasis>-v</emphasis> flag indicates that the objects
          displayed in the MGED graphics window should be displayed in
          <quote>evaluated</quote> mode, as would be the result of the
          <link linkend="ev">ev</link> command. Note that this may
          significantly slow the <emphasis>preview</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; preview -D 101 -K 237 script.rt
        </para>
        <para>
          – <emphasis>Preview</emphasis> the animation script stored in
          the file named <emphasis>script.rt</emphasis> from frame
          number 101 through frame number 237.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
	prj_add <emphasis>shaderfile</emphasis>
        [<emphasis>image_file</emphasis>]
        [<emphasis>image_width</emphasis>]
        [<emphasis>image_height</emphasis>]
      </term>
      <listitem>
        <para xml:id="prj_add">
          The <quote>prj_add</quote> command appends information to the
          specified <emphasis>shaderfile</emphasis>. The information
          appended is in the form required by the
          <quote>projection</quote> shader (<emphasis>prj</emphasis>)
          and includes the <emphasis>image_file</emphasis> (typically a
          <quote>pix</quote> file), the <emphasis>image_width</emphasis>
          and <emphasis>image_height</emphasis>, and current view
          parameters from the MGED display. The resulting
          <emphasis>shaderfile</emphasis> may then be used as the
          parameter to the <emphasis>prj</emphasis> shader. Before
          executing this command, the region wireframe display in MGED
          should be aligned with the <emphasis>image_file</emphasis>
          (underlaid in MGED s framebuffer), and the
          <emphasis>image_file</emphasis> should have the same height
          and width as the MGED display.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="ps">
    <varlistentry>
      <term>
        ps [<emphasis>-f font</emphasis>] [<emphasis>-t
        title</emphasis>] [<emphasis>-c creator</emphasis>]
        [<emphasis>-s size_in_inches</emphasis>] [<emphasis>-l
        line_width</emphasis>] output_file
      </term>
      <listitem>
        <para>
          The <quote>ps</quote> command temporarily attaches the
          <emphasis>Postscript</emphasis> display manager and outputs
          the current MGED display to the specified
          <emphasis>output_file</emphasis> in
          <emphasis>PostScript</emphasis> format. The
          <emphasis>-f</emphasis> option allows the
          <emphasis>font</emphasis> to be user-specified. The
          <emphasis>-t</emphasis> option allows the user to provide a
          title (the default is <quote>No Title</quote>). The
          <emphasis>-c</emphasis> option allows the user to specify the
          creator of the file (the default is <quote>LIBDM
          dm-ps</quote>). The <emphasis> s</emphasis> specifies the size
          of the drawing in inches. The <emphasis> l</emphasis>
          specifies the width of the lines drawn.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ps -t <quote>Test Title</quote> test.ps
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Place a <emphasis>PostScript</emphasis> version of the current
    MGED display in a file named <emphasis>test.ps</emphasis> and give
    it the title <quote>Test Title.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">ps
    -l 10 -t <quote>Test Fat Lines</quote> fat_lines.ps</emphasis>  – This time use fat lines.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="pull">
    <varlistentry>
      <term>
        pull &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>pull</quote> command pulls the effects of all
          transformation matrices that appear in any
          primitive shapes or
          <link linkend="COMBINATION">combinations</link> in the trees
          up to the specified <emphasis>objects</emphasis> heading the
          tree. This will restore the original the parameters of the
          <emphasis>primitive shapes</emphasis> if any of the
          transformation matrices are not identity matrices. All the
          transformation matrices visited up the tree will be set to the
          current transformation matrix. This command will fail, and no
          changes will be made, if the head is referenced by a
          <emphasis>primitive shape</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; pull group1 regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Pull the effects of any transformation matrices from the
    <emphasis>primitive shapes.</emphasis> in the trees up to the heads
    indicated by <emphasis>group1</emphasis> and
    <emphasis>regiona</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        push &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="push">
          The <quote>push</quote> command forces the effects of all
          transformation matrices that appear in any
          <link linkend="COMBINATION">combinations</link> in the trees
          from the specified <emphasis>objects</emphasis> down to the
          primitive shapes. This will
          change the parameters of the <emphasis>primitive
          shapes</emphasis> if any of the transformation matrices are
          not identity matrices. All the transformation matrices visited
          will be set to identity matrices. This command will fail, and
          no changes will be made, if any <emphasis>primitive
          shape</emphasis> referenced by the list of
          <emphasis>objects</emphasis> is positioned differently in two
          or more <emphasis>combinations</emphasis>. The
          <link linkend="xpush">xpush</link> command will perform a
          similar function, even if some shapes are multiply referenced.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; push group1 regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para xml:id="trees">
    – Push the effects of any transformation matrices in the trees
    headed by <emphasis>group1</emphasis> and
    <emphasis>regiona</emphasis> down to the <emphasis>primitive
    shapes.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="putmat">
    <varlistentry>
      <term>
        putmat <emphasis>comb_name/member_name</emphasis>
        {<emphasis>I</emphasis> | <emphasis>m0 m1 m2 m3 …
        m16</emphasis>}
      </term>
      <listitem>
        <para>
          The <quote>putmat</quote> command replaces the existing
          transformation matrix in the combination specified that
          corresponds to the <link linkend="member">member</link>
          specified. The transformation matrix may be specified with an
          <quote>I</quote> to indicate the identity matrix, or it may be
          specified as 16 elements listed row-by-row. The
          <link linkend="copymat">copymat</link> command allows the user
          to copy an existing transformation matrix.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; putmat group1/regiona I
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the transformation matrix for <emphasis>regiona</emphasis> in
    <emphasis>group1</emphasis> to the identity matrix.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        q
      </term>
      <listitem>
        <para>
          The <quote>q</quote> command ends the MGED process. Note that
          there is no write database command in MGED. All changes are
          made to the database as the user performs them. Therefore, a
          <emphasis>q</emphasis> command will not restore the database
          to its pre-edited state. This is a synonym for the
          <link linkend="quit">quit</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; q
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Quit the current MGED session.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="qorot">
    <varlistentry>
      <term>
        qorot x y z dx dy dz angle
      </term>
      <listitem>
        <para>
          The <quote>qorot</quote> command rotates an object through the
          specified <emphasis>angle</emphasis> (in degrees). This
          command requires that MGED already be in <emphasis>matrix
          edit</emphasis> mode. The edited object is rotated about the
          axis defined by the start point (<emphasis>x y z</emphasis>)
          and the direction vector (<emphasis>dx dy dz</emphasis>).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; qorot 1 2 3 0 0 1 25
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the currently edited object through 25 degrees about the
    axis through the point (1, 2, 3) and in the Z-direction.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="qray">
    <varlistentry>
      <term>
        qray [<emphasis>subcommand</emphasis>]
      </term>
      <listitem>
        <para>
          Get/set <emphasis>query_ray</emphasis> characteristics.
          Without a subcommand, the usage message is printed.
          The<emphasis>qray</emphasis> command accepts the following
          subcommands:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        vars
      </term>
      <listitem>
        <para>
          Print a list of all query_ray variables.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="basename">
      <term>
        basename [<emphasis>str</emphasis>]
      </term>
      <listitem>
        <para>
          If <emphasis>str</emphasis> is specified, then set basename to
          <emphasis>str</emphasis>. Otherwise, return the basename. Note
          that the basename is the name used to create the fake shape
          names corresponding to the query_ray. There will be one fake
          shape for every color used along the ray.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry >
      <term>
        effects [<emphasis>t|g|b</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the type of <emphasis>effects</emphasis> that will
          occur when firing a query_ray. The effects of firing a ray can
          be either <emphasis>t</emphasis> for textual output,
          <emphasis>g</emphasis> for graphical output or
          <emphasis>b</emphasis> for both textual and graphical.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        echo [<emphasis>0|1</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the value of <emphasis>echo</emphasis>. If set to
          1, the actual nirt command used will be echoed to the screen.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        oddcolor [<emphasis>r g b</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the color of odd partitions.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        evencolor [<emphasis>r g b</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the color of even partitions.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        voidcolor [<emphasis>r g b</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the color of areas where the ray passes through
          nothing.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        overlapcolor [<emphasis>r g b</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the color of areas that overlap.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        fmt [<emphasis>r|h|p|f|m|o</emphasis>
        [<emphasis>str</emphasis>]]
      </term>
      <listitem>
        <para>
          Set or get the format string(s). See the
          <emphasis>man</emphasis> page of <emphasis>nirt</emphasis> for
          more details.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        script [<emphasis>str</emphasis>]
      </term>
      <listitem>
        <para>
          Set or get the nirt script string.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        help
      </term>
      <listitem>
        <para>
          Print the usage message.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; qray
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Print usage message.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">qray fmt o</emphasis>  – Returns the overlap format string.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">qray oddcolor</emphasis>  – Returns the rgb color used to color odd partitions.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">qray oddcolor 255 0 0</emphasis>  – Sets the odd partition color to red.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="query_ray">
    <varlistentry>
      <term>
        query_ray [<emphasis>nirt_args</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>query_ray</quote> command runs the
          <emphasis>nirt</emphasis> program that is distributed with
          <emphasis>BRL-CAD</emphasis> to intersect a single ray with
          the displayed objects. By default, <emphasis>nirt</emphasis>
          is run using the current database and the currently displayed
          objects and uses the current eye point as the ray start point
          and the current viewing direction as the ray direction. This
          effectively fires a ray at the center of the MGED display. The
          resulting list of intersections between the ray and the
          objects is given. Additional arguments may be supplied on the
          <emphasis>nirt</emphasis> command line. See the
          <emphasis>man</emphasis> page of <emphasis>nirt</emphasis> for
          more details.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; query_ray
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Fire a single ray through the center of the MGED display.
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="quit">
    <varlistentry>
      <term>
        quit
      </term>
      <listitem>
        <para>
          The <quote>quit</quote> command ends the MGED process. Note
          that there is no write database command in MGED. All changes
          are made to the database as the user performs them. Therefore,
          a <emphasis>quit</emphasis> command will not restore the
          database to its pre-edited state. This is a synonym for the
          q command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; quit
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Quit the current MGED session.
  </para>
  <para>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="qvrot">
    <varlistentry>
      <term>
        qvrot dx dy dz angle
      </term>
      <listitem>
        <para>
          The <quote>qvrot</quote> command adjusts the current MGED
          viewing direction such that the eye is positioned along the
          direction vector (<emphasis>dx dy dz</emphasis>) from the view
          center and is looking towards the view center. The
          <emphasis>angle</emphasis> (in degrees) allows for a twist
          about the viewing direction. The <link linkend="ae">ae</link>
          command provides a similar capability.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; qvrot 0 0 1 90
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the current view to the same as achieved by the
    <link linkend="press">press top</link> command.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="r">
    <varlistentry>
      <term>
        r <emphasis>region_name</emphasis> &lt;<emphasis>operation
        object</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>r</quote> command creates a
          <link linkend="REGION">region</link> with the specified
          <emphasis>region_name</emphasis>. The
          <emphasis>region</emphasis> is constructed using the list of
          <link linkend="BOOLEAN">Boolean operations</link> and
          <emphasis>object</emphasis> pairs. The operators are
          represented by the single characters <quote>+,</quote>
          <quote>-,</quote> and <quote>u</quote> for intersection,
          subtraction, and union, respectively. The
          <emphasis>object</emphasis> associated with each operator may
          be a combination or a primitive
          shape. No parentheses or any grouping indication is
          allowed in the <emphasis>r</emphasis> command. The operator
          hierarchy for the <emphasis>r</emphasis> command has been
          established through the ancestry of
          <emphasis>BRL-CAD</emphasis> and does not conform to accepted
          standards (see the <link linkend="c">c</link> command for a
          more standard implementation). Intersection and subtraction
          operations are performed first, proceeding left to right; then
          union operations are performed. <emphasis>BRL-CAD</emphasis>
          regions are special cases of <emphasis>BRL-CAD</emphasis>
          <emphasis>combinations</emphasis> and include special
          attributes. Default values for these attributes may be set
          using the <link linkend="regdef">regdef</link> command. As new
          <emphasis>regions</emphasis> are built, the default
          <link linkend="IDENT">ident</link> number gets incremented. If
          <emphasis>region_name</emphasis> already exists, then the
          <emphasis>operation</emphasis>/<emphasis>object</emphasis>
          pairs get appended to its end.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; r new_region u shape1 - shape2 u shape3 + group4
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a region named <emphasis>new_region</emphasis> that
    consists of two parts unioned together. The first part is
    <emphasis>shape1</emphasis> with <emphasis>shape2</emphasis>
    subtracted. The second part is the intersection of
    <emphasis>shape3</emphasis> and the combination
    <emphasis>group4.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rcodes">
    rcc-blend rccname newname thickness [b|t]
  </para>
  <para xml:id="rccblend">
    The <quote>rcc-blend</quote> command generates a blend at an end
    (base [<emphasis>b</emphasis>] or top [<emphasis>t</emphasis>]) of
    the specified <link linkend="IDENT">RCC</link> shape. The thickness
    is the radius of the <link linkend="IDENT">TOR</link> curvature. The
    blend is saved as a region made up of an RCC and a TOR. The default
    end is the base.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-blend rcc.s blend.s 10
  </para>
  <para>
    – Create a region named <emphasis>blend.s</emphasis> that extends 10
    units from the base of <emphasis>rcc.s</emphasis>.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-blend rcc.s blend.s 10 t
  </para>
  <para>
    – Create a region named <emphasis>blend.s</emphasis> that extends 10
    units from the top of <emphasis>rcc.s</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rcccap">
    rcc-<emphasis role="strong">cap</emphasis>rccname newname [height]
    [b|t]
  </para>
  <para>
    The <quote>rcc-cap</quote> command is used to round the end of a
    cylinder with an ellipsoid. It creates an
    <link linkend="IDENT">ELL</link> shape with the given height at one
    end (base [<emphasis>b</emphasis>] or top [<emphasis>t</emphasis>])
    of the specified <link linkend="IDENT">RCC</link>. If the height
    option is not specified, a spherical cap will be generated. The
    default end is the base.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-cap rcc.s cap.s 20
  </para>
  <para>
    – Create an ELL shape named <emphasis>cap.s</emphasis> with a radius
    of 20 units at the base of rcc.s.
  </para>
  <para>
     
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-cap rcc.s cap.s 20 t
  </para>
  <para>
    – Create an ELL shape named <emphasis>cap.s</emphasis> with a radius
    of 20 units at the top of rcc.s.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rcctgc">
    rcc-tgc rccname newname x y z [b|t]
  </para>
  <para>
    The <quote>rcc-tgc</quote> command creates a
    <link linkend="IDENT">TGC</link> shape with the specified apex (x y
    z) at one end (base [<emphasis>b</emphasis>] or top
    [<emphasis>t</emphasis>]) of the specified
    <link linkend="IDENT">RCC</link>. The default end is the base.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-tgc rcc.s tgc.s 0 2 4
  </para>
  <para>
    – Create a TGC shape named <emphasis>tgc.s</emphasis> with an apex
    at (0 2 4) from the base of <emphasis>rcc.s</emphasis>.
  </para>
  <para>
     
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rcctor">
    rcc-tor_rccname newname
  </para>
  <para>
    The <quote>rcc-tor</quote> command is used to round the edges of the
    specified <link linkend="IDENT">RCC</link> by creating a torus based
    on the parameters of that <link linkend="IDENT">RCC</link>. The
    radius values of the <link linkend="IDENT">RCC</link> must be
    greater than half its height.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
     
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-tor_rcc.s tor.s
  </para>
  <para>
    – Create a TOR shape named <emphasis>tor.s</emphasis> using the
    parameters of <emphasis>rcc.s</emphasis>.
  </para>
  <para>
     
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    rcodes file_name
  </para>
  <para>
    The <quote>rcodes</quote> command reads the specified file and
    assigns the region attributes to the
    <link linkend="REGION">regions</link> listed. The file is expected
    to be in the format produced by the
    <link linkend="wcodes">wcodes</link> command.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcodes region_codes
  </para>
  <para>
    – Read the file named <emphasis>region_codes</emphasis> and set the
    region specific attributes according to the values found in the
    file.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="rea_muves">
    <varlistentry>
      <term xml:id="read_muves">
        read_muves MUVES_regionmap_file
      </term>
      <listitem>
        <para>
          The <quote>read_muves</quote> command reads the indicated
          <quote>MUVES_regionmap_file</quote> and creates an internal
          list of all the_muves components defined in the file along
          with the corresponding <emphasis>BRL-CAD</emphasis>
          <link linkend="REGION">regions</link>. This list can then be
          used to display the <emphasis>regions</emphasis> in terms of
          the_muves component names. See the
          <link linkend="e_muves">e_muves</link>,
          <link linkend="t_muves">t_muves</link>, and
          <link linkend="l_muves">l_muves</link> commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; read_muves region_map
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Read the_muves file named <emphasis>region_map</emphasis>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="red">
    <varlistentry>
      <term>
        red combination
      </term>
      <listitem>
        <para>
          The <quote>red</quote> command creates a file describing the
          specified combination and starts an editor for the user to
          modify the combination. The environment
          <emphasis>EDITOR</emphasis> variable will be used to select
          the editor. If <emphasis>EDITOR</emphasis> is not set, then
          <emphasis>/bin/ed</emphasis> will be used. All the attributes
          of
          <emphasis>BRL-CAD</emphasis><link linkend="REGION">regions</link>
          and <emphasis>combinations</emphasis> may be edited in this
          way. The <emphasis>region</emphasis> specific attributes will
          be ignored if the <emphasis>combination</emphasis> is not a
          <emphasis>region</emphasis> and is not set to be a
          <emphasis>region</emphasis> during editing. It is not
          necessary to be in an editing mode to run this command. The
          <link linkend="rm">rm</link>, <link linkend="r">r</link>,
          <link linkend="comb">comb</link>, <link linkend="c">c</link>,
          and <link linkend="g">g</link> commands provide some basic
          <emphasis>combination</emphasis> editing capabilities.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; red group2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Edit the combination <emphasis>group2</emphasis> with the user s
    editor of choice.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="refresh">
        refresh
      </term>
      <listitem>
        <para>
          The <quote>refresh</quote> command updates the MGED display.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; refresh
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Update the MGED display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="regdebug">
        regdebug [<emphasis>debug_level</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>regdebug</quote> command with no options toggles
          the display manager debug flag. If a
          <emphasis>debug_level</emphasis> is supplied, then the display
          manager debug flag is set to that value.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; regdebug
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Toggle the display manager debug flag.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="regdef">
        regdef <emphasis>item</emphasis> [<emphasis>air</emphasis>
        [<emphasis>los</emphasis> [<emphasis>material_code</emphasis>]]]
      </term>
      <listitem xml:id="IDENT">
        <para>
          The <quote>regdef</quote> command sets the default
          <link linkend="REGION">region</link> attributes used by the
          <link linkend="r">r</link> and <link linkend="c">c</link>
          commands when building a <emphasis>BRL-CAD</emphasis>
          <emphasis>region</emphasis>. The default
          <emphasis>ident</emphasis> number is incremented each time a
          new <emphasis>region</emphasis> is created with the
          <emphasis>r</emphasis> or <emphasis>c</emphasis> commands.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; regdef 1003 0 100 8
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the <emphasis>region</emphasis> default attributes to an
    <link linkend="IDENT">ident</link> of 1003, an
    <link linkend="air_code">air code</link> of 0, an
    <link linkend="LOS">los</link> of 100%, and a
    <link linkend="material_code">material code</link> of 8.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
				regions <emphasis>output_file</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="regions">
          The <quote>regions</quote> command creates a summary of all
          the <link linkend="REGION">regions</link> in the specified
          list of <emphasis>objects</emphasis>. The summary is written
          in the specified <emphasis>output_file</emphasis>. The summary
          includes, for each <emphasis>region</emphasis>, a sequential
          region number, its <link linkend="IDENT">ident</link>,
          <link linkend="air_code">air code</link>,
          <link linkend="material_code">material code</link>,
          <link linkend="LOS">los</link>, the path from one of the
          <emphasis>objects</emphasis> to the
          <emphasis>region</emphasis>, and the
          <link linkend="BOOLEAN">Boolean</link> formula for the
          <emphasis>region</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; regions regions_file group1 group2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Place a summary of all the <emphasis>regions</emphasis> from
    <emphasis>group1</emphasis> and <emphasis>group2</emphasis> in the
    file named <emphasis>regions_file.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="release">
        release [<emphasis>name</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>release</quote> command is used to close a display
          manager. If invoked with no arguments, the current display
          manager is closed. Otherwise, <emphasis>name</emphasis> (i.e.,
          the Tcl/Tk path name of the display manager window) is closed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          managerged&gt; release
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Close the current display manager.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">release .dm_X0</emphasis>  – Close <emphasis>.dm_X0.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="rfarb">
    <varlistentry>
      <term>
        rfarb
      </term>
      <listitem>
        <para>
          The <quote>rfarb</quote> command creates a new
          <link linkend="ARB">ARB8</link> shape based on rotation and
          fallback angles. The command prompts the user for all the
          required information. In addition to the name for the new
          shape and the rotation and fallback angles, the user is
          prompted for the coordinates of one corner of the
          <emphasis>ARB8</emphasis> and for two of the three coordinates
          of the other three vertices of one face of the
          <emphasis>ARB8</emphasis>. The other coordinate of each of
          these vertices is calculated in order to ensure that the face
          is planar. The user is then prompted for a thickness, and the
          first face is extruded normally by the specified thickness to
          complete the <emphasis>ARB8</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rfarb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a new <emphasis>ARB8</emphasis> shape according to
    arguments supplied in answer to prompts.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
				rm <emphasis>combination</emphasis>
        &lt;<emphasis>members</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="rm">
          The <quote>rm</quote> command deletes all occurrences of the
          listed <link linkend="members">members</link> from the
          specified combination. The <link linkend="red">red</link>,
          <link linkend="r">r</link>, <link linkend="comb">comb</link>,
          <link linkend="c">c</link>, and <link linkend="g">g</link>
          commands provide other <emphasis>combination</emphasis>
          editing capabilities.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rm group1 regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Delete <emphasis>regiona</emphasis> from
    <emphasis>group1.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="rmater">
    <varlistentry>
      <term>
        rmater file
      </term>
      <listitem>
        <para>
          The <quote>rmater</quote> command reads the specified
          <emphasis>file</emphasis> and sets the
          combination<link linkend="SHADER">shader</link>,
          <link linkend="RGB">color</link>, and
          <link linkend="inheritance">inheritance</link> values
          according to those listed in the <emphasis>file</emphasis>.
          The format of the <emphasis>file</emphasis> is expected to be
          as produced by the <link linkend="wmater">wmater</link>
          command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rmater mater_file
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Read the file named <emphasis>mater_file</emphasis> and set the
    <emphasis>combination</emphasis> attributes according to those
    listed in the file.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="rmats">
    <varlistentry>
      <term>
        rmats file
      </term>
      <listitem>
        <para>
          The <quote>rmats</quote> command reads the specified
          <emphasis>file</emphasis> and sets the current MGED view to
          agree with the parameters in the <emphasis>file</emphasis>.
          The format of the file is expected to be as produced by the
          <link linkend="savekey">savekey</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rmats key_file
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Read the file named <emphasis>key_file</emphasis> and set the
    current MGED viewing direction according to the parameters found
    there.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        rot x y z
      </term>
      <listitem>
        <para xml:id="rot">
          The <quote>rot</quote> command rotates the view or an object
          by <emphasis>xyz</emphasis> degrees. Exactly what is rotated
          and how it is rotated are dependent on MGED s state as well as
          the state of the display manager. See
          <link linkend="arot">arot</link> for a similar capability.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rot 0 0 45
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate 45 degrees about the Z axis.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">rot
    45 45 0</emphasis>  – Rotate 45˚ about the <emphasis>y</emphasis> axis,
    then rotate 45 degrees about the <emphasis>x</emphasis> axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        rotobj [<emphasis>-i</emphasis>] x-angle y-angle z-angle
      </term>
      <listitem xml:id="rotobj">
        <para>
          The <quote>rotobj</quote> command rotates the currently edited
          object by <emphasis>z</emphasis>angle degrees about the
          <emphasis>z</emphasis>direction, <emphasis>y</emphasis>angle
          about the <emphasis>y</emphasis>direction, and
          <emphasis>x</emphasis>angle degrees about the
          <emphasis>x</emphasis>direction in that order. If an
          <emphasis>-i</emphasis> option is included, then the rotations
          are treated as increments to the previous rotations. MGED must
          be in the matrix edit mode for this command to be useful. The
          <link linkend="p">p</link> command provides a similar
          capability for primitive editing.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rotobj 0 0 25
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate the currently edited object by 25 degrees about the
    <emphasis>z</emphasis>direction from the original orientation.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    rpp-<emphasis role="strong">arch</emphasis>rppname newname face
  </para>
  <para xml:id="rpparch">
    The <quote>rpp-arch</quote> command is used to round a specified
    face of an <link linkend="IDENT">RPP</link> by creating an
    <link linkend="IDENT">RCC</link> based on the parameters of the RPP.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rpp-arch rpp.s arch.s 1234
  </para>
  <para>
    – Create an RCC shape named <emphasis>arch.s</emphasis> at the 1234
    face of the RPP.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rppcap">
    rpp-<emphasis role="strong">cap</emphasis>rppname newname face
    height [0|1]
  </para>
  <para xml:id="rpp_cap">
    The <quote>rpp-cap</quote> command creates an
    <link linkend="IDENT">ARB6</link> with the specified height at a
    particular face of the given <link linkend="IDENT">RPP</link>. The
    optional <quote>0</quote> and <quote>1</quote> refer to the
    orientation of the ARB6. If <quote>0</quote> is chosen, the peaks of
    the ARB6 are positioned at the midpoint between the first and second
    points and at the midpoint between the third and fourth points of
    the specified face. If <quote>1</quote> is chosen, the peaks of the
    ARB6 are positioned at the midpoint between the first and fourth
    points and at the midpoint between the second and third points of
    the specified face. The default is 0.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rpp-cap rpp.s cap.s 1234 20
  </para>
  <para>
    – Create an ARB6 shape named <emphasis>cap.s</emphasis> that extends
    20 units from the 1234 face of the RPP<emphasis>.</emphasis>The
    peaks of the ARB6 will be at the midpoint between point 1 and 2 and
    at the midpoint between 3 and 4.
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; rcc-cap rcc.s cap.s 1234 20 1
  </para>
  <para>
    – Create an ARB6 shape named <emphasis>cap.s</emphasis> that extends
    20 units from the 1234 face of the RPP. The peaks of the ARB6 will
    be at the midpoint between point 1 and 4 and at the midpoint between
    2 and 3.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    rrt <emphasis>program</emphasis> [<emphasis>options</emphasis>]
  </para>
  <para xml:id="rrt">
    The <quote>rrt</quote> command executes the specified
    <emphasis>program</emphasis> with the provided
    <emphasis>options</emphasis> and includes the current database name
    and the list of currently displayed objects on the command line.
    This command effectively executes:
  </para>
  <programlisting>
        program options database_name objects.
</programlisting>
  <para>
    The<emphasis>rrt</emphasis> command also provides the current MGED
    viewing parameters to the <emphasis>program</emphasis> on standard
    input. Many <emphasis>BRL-CAD</emphasis> programs use the
    <emphasis>-M</emphasis> option to indicate that viewing parameters
    will be provided on standard input. The <link linkend="rt">rt</link>
    command can be simulated with <emphasis>rrt</emphasis> as:
  </para>
  <programlisting>
        rrt /usr/brlcad/bin/rt -M -s50
</programlisting>
  <para>
    provided that perspective is not currently being used. Any
    executable routine may be run using <emphasis>rrt</emphasis>;
    however, it will always be run with the provided
    <emphasis>options</emphasis> followed by the current database name
    and the list of currently displayed objects.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rrt echo
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Will list the current database name and the list of currently
    displayed objects.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        rt [<emphasis>options</emphasis>] [–
        <emphasis>objects</emphasis>]
      </term>
      <listitem>
        <para xml:id="rt">
          The <quote>rt</quote> command executes the
          <emphasis>BRL-CAD</emphasis> <emphasis>rt</emphasis> program
          with the default options of  <quote>-s50  M.</quote> If perspective is turned on,
          then the <emphasis>-p</emphasis> option will be included with
          the value of the perspective angle. The current database name
          is added to the end of the <emphasis>rt</emphasis> command
          line along with either the specified
          <emphasis>objects</emphasis> or, if none is specified, the
          list of currently displayed objects. The
          <emphasis>rt</emphasis> program is written such that options
          may be repeated, and the last occurrence of an option will
          override any earlier occurrences. This allows the user to
          specify other <emphasis>size</emphasis>
          (<emphasis>-s</emphasis>) options. The
          <link linkend="rrt">rrt</link> command performs a similar
          function, but may be used to execute other programs as well.
          The <emphasis>-M</emphasis> option tells
          <emphasis>rt</emphasis> to read the viewing parameters from
          standard input. See the <emphasis>man</emphasis> page on
          <emphasis>rt</emphasis> for details. A related command is
          <link linkend="saveview">saveview</link>, which can be used to
          create a shell script (batch job) to raytrace this view in the
          background.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rt -s1024 -F/dev/Xl
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Run the <emphasis>rt</emphasis> program to produce a color-shaded
    image of the current view in the MGED display. The image will be
    1024 pixels square and will be displayed on a lingering
    <emphasis>X</emphasis> framebuffer.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">rt
    -C 200/200/255 – roof</emphasis>  – Run the <emphasis>rt</emphasis> program to produce a
    color-shaded image of the object <emphasis>roof</emphasis> using
    MGED s current viewing parameters. The image will have a sky-blue
    background and will be displayed on the framebuffer specified by the
    FB_FILE shell variable.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        rtcheck [<emphasis>options</emphasis>]
      </term>
      <listitem>
        <para xml:id="rtcheck">
          The <quote>rtcheck</quote> command executes the
          <emphasis>BRL-CAD</emphasis> <emphasis>rtcheck</emphasis>
          program with the default options of <quote>-s50  M.</quote>
          The <emphasis>-M</emphasis> option tells
          <emphasis>rtcheck</emphasis> to read the viewing parameters
          from standard input so that rays are only fired from the
          current view. The current database name and the list of
          currently displayed objects are added to the end of the
          <emphasis>rtcheck</emphasis> command line. The
          <emphasis>rtcheck</emphasis> program is written such that
          options may be repeated, and the last occurrence of an option
          will override any earlier occurrences. This allows the user to
          specify other <emphasis>size</emphasis>
          (<emphasis>-s</emphasis>) options. The
          <link linkend="rrt">rrt</link> command performs a similar
          function, but may be used to execute other programs as well.
          The <emphasis>rtcheck</emphasis> program uses raytracing to
          check for overlapping regions in the list of objects passed on
          the command line. When invoked from within MGED, any
          discovered overlaps along a ray are represented as yellow
          lines that extend only in the areas of overlap. Details and a
          count of overlaps are also reported. Note that overlaps of
          less than 0.1 mm are currently ignored by
          <emphasis>rtcheck</emphasis>. The default option of
          <emphasis>-s50</emphasis> indicates that the checking rays
          should be fired from a uniform square grid with 50 rays on a
          side. This is very coarse and may miss significant overlaps.
          It is recommended that the user select appropriate options for
          the <emphasis>rtcheck</emphasis> program and execute it for a
          variety viewing aspects to perform a thorough check. The
          granularity of the grid may be controlled with the
          <emphasis>-s</emphasis>, <emphasis>-w</emphasis>,
          <emphasis>-n</emphasis>, <emphasis>-g</emphasis>, and
          <emphasis>-G</emphasis> options. See the
          <emphasis>man</emphasis> page on <emphasis>rtcheck</emphasis>
          for details.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; rtcheck -g10 -G10
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Run the <emphasis>rtcheck</emphasis> program with rays fired from
    a uniform grid with the rays spaced every 10 mm.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
				savekey <emphasis>file</emphasis>
        [<emphasis>time</emphasis>]
      </term>
      <listitem>
        <para xml:id="savekey">
          The <quote>savekey</quote> command saves the current viewing
          parameters in the specified <emphasis>file</emphasis> in the
          format expected by the <link linkend="rmats">rmats</link>
          command. If a <emphasis>time</emphasis> is included, it will
          also be written to the specified <emphasis>file</emphasis>. If
          the <emphasis>file</emphasis> already exists, the information
          will be appended to its end. The parameters saved this way are
          useful as keypoints in constructing an animation. The
          <emphasis>BRL-CAD</emphasis> <emphasis>anim_keyread</emphasis>
          program will read a <emphasis>file</emphasis> constructed by
          using the <emphasis>savekey</emphasis> command with some
          number of different views in MGED with sequential times
          specified. The <emphasis>anim_keyread</emphasis> program will
          produce a table of keyframes suitable for use with other
          <emphasis>BRL-CAD</emphasis> animation tools.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; savekey key_file 5
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Append the current viewing parameters to
    <emphasis>key_file</emphasis> and tag this as the key frame at 5
    seconds.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        saveview <emphasis>file</emphasis> [<emphasis>args</emphasis>]
      </term>
      <listitem>
        <para xml:id="saveview">
          The <quote>saveview</quote> command saves the current viewing
          parameters in the specified <emphasis>file</emphasis> in the
          form of a shell script that will run the <emphasis>BRL-CAD
          rt</emphasis> program as if it had been executed from within
          MGED using the <link linkend="rt">rt -s512</link> command. Any
          <emphasis>args</emphasis> included on the
          <emphasis>saveview</emphasis> command line will be copied to
          the <emphasis>file</emphasis> as options to the
          <emphasis>rt</emphasis> program. If the
          <emphasis>file</emphasis> already exists, the script will be
          appended to it. This is useful in setting up images to be
          raytraced later. The default script produced by
          <quote>saveview test.rt</quote> looks like:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <programlisting>
#!/bin/sh
rt -M \
 -o test.rt.pix\
 $*\
 model.g\
 'object1' 'object2' \
 2&gt;&gt; test.rt.log\
 &lt;&lt;EOF
viewsize 2.780320739746094e+02;
orientation 2.480973490458727e-01 4.765905732660483e-01 7.480973490458729e-01 3.894348305183902e-01;
eye_pt 1.234152656421214e+02 7.220202900588745e+01 3.845765464924686e+01;
start 0; clean;
end;
EOF
</programlisting>
  <para>
    When this script is executed, the image will be stored in
    <emphasis>test.rt.pix</emphasis>, and all messages and errors
    generated by the <emphasis>rt</emphasis> program will be stored in
    <emphasis>test.rt.log</emphasis>. The above script will produce an
    image of <emphasis>object1</emphasis> and
    <emphasis>object2</emphasis> from the <emphasis>BRL-CAD</emphasis>
    database named <emphasis>model.g</emphasis>. The <emphasis>viewsize,
    orientation</emphasis>, and <emphasis>eye_pt</emphasis> parameters
    reproduce the view displayed by MGED when the
    <emphasis>saveview</emphasis> command was executed. The presence of
    <quote>$*</quote> in the script causes any additional command-line
    options given when the script is invoked to be interpreted as
    additional <emphasis>rt</emphasis> options. Typically, a
    <quote>-s</quote> option might be used to set the image size (the
    default is 512 pixels square). See the <emphasis>man</emphasis> page
    on <emphasis>rt</emphasis> for details on available options.
  </para>
  <para>
    If you have a <emphasis>saveview</emphasis> script and wish to
    change MGED to that view, merely cut-and-paste, or
    <emphasis>source</emphasis>, the
    <link linkend="viewsize">viewsize</link>,
    <link linkend="orientation">orientation</link>, and
    <link linkend="eye_pt">eye_pt</link> lines from the
    <emphasis>saveview</emphasis> file into MGED.
  </para>
  <para>
    Related MGED commands are <link linkend="preview">preview</link>,
    for viewing the effects of an entire animation script, and
    <link linkend="savekey">savekey</link>. Related
    <emphasis>BRL-CAD</emphasis> programs are
    <emphasis>tabsub</emphasis> and <emphasis>tabinterp</emphasis>.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; saveview rt_script -s1024
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create (or append to) a file named <emphasis>rt_script</emphasis>
    that will contain a script to run the <emphasis>rt</emphasis>
    program and create a color shaded image of the current MGED display.
    The image produced will be 1024 pixels square.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="sca">
    sca sfactor
  </para>
  <para>
    The <quote>sca</quote> command is used to apply a scaling factor.
    The effect is determined by the Transform option in the Settings
    menu. This is normally affected by the current mode of operation in
    MGED (e.g., matrix edit, primitive edit, or viewing).
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; sca 2
  </para>
  <para>
    – In matrix edit mode, the object being affected will get twice as
    big.
  </para>
  <para>
    – In view mode, the size of the view will be doubled (showing twice
    the volume of space, hence making objects appear half their previous
    size on the display).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="sed">
    <varlistentry>
      <term>
        sed path
      </term>
      <listitem>
        <para>
          The <quote>sed</quote> command places MGED directly into the
          primitive edit mode. The <link linkend="path">path</link> must
          uniquely identify a primitive
          shape. If the <emphasis>shape</emphasis> is only
          referenced once in the objects being displayed, then
          <emphasis>path</emphasis> may simply be the shape name. If the
          <emphasis>shape</emphasis> is multiply referenced, then the
          <emphasis>path</emphasis> should be the full
          <emphasis>path</emphasis> from a top level displayed object to
          the <emphasis>primitive shape</emphasis> to be edited. The
          <link linkend="who">who</link> command will return a list of
          the top-level objects currently being displayed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; sed shape1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Enter primitive edit state for shape1.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        setview x-angle y-angle z-angle
      </term>
      <listitem>
        <para xml:id="setview">
          The <quote>setview</quote> command sets the current view in
          MGED by specifying rotation angles (in degrees) about the
          <emphasis>x</emphasis>, <emphasis>y</emphasis>, and
          <emphasis>z</emphasis> axes. The rotations are performed about
          the <emphasis>z</emphasis>axis first, then the
          <emphasis>y</emphasis>axis, then the
          <emphasis>x</emphasis>axis. The <quote>setview 0 0 0</quote>
          command is a synonym for <link linkend="press">press
          top</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; setview 90 180 90
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the current view to that set by <link linkend="ae">ae 0
    0</link>.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="shader4">
    <varlistentry>
      <term>
        shader <emphasis>combination shader_name</emphasis>
        [<emphasis><quote>{shader_args}</quote></emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>shader</quote> command assigns
          <link linkend="SHADER">shader</link> parameters to the
          specified combination. The <emphasis>shader_name</emphasis>
          indicates which <emphasis>shader</emphasis> should be
          assigned. If <emphasis>shader_args</emphasis> are supplied,
          they will be assigned to parameters of the indicated shader.
          This performs a similar function as the
          <link linkend="mater">mater</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; shader group1 checker <quote>{a 0,255,0 b
          0,0,255}</quote>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Assign the checkerboard shader to <emphasis>group1</emphasis>
    using green and blue colors for the squares.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        shells NMG_shape
      </term>
      <listitem>
        <para xml:id="shells">
          The <quote>shells</quote> command separates the specified
         NMG shape into its constituent
          shells. Each shell is written to the database as a separate
          <emphasis>NMG</emphasis> object with a name of the form
          <quote>shell</quote> with a number appended to make the name
          unique. If the <emphasis>NMG</emphasis> has only one shell,
          then only one new object will be created. This differs from
          the <link linkend="decompose">decompose</link> command in that
          <emphasis>decompose</emphasis> will actually break the object
          into a number of separate shells if possible.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; shells object.nmg
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Break the <emphasis>NMG</emphasis> shape named
    <emphasis>object.nmg</emphasis> into its constituent shells.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        showmats path
      </term>
      <listitem>
        <para xml:id="showmats">
          The <quote>showmats</quote> command lists the transformation
          matrices encountered along the specified
          <link linkend="path">path</link> and also lists the
          accumulated matrix at the end of the
          <emphasis>path</emphasis>. If any
          <link linkend="member">member</link> occurs more than once in
          a combination along the path, then a matrix will be listed for
          each occurrence of that <emphasis>member</emphasis>, and the
          accumulated matrix will only use the first occurrence. Related
          commands are <link linkend="putmat">putmat</link>,
          <link linkend="copymat">copymat</link>, and
          <link linkend="listeval">listeval</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; showmats head/skull/jaw
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List the transformation matrices along the
    <emphasis>path</emphasis> <quote>head/skull/jaw</quote> and the
    accumulated matrix for the entire <emphasis>path.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        size view_size
      </term>
      <listitem>
        <para xml:id="size">
          The <quote>size</quote> command sets the size of the current
          viewing cube to the specified <emphasis>view_size</emphasis>
          (in local units). This size is the length of any side of the
          square MGED display.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; size 250
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the MGED display to be 250 <link linkend="units">units</link>
    across.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        solids <emphasis>file</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="solids">
          The <quote>solids</quote> command lists a summary of all the
          primitive shapes used in regions
          referenced by the list of <emphasis>objects</emphasis>. The
          summary is written to the specified <emphasis>file</emphasis>.
          The summary is similar to that produced by the
          <link linkend="regions">regions</link> command, but with the
          addition of <emphasis>primitive shape</emphasis> parameters.
          The <emphasis>shape</emphasis> parameters listed will have the
          accumulated transformation matrices along the
          <link linkend="path">path</link> from the listed
          <emphasis>objects</emphasis> to the <emphasis>primitive
          shape</emphasis> applied (as would be listed by the
          <link linkend="listeval">listeval</link> command). The
          <link linkend="showmats">showmats</link> command may be used
          to see the actual transformation matrices.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; solids shapes_summary group1 regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Write a summary of all the regions in <emphasis>group1</emphasis>
    and include the region named <emphasis>regiona</emphasis>. The
    summary will include detailed <emphasis>shape</emphasis> parameters
    for the shapes used in the regions.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    sph-<emphasis role="strong">part</emphasis>sph1name sph2name newname
  </para>
  <para xml:id="sphpart">
    The <quote>sph-part</quote> command creates a
    <link linkend="listeval">PART</link> shape that encompasses two
    specified <link linkend="listeval">SPH</link> shapes based on their
    parameters.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; sph-part sph1.s sph2.s part.s
  </para>
  <para>
    – Create a PART shape named <emphasis>part.s</emphasis> that
    surrounds the spheres <emphasis>sph1.s</emphasis> and sph2.s.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    status [<emphasis>subcommands</emphasis>]
  </para>
  <para>
    Without a subcommand, the <emphasis>status</emphasis> command
    returns the following information: current state, view_size of the
    current display manager, the conversion factor from local model
    units to the base units (mm) stored in the database, and the view
    matrices of the current display manager. <emphasis>Status</emphasis>
    accepts the following subcommands:
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    state
  </para>
  <para>
    Get the current state of MGED (i.e., <quote>VIEWING,</quote>
    <quote>SOL PICK,</quote> <quote>SOL EDIT,</quote> <quote>OBJ
    PICK,</quote> <quote>OBJ PATH,</quote> <quote>OBJ EDIT,</quote> or
    <quote>VERTPICK</quote>).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    Viewscale
  </para>
  <para>
    Get the view scale.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    base2local
  </para>
  <para>
    Get the conversion factor from base units (mm) to local units.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    local2base
  </para>
  <para>
    Get the conversion factor from local units to base units (mm).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    toViewcenter
  </para>
  <para>
    Get the matrix that describes the location of the view center.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    Viewrot
  </para>
  <para>
    Get the matrix that describes the view orientation.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    model2view
  </para>
  <para>
    Get the model to view conversion matrix.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    view2model
  </para>
  <para>
    Get the view to model conversion matrix.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    model2objview
  </para>
  <para>
    Get the model to view conversion matrix. This matrix also includes
    changes made during editing.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    objview2model
  </para>
  <para>
    Get the view to model conversion matrix. This matrix also includes
    changes made during editing.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    help
  </para>
  <para>
    Print the usage message.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para xml:id="status">
    mged&gt; status
  </para>
  <para>
    – Get default information (i.e., state, view_size, local2base,
    toViewcenter, Viewrot, model2view and view2model).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">status Viewrot</emphasis>  – Get the view rotation matrix.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">status state</emphasis>  – Get the edit state.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        summary [<emphasis>s r g</emphasis>]
      </term>
      <listitem>
        <para xml:id="summary">
          The <quote>summary</quote> command with no arguments lists the
          number of primitive shapes,
          <link linkend="REGION">regions</link>, and non-region
          <link linkend="COMBINATION">combinations</link> in the current
          database. If the <emphasis>s</emphasis> argument is supplied,
          then the name of each <emphasis>primitive shape</emphasis> is
          also listed. Similarly, the <emphasis>r</emphasis> flag asks
          for the <emphasis>region</emphasis> names, and
          <emphasis>g</emphasis> asks for the names of all the
          <link linkend="COMBINATION">combinations</link> (including
          <emphasis>region</emphasis>). The flags may be concatenated to
          get combined output.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; summary sr
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List a summary of primitive shapes and regions for the current
    database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        sv <emphasis>x y</emphasis> [<emphasis>z</emphasis>]
      </term>
      <listitem>
        <para xml:id="sv">
          The <quote>sv</quote> command moves the view center to
          (<emphasis>x, y, z</emphasis>). If <emphasis>z</emphasis> is
          not provided, then <emphasis>z</emphasis>=0 is used. The
          parameters <emphasis>x, y, z</emphasis> are integer values
          relative to the screen. For example, the center of the screen
          is (0, 0, 0) and the upper left corner is (-2048, 2047, 0).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; sv 0 0 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – The view is unchanged.
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">sv
    1024 0 0</emphasis>  – The view center is moved half way between the current
    view center and the right side of the view screen.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        sync
      </term>
      <listitem>
        <para xml:id="sync">
          The <quote>sync</quote> command causes all information in
          memory that should be on disk to be written out.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; sync
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Make sure disk files are up to date.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="t">
    <varlistentry>
      <term>
        t [<emphasis>-a -c -r -s</emphasis>]
        [<emphasis>objects</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>t</quote> command with no
          <emphasis>object</emphasis> argument lists the name of every
          object in the database (in alphabetical order) except those
          marked as hidden with the
          <link linkend="ls">hide</link><emphasis></emphasis>command. If
          the <emphasis>object</emphasis> argument is supplied, only
          those <emphasis>objects</emphasis> are listed. The
          <emphasis>object</emphasis> argument may include regular
          expressions for matching. The following options are also
          allowed:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        a - list all objects in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        c - list all non-hidden combinations in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        r - list all non-hidden regions in the database.
      </para>
    </listitem>
    <listitem>
      <para>
        s - list all non-hidden shapes in the database.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    The <emphasis>t</emphasis> command is a synonym for the
    <link linkend="ls">ls</link> command. Note that when any of the
    above options is used, the output is not formatted.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; t shape*
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all objects with names beginning with <quote>shape.</quote>  (output is formatted)
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">t
    -a shape*</emphasis>  – List all objects with names beginning with
    <quote>shape.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">t
    -s wheel*</emphasis>  – List all shapes with names beginning with
    <quote>wheel.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">t
    -r wheel*</emphasis>  – List all regions with names beginning with
    <quote>wheel.</quote>
  </para>
  <para>
 <literal>mged&gt;</literal> <emphasis role="strong">t
    -c suspension*</emphasis>  – List all combinations with names beginning with
    <quote>suspension.</quote>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        ted
      </term>
      <listitem>
        <para xml:id="ted">
          The <quote>ted</quote> command places the parameters of the
          currently edited primitive shape
          into a file, then starts a text editor for the user to modify
          the parameters. The editor used is whatever the user has set
          in the environment variable <emphasis>EDITOR</emphasis>. If
          <emphasis>EDITOR</emphasis> is not set, then
          <emphasis>/bin/ed</emphasis> is used. MGED must be in the
          primitive edit mode prior to using this command. The
          <link linkend="red">red</link> command performs a similar
          function for <link linkend="COMBINATION">combinations</link>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; ted
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Use a text editor to modify the currently edited shape.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        title [<emphasis>string</emphasis>]
      </term>
      <listitem>
        <para xml:id="title4">
          The <quote>title</quote> command, with no arguments, returns
          the title string for the current database. If command line
          arguments are supplied, they will become the new title string
          for the current database. Quotation marks must be doubly
          escaped.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; title This is my \\<quote>database\\</quote>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the title of the current database to <emphasis>This is my
    <quote>database.</quote></emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="tol">
    <varlistentry>
      <term>
        tol [<emphasis>abs #</emphasis>] [<emphasis>rel #</emphasis>]
        [<emphasis>norm #</emphasis>] [<emphasis>dist #</emphasis>]
        [<emphasis>perp #</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>tol</quote> command, with no arguments, lists the
          current tolerance settings. If the command line includes any
          of the keywords followed by a number, then that tolerance
          setting will be modified. The keywords are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    Tessellation tolerances:  The tessellation tolerances are used to control the
    facetization of primitive shapes. If
    more than one tolerance value is specified, the tessellation is
    performed to meet the most stringent.
  </para>
  <itemizedlist>
    <listitem>
      <para>
        abs – This <emphasis>absolute</emphasis> tolerance is specified
        in model units and represents the maximum allowable error in the
        distance from the actual shape surface to the tessellated
        surface. An <emphasis>absolute</emphasis> tolerance of 0 means
        that the <emphasis>absolute</emphasis> tolerance should be
        ignored.
      </para>
    </listitem>
    <listitem>
      <para>
        rel – This <emphasis>relative</emphasis> tolerance is specified
        in terms of a fraction of the shape size. The value is
        multiplied by the size of the shape to determine another bound
        on the maximum allowable error in the distance from the actual
        shape surface to the tessellated surface. A
        <emphasis>relative</emphasis> tolerance of 0 means that the
        <emphasis>relative</emphasis> tolerance should be ignored.
      </para>
    </listitem>
    <listitem>
      <para>
        norm – This <emphasis>normal</emphasis> tolerance is specified
        in degrees and represents the maximum angle between the actual
        shape surface normal and the tessellated surface normal. A
        <emphasis>normal</emphasis> tolerance of 0 means that the
        <emphasis>normal</emphasis> tolerance should be ignored.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Calculational tolerances:  The calculational tolerances are used in evaluating the
    <link linkend="BOOLEAN">Boolean operations</link> specified in a
    <link linkend="COMBINATION">combination</link>. This is used, for
    example, in the <link linkend="ev">ev</link>,
    <link linkend="facetize">facetize</link>, and
    <link linkend="bev">bev</link> commands.
  </para>
  <itemizedlist>
    <listitem>
      <para>
        dist – The <emphasis>distance</emphasis> tolerance is specified
        in model units and represents the minimum distance required
        between two vertices to consider them distinct.
      </para>
    </listitem>
    <listitem>
      <para>
        perp – The <emphasis>perpendicularity</emphasis> tolerance is
        specified as the cosine of an angle. Two objects will be
        considered perpendicular if the cosine of the angle between them
        is less than the <emphasis>perpendicularity</emphasis>
        tolerance. Similarly, two objects will be considered parallel if
        the cosine of the angle between them is greater than 1.0, the
        <emphasis>perpendicularity</emphasis> tolerance.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para xml:id="tol5">
          mged&gt; tol rel .05 perp 1e-6
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the <emphasis>relative</emphasis> tolerance to 5% and the
    <emphasis>perpendicularity</emphasis> tolerance to 1e-06 (cosine of
    89.9999˚).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="tops">
    <varlistentry>
      <term>
        tops [<emphasis>-g -n -u</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>tops</quote> command displays a list of all the
          <emphasis>top-level</emphasis> objects in the current
          database. The top-level objects are all those objects that are
          not referenced by some other combination. The hierarchical
          structure of <emphasis>BRL-CAD</emphasis> databases usually
          means that there will be a top-level object that includes all
          (or at least most) of the objects in the database. The
          <emphasis>-g</emphasis> option shows only geometry objects.
          The <emphasis>-n</emphasis> option specifies that no
          <quote>decoration</quote> (e.g., <quote>/</quote> and
          <quote>/R</quote>) be shown at the end of each object name.
          The <emphasis>-u</emphasis> option will not show hidden
          objects. See also the hide command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; tops
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all the top-level objects in the current database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="torrcc">
        tor-<emphasis role="strong">rcc</emphasis>torname newname
        The <quote>tor-rcc</quote> command creates an
        <link linkend="listeval">RCC</link> shape that fills in the hole
        of a specified <link linkend="listeval">TOR</link>.
        Examples:
      </term>
      <listitem>
        <para xml:id="tor_rcc">
          mged&gt; tor-rcc tor.s rcc.s
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        – Create an RCC named <emphasis>rcc.s</emphasis> to fill in the
        hole in the middle of <emphasis>tor</emphasis>.s.
      </term>
      <listitem>
      	<para>
      		-
      	</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id="tra">
      <term>
        tra dx dy dz
      </term>
      <listitem>
        <para>
          The <quote>tra</quote> command translates the view or an
          object. Exactly what is done is determined by MGED s state as
          well as the state of the current display manager. The
          parameters <emphasis>dx</emphasis>, <emphasis>dy</emphasis>,
          and <emphasis>dz</emphasis> are in local units.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; tra 10 0 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Translate by 10 units along the <emphasis>x</emphasis> axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="track">
    <varlistentry>
      <term>
        track [<emphasis>parameters</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>track</quote> command builds a simple
          representation of the linked track of a vehicle such as a
          tank. With no command line arguments, the
          <emphasis>track</emphasis> command will prompt for all the
          required input. The vehicle is assumed to be axis-aligned with
          the front in the +<emphasis>x</emphasis> direction. A
          combination name for the track is built by appending a unique
          number to the string <quote>track.</quote> The information
          about the track may be included on the command line, and is
          order-dependent. The parameters are (in order):
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        x coordinate of center of frontmost roadwheel.
      </para>
    </listitem>
    <listitem>
      <para>
        x coordinate of center of rearmost roadwheel.
      </para>
    </listitem>
    <listitem>
      <para>
        z coordinate of center of all roadwheels.
      </para>
    </listitem>
    <listitem>
      <para>
        radius of all roadwheels.
      </para>
    </listitem>
    <listitem>
      <para>
        x coordinate of center of drive wheel (rear).
      </para>
    </listitem>
    <listitem>
      <para>
        z coordinate of center of drive wheel (rear).
      </para>
    </listitem>
    <listitem>
      <para>
        radius of drive wheel.
      </para>
    </listitem>
    <listitem>
      <para>
        x coordinate of center of idler wheel (front).
      </para>
    </listitem>
    <listitem>
      <para>
        z coordinate of center of idler wheel (front).
      </para>
    </listitem>
    <listitem>
      <para>
        radius of idler wheel.
      </para>
    </listitem>
    <listitem>
      <para>
        y coordinate of right side of track.
      </para>
    </listitem>
    <listitem>
      <para>
        y coordinate of left side of track.
      </para>
    </listitem>
    <listitem>
      <para>
        track thickness.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; track 500 0 10 10 -50 50 10 550 50 10 -50 -20 2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Build a simple track using the provided arguments.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        translate x y z
      </term>
      <listitem>
        <para xml:id="translate">
          The <quote>translate</quote> command is used to precisely
          control the translation of an object in both primitive edit
          and matrix edit modes. The keypoint of the edited object or
          shape is translated to the specified coordinates.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; translate 10 20 30
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Move the currently edited object to the model coordinates (10 20
    30).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        tree [<emphasis>-c</emphasis>] [<emphasis>-i #</emphasis>]
        [<emphasis>-o outfile</emphasis>] object(s)
      </term>
      <listitem>
        <para xml:id="tree">
          The <quote>tree</quote>command will list the contents of the
          specified <emphasis>objects</emphasis> in a tree-like format
          that displays the hierarchical structure of the
          <emphasis>objects</emphasis>, and all objects referenced by
          them, down to the primitive shape
          level. If <emphasis>-c</emphasis> is given, the shapes are not
          printed. The <emphasis>-o outfile</emphasis> option prints the
          results to <emphasis>outfile</emphasis>. The <emphasis>-i
          #</emphasis> option allows the user to set the number of
          spaces to indent.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; tree group1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Show the structure of the tree rooted at
    <emphasis>group1</emphasis> down to the primitive shape level.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">tree -i 2 group1</emphasis>  – This time use two spaces for each level of
    indentation.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">tree -c group1</emphasis>  – No shapes are printed.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        t_muves
      </term>
      <listitem>
        <para xml:id="t_muves">
          The <quote>t_muves</quote> command lists all the_muves
          components that are known as a result of a prior
          <link linkend="read_muves">read_muves</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; t_muves
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all the known MUVES components.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="units">
    <varlistentry>
      <term>
        units [<emphasis>units_type</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>units</quote> command, with no arguments, will
          return the current type of units that MGED is using. If a
          <emphasis>units_type</emphasis> is specified, MGED will switch
          to editing in the indicated units. The actual database is
          always stored in millimeters, and the display is adjusted to
          the users choice of units. If the
          <emphasis>units_type</emphasis> specified on the command line
          is one of the types allowed, it will be written to the
          database file as the preferred units and succeeding
          invocations will use those units. The
          <emphasis>units_type</emphasis> strings that will be
          remembered as the preferred editing unit are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        mm – millimeters.
      </para>
    </listitem>
    <listitem>
      <para>
        millimeter – millimeters.
      </para>
    </listitem>
    <listitem>
      <para>
        cm – centimeters.
      </para>
    </listitem>
    <listitem>
      <para>
        centimeter – centimeters.
      </para>
    </listitem>
    <listitem>
      <para>
        m – meters.
      </para>
    </listitem>
    <listitem>
      <para>
        meter – meters.
      </para>
    </listitem>
    <listitem>
      <para>
        in – inches.
      </para>
    </listitem>
    <listitem>
      <para>
        inch – inches.
      </para>
    </listitem>
    <listitem>
      <para>
        ft – feet.
      </para>
    </listitem>
    <listitem>
      <para>
        foot – feet.
      </para>
    </listitem>
    <listitem>
      <para>
        feet – feet.
      </para>
    </listitem>
    <listitem>
      <para>
        um – micrometers.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <emphasis></emphasis>
  </para>
  <para>
    Units_type strings that may be used, but will not be remembered as
    the preferred editing units, are:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        angstrom.
      </para>
    </listitem>
    <listitem>
      <para>
        decinanometer.
      </para>
    </listitem>
    <listitem>
      <para>
        nanometer.
      </para>
    </listitem>
    <listitem>
      <para>
        nm.
      </para>
    </listitem>
    <listitem>
      <para>
        micron.
      </para>
    </listitem>
    <listitem>
      <para>
        micrometer.
      </para>
    </listitem>
    <listitem>
      <para>
        km.
      </para>
    </listitem>
    <listitem>
      <para>
        kilometer.
      </para>
    </listitem>
    <listitem>
      <para>
        cubit.
      </para>
    </listitem>
    <listitem>
      <para>
        yd.
      </para>
    </listitem>
    <listitem>
      <para>
        yard.
      </para>
    </listitem>
    <listitem>
      <para>
        rd.
      </para>
    </listitem>
    <listitem>
      <para>
        rod.
      </para>
    </listitem>
    <listitem>
      <para>
        mi.
      </para>
    </listitem>
    <listitem>
      <para>
        mile.
      </para>
    </listitem>
    <listitem>
      <para>
        nmile.
      </para>
    </listitem>
    <listitem>
      <para>
        nautical mile.
      </para>
    </listitem>
    <listitem>
      <para>
        au.
      </para>
    </listitem>
    <listitem>
      <para>
        astronomical unit.
      </para>
    </listitem>
    <listitem>
      <para>
        lightyear.
      </para>
    </listitem>
    <listitem>
      <para>
        pc.
      </para>
    </listitem>
    <listitem>
      <para>
        parsec.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
			Examples:
      </term>
      <listitem>
        <para>
          mged&gt; units in
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Switch to editing in <quote>inches</quote> and remember this as
    the preferred editing units for this database.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="vars">
    <varlistentry>
      <term>
        vars [<emphasis>variable</emphasis>=<emphasis>value</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>vars</quote> command, with no arguments, will list
          all the MGED variables and their values. If a
          <emphasis>variable</emphasis>=<emphasis>value</emphasis>
          string is included on the command line, then that
          <emphasis>value</emphasis> is assigned to the specified
          <emphasis>variable</emphasis>. Note that no spaces are allowed
          around the <quote>=</quote>. The available
          <emphasis>variables</emphasis> are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    autosize – if nonzero, then MGED will set the view_size whenever it
    draws to an empty display.
  </para>
  <para xml:id="Rateknobs">
    rateknobs – if nonzero, then the knobs and sliders act as rate
    adjustments; otherwise, they act as absolute adjustments.
  </para>
  <para>
    sliders – if nonzero, the sliders are displayed.
  </para>
  <para>
    faceplate – if nonzero, the MGED faceplate is displayed.
  </para>
  <para>
    orig_gui – if nonzero, the <quote>viewing</quote> menu is displayed.
  </para>
  <para>
    linewidth – indicates how wide to draw lines.
  </para>
  <para>
    linestyle – set line style of wireframe shapes. Currently not being
    used.
  </para>
  <para>
    hot_key – the X11 keysym definition for the key to toggle the
    <emphasis>send_key</emphasis> value. The default is
    <quote>0xFFC6</quote> (65478 decimal), which is the F9 key. The
    keysym values are defined in the X11 file named
    <emphasis>keysymdef.h</emphasis>.
  </para>
  <para>
    context – if nonzero (the default), then primitive editing
    parameters entered via the <link linkend="p">p</link> command will
    be applied to the edited shape in the context of the
    <link linkend="COMBINATION">combination</link> tree above it in the
    displayed hierarchy. This means, for example, a translation applied
    to a shape will translate the shape to some point such that when the
    transformation matrices for that <link linkend="path">path</link>
    are applied, the edited shape will appear at the specified location.
    If <emphasis>context</emphasis> is set to zero, then the primitive
    edit operations will be applied directly to the edited shape. This
    means that a translation to a specific point may result in the
    edited shape being drawn at a point different from that specified
    (due to transformations in the <emphasis>combination</emphasis> tree
    above it). Note that this only affects primitive edit operations
    that use the <emphasis>p</emphasis> command.
  </para>
  <para>
    dlist – if nonzero, use display lists.
  </para>
  <para>
    use_air – if nonzero, use air while raytracing.
  </para>
  <para>
    listen – if nonzero, listen for connections to MGED s built-in
    fbserv.
  </para>
  <para>
    port – port for the built-in fbserv to use.
  </para>
  <para>
    fb – if nonzero, then framebuffer is active.
  </para>
  <para>
    fb_all – if nonzero, use entire geometry window for the framebuffer;
    otherwise, use only the rectangular area.
  </para>
  <para>
    fb_overlay – if nonzero, overlay framebuffer image over geometry;
    otherwise, draw geometry over the framebuffer image.
  </para>
  <para>
    mouse_behavior – see the following list of mouse behaviors:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        c – fire ray for combination edit selection.
      </para>
    </listitem>
    <listitem>
      <para>
        d – default behavior (i.e., as found in classic MGED).
      </para>
    </listitem>
    <listitem>
      <para>
        m – fire ray for matrix edit selection.
      </para>
    </listitem>
    <listitem>
      <para>
        p – paint rectangular area.
      </para>
    </listitem>
    <listitem>
      <para>
        q – fire query_rays.
      </para>
    </listitem>
    <listitem>
      <para>
        r – raytrace rectangular area.
      </para>
    </listitem>
    <listitem>
      <para>
        s – fire ray for primitive edit selection.
      </para>
    </listitem>
    <listitem>
      <para xml:id="z2">
        z – zoom rectangular area.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    coords – see the following list of coordinate systems to use for
    transformations:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        m – model coordinates.
      </para>
    </listitem>
    <listitem>
      <para>
        v – view coordinates.
      </para>
    </listitem>
    <listitem>
      <para>
        o – object coordinates.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    rotate_about – see the following list of centers of rotation:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        v – view center.
      </para>
    </listitem>
    <listitem>
      <para>
        e – eye.
      </para>
    </listitem>
    <listitem>
      <para>
        m – model origin.
      </para>
    </listitem>
    <listitem>
      <para>
        k – keypoint.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    transform – see the following list of things to transform:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        a – transform the angle distance cursor if active; otherwise
        same as v.
      </para>
    </listitem>
    <listitem>
      <para>
        e – apply transformations to the edit.
      </para>
    </listitem>
    <listitem>
      <para>
        v – apply transformations to the view.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    predictor – if nonzero, the predictor frame will be displayed.
  </para>
  <para>
    predictor_advance – the number of seconds into the future to advance
    the predictor frame.
  </para>
  <para>
    predictor_length – not currently used.
  </para>
  <para>
    perspective – if greater than zero, this is the perspective angle in
    degrees; otherwise, perspective is turned off.
  </para>
  <para>
    perspective_mode – if nonzero, turn perspective on; otherwise, turn
    it off.
  </para>
  <para>
    toggle_perspective – used to toggle among the four canned
    perspective angles (i.e., 30, 45, 60, and 90).
  </para>
  <para>
    nmg_eu_dist – when the <emphasis>-u</emphasis> option to the
    <link linkend="ev">ev</link> command is used, the
    NMG edgeuses are drawn this distance (mm)
    away from the actual edge.
  </para>
  <para>
    eye_sep_dist – if greater than zero, this is the eye separation
    distance (mm) for stereo viewing; otherwise, stereo is off.
  </para>
  <para>
    union_op – not currently used.
  </para>
  <para>
    intersection_op – not currently used.
  </para>
  <para>
    difference_op – not currently used.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; vars sliders=1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Turn on the <emphasis>sliders.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="vdraw">
    <varlistentry>
      <term>
        vdraw <emphasis>command</emphasis> [<emphasis>args</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>vdraw</quote> command allows drawing of lines and
          polygons (optionally with per vertex normals) in the MGED
          graphics display. It is used to build a named list of drawing
          commands for MGED, send the list to the MGED display, modify
          the list, or delete all or part of the list. All vertices in
          the <emphasis>vdraw</emphasis> command are in millimeters. The
          MGED drawing commands are represented by integers in the
          <emphasis>vdraw</emphasis> command. The MGED drawing commands
          and the integers that <emphasis>vdraw</emphasis> uses for them
          are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <table>
  	<title>MGED Drawing Commands</title>
    <tgroup cols="3">
      <colspec colwidth="33*" align="left" />
      <colspec colwidth="33*" align="left" />
      <colspec colwidth="33*" align="left" />
      <tbody>
        <row>
          <entry>
            <emphasis role="strong">MGED Drawing Command</emphasis>
          </entry>
          <entry>
            <emphasis role="strong"></emphasis>
            Vdraw integer
          </entry>
          <entry>
            <emphasis role="strong"></emphasis>
            MGED Action
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_LINE_MOVE
          </entry>
          <entry>
            0
          </entry>
          <entry>
            begin a new line at this point
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_LINE_DRAW
          </entry>
          <entry>
            1
          </entry>
          <entry>
            draw line from previous point to this point
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_POLY_START
          </entry>
          <entry>
            2
          </entry>
          <entry>
            start polygon (argument is surface normal)
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_POLY_MOVE
          </entry>
          <entry>
            3
          </entry>
          <entry>
            move to first polygon vertex
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_POLY_DRAW
          </entry>
          <entry>
            4
          </entry>
          <entry>
            subsequent polygon vertices
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_POLY_END
          </entry>
          <entry>
            5
          </entry>
          <entry>
            last polygon vertex (should be same as first)
          </entry>
        </row>
        <row>
          <entry>
            RT_VLIST_POLY_VERTNORM
          </entry>
          <entry>
            6
          </entry>
          <entry>
            vertex normal (for shading interpolation)
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <para>
    The<emphasis>vdraw</emphasis>commands are:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        open – with no arguments, this returns <quote>1</quote> if there
        is a open list; <quote>0</quote> otherwise. If an argument is
        supplied, a command list is opened with the provided name.
      </para>
    </listitem>
    <listitem>
      <para>
        write – with arguments of <emphasis>i c x y z</emphasis>, the
        MGED drawing command #<emphasis>c</emphasis> is placed in the
        i<superscript>th</superscript> position of the command list with
        the vertex as (<emphasis>x y z</emphasis>).  – with arguments of <emphasis>next c x y z</emphasis>,
        the command is placed at the end of the list.
      </para>
    </listitem>
    <listitem>
      <para>
        insert – with arguments of <emphasis>i c x y z</emphasis>, the
        MGED drawing command #<emphasis>c</emphasis> is inserted just
        before the i<superscript>th</superscript> position of the
        command list.
      </para>
    </listitem>
    <listitem>
      <para>
        delete – with an integer argument of <emphasis>i</emphasis>, the
        i<superscript>th</superscript> command is deleted.  – with an argument of <quote>last,</quote> the last
        command on the list is deleted.  – with an argument of <quote>all,</quote> all the
        commands on the list are deleted.
      </para>
    </listitem>
    <listitem>
      <para>
        params – with an argument of <emphasis>color rrggbb</emphasis>,
        the color of all objects on this list is set. The
        <emphasis>rrggbb</emphasis> is a hex number representing the
        color, <quote>ffffff</quote> is white, <quote>ff0000</quote> is
        red, <quote>00ff00</quote> is green, etc.  – with a single string argument, the name of the
        current list is changed.
      </para>
    </listitem>
    <listitem>
      <para>
        read – with an integer argument of <emphasis>i</emphasis>, the
        i<superscript>th</superscript> command is returned.  – with an argument of <quote>color,</quote> the current
        color is returned.  – with an argument of <quote>length,</quote> the number
        of commands in the current list is returned.  – with an argument of <quote>name,</quote> the name of
        the current command list is returned.
      </para>
    </listitem>
    <listitem>
      <para>
        send – send the current command list to the MGED display
        manager.
      </para>
    </listitem>
    <listitem>
      <para>
        vlist – with an argument of <quote>list,</quote> return a list
        of the names of all existing command lists.  – with an argument of <emphasis>delete
        list_name</emphasis>, delete the specified command list.
      </para>
    </listitem>
  </itemizedlist>
  <para>
 All textual arguments may be abbreviated by their first
    letter.
  </para>
  <para>
     
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; vdraw open square
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Open a list named <emphasis>square.</emphasis>
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw params color ff00</emphasis>  – Set color to green.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw write next 0 0 0 0</emphasis>  – Start a line at the origin.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw write next 1 100 0 0</emphasis>  – Draw line to (100 0 0).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw write next 1 100 100 0</emphasis>  – Draw line to (100 100 0).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw write next 1 0 100 0</emphasis>  – Draw line to (0 100 0).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw write next 1 0 0 0</emphasis>  – Draw line to (0 0 0).
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vdraw send</emphasis>  – Draw the square in the MGED display.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="view">
    <varlistentry>
      <term>
        view subcommand
      </term>
      <listitem>
        <para>
          Get/set view parameters (local units). The
          v<emphasis>iew</emphasis> command accepts the following
          subcommands:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
 <emphasis role="strong">center</emphasis> [<emphasis>x
    y z</emphasis>]–get/set the view center of the current view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="view_size">
    <varlistentry>
      <term xml:id="ELEVATION">
        size [<emphasis>val</emphasis>]–get/set the view_size of the
        current view.
        eye [<emphasis>x y z</emphasis>]–get/set the eye point
        of the current view.
        ypr [<emphasis>y p r</emphasis>]–get/set the yaw, pitch,
        and roll of the current view.
        quat [<emphasis>v1 v2 v3 v4</emphasis>]–get/set the view
        in the form of a quaternion.
        aet [<emphasis>a e t</emphasis>]–get/set the azimuth,
        elevation, and twist of the current view.
      </term>
      <listitem>
      	<para>
      		-
      	</para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; view center
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get the view center.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">view center 0 0 0</emphasis>  – Set the view center at the origin of model space.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="viewsize">
    viewsize view_size
  </para>
  <para>
    The <quote>viewsize</quote> command sets the size of the current
    viewing cube to the specified
  </para>
  <para>
    view_size (in local units). This size is the length of any side of
    the square mged display. This command is a synonym for the
    <link linkend="nirt">size</link> command.
  </para>
  <para>
    Examples:
  </para>
  <para>
    <literal></literal>
  </para>
  <para>
    mged&gt; viewsize 250
  </para>
  <para>
    – Set the mged display to be 250 <link linkend="nirt">units</link>
    across.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="vnirt">
    vnirt [<emphasis>nirt args</emphasis>] x y
  </para>
  <para>
    This command interprets <emphasis>x</emphasis> and
    <emphasis>y</emphasis> as view coordinates (i.e., +-2047) and
    converts them to model coordinates (local units) using a value of
    2047 for view <emphasis>z</emphasis> before passing them to
    <link linkend="nirt">nirt</link>. All other arguments are passed to
    nirt without modification.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="vquery_ray">
    <varlistentry>
      <term>
        vquery_ray x y
      </term>
      <listitem>
        <para>
          Same as <link linkend="vnirt">vnirt</link>.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="vrmgr">
    <varlistentry>
      <term>
        vrmgr <emphasis>host</emphasis> {<emphasis>master</emphasis> |
        <emphasis>slave</emphasis> | <emphasis>overview</emphasis>}
      </term>
      <listitem>
        <para>
          The <quote>vrmgr</quote> command establishes a link between
          the current MGED display and a <emphasis>vrmgr</emphasis>
          process running on the specified <emphasis>host</emphasis>.
          The <emphasis>vrmgr</emphasis> program is a manager for
          virtual reality displays using MGED. The
          <emphasis>vrmgr</emphasis> process must be started on
          <emphasis>host</emphasis> prior to executing the
          <emphasis>vrmgr</emphasis> command in MGED. The second command
          line argument to the <emphasis>vrmgr</emphasis> command is the
          role of the current MGED display. The
          <emphasis>master</emphasis> display controls the viewing
          parameters of itself and all the <emphasis>slave</emphasis>
          displays. The <emphasis>overview</emphasis> display acts as an
          observer of the entire virtual reality process.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; vrmgr host1.brlcad.org master
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the current MGED display as the <emphasis>master</emphasis>
    for the <emphasis>vrmgr</emphasis> process running on the host named
    <emphasis>host1.brlcad.org.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="vrot">
    <varlistentry>
      <term>
        vrot xrot yrot zrot
      </term>
      <listitem>
        <para>
          The <quote>vrot</quote> command rotates the view on the
          current geometry display window. The parameters
          <emphasis>xrot, yrot</emphasis>, and <emphasis>zrot</emphasis>
          are rotations (specified in degrees) about the
          <emphasis>viewing coordinate
          axes</emphasis>.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
 If the display is in rotate-about-center mode, then the
    rotation will occur about the center of the viewing volume. In
    rotate-about-eye mode, the view on the display will be rotated about
    the eye. The <link linkend="vars">vars</link> command (or a menu
    button) allows the user to toggle between the two modes.
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; vrot 90 0 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Rotate 90 degrees about view <emphasis>x</emphasis> axis.
  </para>
  <para>
 <literal>mged&gt;</literal>
    <emphasis role="strong">vrot 0 180 0</emphasis>  – Rotate 180 degrees about view <emphasis>y</emphasis>
    axis.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        wcodes <emphasis>file</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="wcodes">
          The <quote>wcodes</quote> command writes
          <link linkend="IDENT">ident</link>, <link linkend="air_code">air
          code</link>, <link linkend="material_code">material code</link>,
          <link linkend="LOS">LOS</link>, and name of all the
          <link linkend="REGION">regions</link> in the list of
          <emphasis>objects</emphasis> to the specified
          <emphasis>file</emphasis>. The format used is compatible with
          the <link linkend="rcodes">rcodes</link> command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; wcodes code_file group1 group2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Write region data for all the regions in
    <emphasis>group1</emphasis> and <emphasis>group2</emphasis> to
    <emphasis>code_file.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="whatid">
        whatid region_name
      </term>
      <listitem>
        <para>
          The <quote>whatid</quote> command lists the
          <link linkend="IDENT">ident</link> number of the specified
          <emphasis>region</emphasis>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; whatid regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Get the <emphasis>ident</emphasis> number for
    <emphasis>regiona.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry xml:id="which_shader">
      <term xml:id="which_shade">
        which_shader &lt;<emphasis>shaders</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>which_shader</quote> command lists all the
          <link linkend="REGION">regions</link> that use one of the
          <emphasis>shaders</emphasis> specified.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; which_shader plastic light
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all <emphasis>regions</emphasis> in the current database that
    use the <emphasis>plastic</emphasis> or <emphasis>light</emphasis>
    shaders.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="air_code">
        whichair &lt;<emphasis>air_codes</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="whichair">
          The <quote>whichair</quote> command lists all the
          <link linkend="REGION">regions</link> that use one of the
          <link linkend="air_code">air codes</link> specified. The
          <link linkend="eac">eac</link> command will perform a similar
          search, but will draw the qualifying regions in the MGED
          display rather than listing them. Regions that have nonzero
          <link linkend="IDENT">ident numbers</link> will not be listed
          by this command.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; whichair 2 3
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para xml:id="aircodes">
    – List all <emphasis>regions</emphasis> in the current database that
    have <emphasis>air codes</emphasis> of 2 or 3.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        whichid &lt;<emphasis>idents</emphasis>&gt;
      </term>
      <listitem>
        <para xml:id="whichid">
          The <quote>whichid</quote> command lists all the
          <link linkend="REGION">regions</link> that use one of the
          <link linkend="IDENT">idents</link> specified.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; whichid 1002 1003
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all <emphasis>regions</emphasis> in the current database that
    have <emphasis>idents</emphasis> of 1002 or 1003.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="who">
    <varlistentry>
      <term>
        who [<emphasis>real</emphasis> | <emphasis>phony</emphasis> |
        <emphasis>both</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>who</quote> command lists the top-level objects
          that are currently displayed. The <emphasis>phony</emphasis>
          flag asks for just <emphasis>phony</emphasis> objects.
          <emphasis>Phony</emphasis> objects are typically objects that
          are drawn in the MGED display, but are not actual database
          objects. Some <emphasis>phony</emphasis> objects are drawings
          from the <link linkend="vdraw">vdraw</link> command and the
          edgeuses drawn by the <link linkend="ev">ev -u</link> command.
          The <emphasis>real</emphasis> flag asks for just
          <emphasis>real</emphasis> objects, and the
          <emphasis>both</emphasis> flag asks for both
          <emphasis>real</emphasis> and <emphasis>phony</emphasis>
          objects. The default is just <emphasis>real</emphasis>
          objects. Any of the flags may be abbreviated by its first
          letter. The <link linkend="x">x</link> command also lists
          displayed shapes, but in more detail.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; who p
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List all top-level <emphasis>phony</emphasis> objects currently
    displayed.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="wmater">
    <varlistentry>
      <term>
        wmater <emphasis>file</emphasis>
        &lt;<emphasis>objects</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>wmater</quote> command lists the
          <link linkend="SHADER">shader</link> name and parameters,
          <link linkend="RGB">RGB</link> color,
          <emphasis>RGB_valid</emphasis> flag, and the
          <link linkend="inheritance">inheritance</link> flag to the
          specified <emphasis>file</emphasis> for the listed
          <emphasis>objects</emphasis>. The format used is compatible
          with the <link linkend="rmater">rmater</link> command. If
          <emphasis>file</emphasis> already exists, the new data is
          appended to it.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; wmater mater_file group1 regiona
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List the shader parameters of <emphasis>group1</emphasis> and
    <emphasis>regiona</emphasis> to <emphasis>mater_file.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="x">
    <varlistentry>
      <term>
        x [<emphasis>level</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>x</quote>command lists all the
          primitive shapes currently drawn
          in the MGED display. The <emphasis>level</emphasis> determines
          how much detail should be included in the list. For
          <emphasis>level</emphasis> zero (the default), only a list of
          paths to shapes in the display list is produced. Each shape is
          prefixed by <quote>VIEW</quote> or <quote>-no-,</quote>
          indicating that the shape is actually being drawn or that it
          is being skipped, respectively. If <emphasis>level</emphasis>
          is greater than zero, the center, size,
          <link linkend="IDENT">ident number</link>,
          <link linkend="RGB">RGB</link> color assigned to the region,
          and the actual color used to draw the shape are also listed.
          If <emphasis>level</emphasis> is greater than one, the number
          of vlist structures and the number of points in each vlist
          structure are also listed for each shape. If
          <emphasis>level</emphasis> is greater than two, then the
          actual lines drawn for each shape are also listed. The
          <link linkend="who">who</link> command performs a similar
          function, but lists only the top-level objects that are
          displayed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; x
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List the paths to the displayed shapes.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="xpush">
    <varlistentry>
      <term>
        xpush object
      </term>
      <listitem>
        <para>
          The <quote>xpush</quote> command <quote>pushes</quote> the
          effects of transformation matrices in the
          <link linkend="paths">paths</link>, from the specified
          <emphasis>object</emphasis> to the
          primitive shapes, into the shapes
          and replaces all the transformation matrices with identity
          matrices. The <link linkend="push">push</link> command
          performs a similar function, but will refuse to make any
          changes if any shape needs to be transformed into more than
          one location/orientation/scale. The <emphasis>xpush</emphasis>
          command will recognize such situations and create extra copies
          of such shapes to accept the different transformation effects.
          New shapes created by this command will have a suffix appended
          to the original name to make the new name unique.
          <link linkend="COMBINATION">Combinations</link> referring to
          the new shape will also be modified to reflect the name
          change. The <link linkend="push">push</link> command performs
          the same function but will refuse to make any changes if it
          cannot accomplish the <quote>push</quote> without creating any
          new shapes.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; xpush group1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Move all the effects of the transformation matrices in the tree
    rooted at <emphasis>group1</emphasis> down to the shape level
    (creating new shapes if needed).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist xml:id="zoom">
    <varlistentry>
      <term>
        zoom scale_factor
      </term>
      <listitem>
        <para>
          The <quote>zoom</quote> command changes the size of the
          viewing cube for the MGED display, resulting in a <quote>zoom
          in</quote> or <quote>zoom out</quote> effect. A
          <emphasis>scale_factor</emphasis> greater than one reduces the
          size of the viewing cube (<quote>zoom in</quote>). A
          <emphasis>scale_factor</emphasis> of less than one increases
          the size of the viewing cube (<quote>zoom out</quote>).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; zoom 2
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Reduces the size of the current viewing cube by half (effectively
    doubling the size of objects in the display).
  </para>
</section>
<section xml:id="MGEDDeveloperCommands">
  <title>MGED Developer Commands</title>
  <table>
  	<title>MGED Developer Commands</title>
    <tgroup cols="5">
      <colspec align="left" />
      <colspec align="left" />
      <colspec align="left" />
      <colspec align="left" />
      <colspec align="left" />
      <tbody>
        <row>
          <entry>
            <link linkend="aip">aip</link>
          </entry>
          <entry>
            <link linkend="cmd_win">cmd_win</link>
          </entry>
          <entry>
            <link linkend="Collaborate2">collaborate</link>
          </entry>
          <entry>
            <link linkend="get_comb">get_comb</link>
          </entry>
          <entry>
            <link linkend="get_dm_list">get_dm_list</link>
          </entry>
        </row>
        <row>
          <entry>
            get_edit_solid
          </entry>
          <entry>
            <link linkend="get_more_default">get_more_default</link>
          </entry>
          <entry>
            <link linkend="grid2model_lu">grid2model_lu</link>
          </entry>
          <entry>
            <link linkend="grid2view_lu">grid2view_lu</link>
          </entry>
          <entry>
            <link linkend="gui_destroy">gui_destroy</link>
          </entry>
        </row>
        <row>
          <entry>
            <link linkend="hist">hist</link>
          </entry>
          <entry>
            <link linkend="make_name">make_name</link>
          </entry>
          <entry>
            <link linkend="mged_update">mged_update</link>
          </entry>
          <entry>
            <link linkend="mmenu_get">mmenu_get</link>
          </entry>
          <entry>
            <link linkend="mmenu_set">mmenu_set</link>
          </entry>
        </row>
        <row>
          <entry>
            <link linkend="model2grid_lu">model2grid_lu</link>
          </entry>
          <entry>
            <link linkend="model2view">model2view</link>
          </entry>
          <entry>
            <link linkend="model2view_lu">model2view_lu</link>
          </entry>
          <entry>
            <link linkend="output_hook">output_hook</link>
          </entry>
          <entry>
            <link linkend="put_comb">put_comb</link>
          </entry>
        </row>
        <row>
          <entry>
           put_edit_solid
          </entry>
          <entry>
            <link linkend="reset_edit_solid">reset_edit_solid</link>
          </entry>
          <entry>
            <link linkend="rset">rset</link>
          </entry>
          <entry>
            <link linkend="set_more_default">set_more_default</link>
          </entry>
          <entry>
            <link linkend="share">share</link>
          </entry>
        </row>
        <row>
          <entry>
            <link linkend="solids_on_ray">solids_on_ray</link>
          </entry>
          <entry>
            <link linkend="stuff_str">stuff_str</link>
          </entry>
          <entry>
            <link linkend="svb">svb</link>
          </entry>
          <entry>
            <link linkend="tie">tie</link>
          </entry>
          <entry>
            <link linkend="view2grid_lu">view2grid_lu</link>
          </entry>
        </row>
        <row>
          <entry>
            <link linkend="view2model">view2model</link>
          </entry>
          <entry>
            <link linkend="view2model_lu">view2model_lu</link>
          </entry>
          <entry>
            <link linkend="view2model_vec">view2model_vec</link>
          </entry>
          <entry>
            <link linkend="view_ring">view_ring</link>
          </entry>
          <entry>
            <link linkend="viewget">viewget</link>
          </entry>
        </row>
        <row>
          <entry>
            <link linkend="viewset">viewset</link>
          </entry>
          <entry>
            <link linkend="winset">winset</link>
          </entry>
          <entry>
             
          </entry>
          <entry>
             
          </entry>
          <entry>
             
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="aip">
    aip [<emphasis>f|b</emphasis>]
  </para>
  <para>
    The <quote>aip</quote> command advances the
    <link linkend="ill">illumination</link> pointer when MGED is in the
    <link linkend="ill">solid illuminate</link> state or the
    <link linkend="ill">object illuminate</link> state. In either of the
    <emphasis>illuminate</emphasis> states, a single primitive shape is
    highlighted at one time, and the path to that shape is displayed.
    Moving the mouse vertically in the MGED display causes different
    shapes to be highlighted and their paths to be displayed. The
    <emphasis>aip</emphasis> command causes the next shape in the list
    to be highlighted (if used with no arguments or the
    <emphasis>f</emphasis> argument), or it causes the previous shape in
    the list to be highlighted (if used with the <emphasis>b</emphasis>
    argument). When the desired shape is highlighted, it is selected by
    clicking the middle mouse button or by using the
    <link linkend="M">M</link> command. If MGED is in the
    <link linkend="ill">object path</link> state, the place along the
    path where the edit is to take place will advance. Once the desired
    path position is displayed, it is selected by clicking the middle
    mouse button or by using the <link linkend="M">M</link> command.
  </para>
  <para>
    Examples:
  </para>
  <para>
    mged&gt;
    <link linkend="press"><emphasis role="strong">press</emphasis></link>
    sill
  </para>
  <para>
    – Enter solid (i.e., primitive) illuminate mode.
  </para>
  <para>
 mged <emphasis role="strong">aip</emphasis>  – Highlight the next shape.
  </para>
  <para>
 mged <emphasis role="strong">aip b</emphasis>  – Highlight the previous shape.
  </para>
  <para>
 mged
    <link linkend="M"><emphasis role="strong">M</emphasis></link><emphasis role="strong">1
    0 0</emphasis>  – Select the highlighted shape.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="cmd_win">
        cmd_win subcommand
      </term>
      <listitem>
        <para>
          This command is used to maintain internal command window
          structures. The <emphasis>cmd_win</emphasis> command accepts
          the following subcommands:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    open <emphasis>id –</emphasis>This subcommand is used to create the
    internal data structures for a new command window. If
    <emphasis>id</emphasis> is already in use, nothing is changed.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        close <emphasis>id –</emphasis>This subcommand releases
        <emphasis>id</emphasis> s internal data structures. If the
        referenced command window is tied to
        a display manager, then that association is also removed.
        et <emphasis>id –</emphasis>This subcommand sets the
        current command window to <emphasis>id</emphasis>. If this
        command window is tied to a display
        manager, that display manager becomes the current display
        manager.
        get –<emphasis role="strong"></emphasis>This subcommand
        returns the id of the current command window.
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; cmd_win open my_id
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create a command window named <emphasis>my_id</emphasis>.
  </para>
  <para>
 mged <emphasis role="strong">cmd_win close
    my_id</emphasis>  – Closes the command window <emphasis>my_id.</emphasis>
  </para>
  <para>
 mged <emphasis role="strong">cmd_win set
    my_id</emphasis>  – <emphasis>my_id</emphasis> becomes the current
    command window.
  </para>
  <para>
 mged <emphasis role="strong">cmd_win get</emphasis>  – Gets the current command window.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        collaborate subcommand
      </term>
      <listitem>
        <para>
          This command is used to maintain the <quote>collaborative
          session.</quote> The collaborative session is a list whose
          members share a view and view ring among the upper right
          display manager panes. The <emphasis>collaborate</emphasis>
          command accepts the following subcommands:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
 <emphasis role="strong">join</emphasis> <emphasis>id
    –</emphasis>This causes the GUI associated with
    <emphasis>id</emphasis> to join the collaborative session.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term>
        quit <emphasis>id –</emphasis>This causes the GUI associated
        with <emphasis>id</emphasis> to quit the collaborative session.
        show –<emphasis role="strong"></emphasis>This returns
        the list of participants (ids) in the collaborative session.
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; collaborate join bill
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – <emphasis>bill</emphasis> is added to the collaborative session.
  </para>
  <para>
 mged <emphasis role="strong">collaborate quit
    bill</emphasis>  – <emphasis>bill</emphasis>is removed from the
    collaborative session.
  </para>
  <para>
 mged <emphasis role="strong">collaborate
    show</emphasis>
     – Show list of collaborative participants.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="get_comb">
    get_comb comb_name
  </para>
  <para>
    The <quote>get_comb</quote> command returns a Tcl list of
    information about <emphasis>comb_name</emphasis>. If
    <emphasis>comb_name</emphasis> is a region, the following
    information is returned:
  </para>
  <para>
 <emphasis>NAME REGION REGION_ID AIRCODE
    GIFT_MATERIAL</emphasis>  LOS COLOR SHADER INHERIT BOOLEAN_FORMULA
  </para>
  <para>
    Otherwise, the following shorter list is returned:
  </para>
  <para>
    <emphasis></emphasis>
  </para>
  <para>
    NAME REGION COLOR SHADER INHERIT BOOLEAN_FORMULA
  </para>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; get_comb some_region
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    some_region Yes 1000 0 1 100 {0 220 220} plastic No { u box - ball }

  </para>
  <para>
    mged <emphasis role="strong">get_comb some_non_region</emphasis>  some_non_region No {0 220 220} plastic No { u box2 -
    ball2 }
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="get_dm_list">
        get_dm_list
      </term>
      <listitem>
        <para>
          The <quote>get_dm_list</quote> command returns a list of all
          open display managers. The members of this list are the actual
          Tcl/Tk window names of the open display managers.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="get_more_default">
        get_more_default
      </term>
      <listitem>
        <para>
          Returns the current default input value.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="grid2model_lu">
        grid2model_lu gx gy
      </term>
      <listitem>
        <para>
          Given a point in grid coordinates (local units), convert it to
          model coordinates (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="grid2view_lu">
        grid2view_lu gx gy
      </term>
      <listitem>
        <para>
          Given a point in grid coordinates (local units), convert it to
          view coordinates (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="gui_destroy">
        gui_destroy id
      </term>
      <listitem>
        <para>
          Destroy the GUI (Graphical User Interface) represented by
          <emphasis>id</emphasis>. Note that this GUI must have been
          created with the <link linkend="gui">gui</link> command.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="hist">
        hist subcommand
      </term>
      <listitem>
        <para>
          This command is used to maintain command history.
          <emphasis>Hist</emphasis> accepts the following subcommands:
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        add command
      </term>
      <listitem>
        <para>
          This adds <emphasis>command</emphasis> to the
          <link linkend="history">history</link> list of commands
          executed during the current MGED session. If
          <emphasis>command</emphasis> is more than one word, it must be
          surrounded by braces (i.e., {make box arb8}).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        next
      </term>
      <listitem>
        <para>
          This returns the next command in the command history list.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        prev
      </term>
      <listitem>
        <para>
          This returns the previous command in the command history list.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; hist add {ae 35 25}
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Add the command <quote>ae 35 25</quote> to the history list.
  </para>
  <para>
    mged <emphasis role="strong">ae 0 90</emphasis>
  </para>
  <para>
    mged <emphasis role="strong">hist prev</emphasis>  – Return the previous command (i.e.,
    <emphasis role="strong">ae 0 90</emphasis>).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="make_name">
        make_name template
        make_name -s [num]
      </term>
      <listitem>
        <para>
          This command generates an object name that does not occur in
          the database. The name, which is generated in the format
          specified by <emphasis>template</emphasis>, contains an
          integer count. By default, this count appears at the end of
          the generated name, but if <emphasis>template</emphasis>
          contains the  @  character, then the count appears at that
          position in the name.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; make_name wheel
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Returns, say <quote>wheel5.</quote>
  </para>
  <para>
 mged <emphasis role="strong">make_name
    tree@trunk</emphasis>  – Returns <quote>tree@trunk.</quote> The two-character
    string  @@  is interpreted as the literal  @ , and thus is ignored
    for the purposes of positioning the name count. The integer counter
    starts at 0, and, by default, it is incremented each time
    <emphasis>make_name</emphasis> is executed. The
    <emphasis>-s</emphasis> option resets this counter. If the argument
    <emphasis>num</emphasis> is specified, the counter is set to this
    value. Otherwise, it is set to 0.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="mged_update">
        mged_update non_blocking
      </term>
      <listitem>
        <para>
          This command is used to handle outstanding events and to
          refresh the MGED display(s). This may be useful in certain Tcl
          scripts to maintain interactivity while waiting for user
          input. Note that if <emphasis>non_blocking</emphasis> is
          negative, outstanding events will not be processed. That is,
          only the MGED display(s) will be refreshed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mged_update 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Update the MGED display, blocking (i.e., handle all outstanding
    events; if none, wait for one).
  </para>
  <para>
 mged <emphasis role="strong">mged_update 1</emphasis>  – Update the MGED display, nonblocking (i.e., handle
    all outstanding events; if none, return immediately).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="mmenu_get">
        mmenu_get [<emphasis>i</emphasis>]
      </term>
      <listitem>
        <para>
          This command is used to get MGED s internal menus. If
          <emphasis>i</emphasis> is not specified, return all three
          internal menus. Otherwise, return the
          <emphasis>i<superscript>th</superscript></emphasis> menu. Note
          - valid values for <emphasis>i</emphasis> are 0, 1, or 2.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; mmenu_get
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Return all internal menus.
  </para>
  <para>
 mged <emphasis role="strong">mmenu_get 2</emphasis>  – Return the internal menu number 2.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="mmenu_set">
	mmenu_set id i
      </term>
      <listitem>
        <para>
          This Tcl proc is used to set/install MGED s
          <emphasis>i</emphasis><superscript>th</superscript> internal
          menu in the Tcl/Tk button menu owned by
          <emphasis>id</emphasis>.
        </para>
        <para>
          mged&gt; mmenu_set bill 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Install MGED s 0<superscript>th</superscript> internal menu into
    <emphasis>id</emphasis> s button menu.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="model2grid_lu">
        model2grid_lu mx my mz
  	</term>
      <listitem>
        <para>
          Convert a point in model coords (local units) to a point in
          grid coords (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>

  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="model2view">
        model2view x y z
      </term>
      <listitem>
        <para>
          The <quote>model2view</quote> command converts the supplied
          point (in model coordinates) to view coordinates. View
          coordinates are the coordinates in the viewing cube with
          values between -1.0 and +1.0 being inside the viewing cube.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; model2view 10 20 30
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Display the view coordinates that correspond to the point (10 20
    30) in model space.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="model2view_lu">
        model2view_lu mx my mz
      </term>
      <listitem>
        <para>
          Convert a point in model coordinates (local units) to a point
          in view coordinates (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="output_hook">
        output_hook [<emphasis>hook_cmd</emphasis>]
      </term>
      <listitem>
        <para>
          Set up to have output from bu_log sent to
          <emphasis>hook_cmd</emphasis>. If
          <emphasis>hook_cmd</emphasis> is not specified, the output
          hook is deleted.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="put_comb">
        put_comb <emphasis>comb_name is_Region</emphasis> [<emphasis>id
        air gift los</emphasis>] color shader inherit Boolean_expr
      </term>
      <listitem>
        <para>
          The <quote>put_comb</quote> command defines the combination
          <emphasis>comb_name</emphasis>. If
          <emphasis>is_Region</emphasis> is <emphasis>Yes</emphasis>,
          then <emphasis>id, air, gift</emphasis> and
          <emphasis>los</emphasis> must be specified. If
          <emphasis>is_Region</emphasis> is <emphasis>No</emphasis>,
          then <emphasis>id, air, gift,</emphasis> and
          <emphasis>los</emphasis> must not be specified.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; put_comb not_region No \<quote>0 220 220\</quote>
          plastic No \<quote>u box\\n- ball\</quote>
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Defines a combination called <emphasis>not_region.</emphasis>
  </para>
  <para>
 mged <emphasis role="strong">put_comb my_region Yes
    1000 0 1 100 \<quote>0 220 220\</quote> plastic No \<quote>u box\\n-
    ball\</quote></emphasis>  – Defines a region called
    <emphasis>my_region.</emphasis>
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="reset_edit_solid">
    reset_edit_solid
  </para>
  <para>
    Reset the parameters for the currently edited shape (i.e. es_int) to
    the database values.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para xml:id="rset">
    <emphasis role="strong">rset</emphasis>
    [<emphasis>res_type</emphasis> [<emphasis>res</emphasis>
    [<emphasis>vals</emphasis>]]]
  </para>
  <para>
    Provides a mechanism to get/set resource values for the given
    resource types. The supported resource types are: ax (Axes), c
    (Color Schemes), g (Grid), r (Rubber Band), and var (MGED
    Variables). Basically, <emphasis>rset</emphasis> always gets a value
    unless enough information is given to set a value. For example, with
    no parameters, <emphasis>rset</emphasis> returns a list of all
    resource values for the supported resource types. If
    <emphasis>rset</emphasis> is executed with only the
    <emphasis>res_type</emphasis> given, a list of all resource values
    for the given <emphasis>res_type</emphasis> is returned.
  </para>
  <para>
    Examples:
  </para>
  <para>
    mged&gt; rset g
  </para>
  <para>
    Grid
  </para>
  <para>
    draw=0  snap=0  anchor=0,0,0  rh=1  rv=1  mrh=5  mrv=5
  </para>
  <para>
 mged <emphasis role="strong">rset g snap</emphasis>  – Get value for grid snapping 0.
  </para>
  <para>
 mged <emphasis role="strong">rset g snap 1</emphasis>  – Enable snapping.
  </para>
  <para>
 mged <emphasis role="strong">rset r</emphasis>  Rubber Band  draw=0  linewidth=0  linestyle= s   pos=0,0  dim=0,0
  </para>
  <para>
 mged <emphasis role="strong">rset r draw</emphasis>  – Get value for <quote>Rubber Band s</quote> draw
    variable 0.
  </para>
  <para>
    mged <emphasis role="strong">rset r draw 1</emphasis>  – Draw rubber band.
  </para>
  <para>
    mged <emphasis role="strong">rset ax</emphasis>
  </para>
  <para>
    Axes  model_draw=0  model_size=500  model_linewidth=1  model_pos=0,0,0  view_draw=0  view_size=500  view_linewidth=1  view_pos=0,0  edit_draw=0  edit_size1=500  edit_size2=500  edit_linewidth1=1  edit_linewidth2=1.
  </para>
  <para>
    –Prints the values of the axes
  </para>
  <para>
    mged <emphasis role="strong">rset ax model_size</emphasis>  – Get size of model axes 500.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="set_more_default">
        set_more_default more_default
      </term>
      <listitem>
        <para>
          Set the current default input value.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="share">
        share [-u] resource dm1 [dm2]
      </term>
      <listitem>
        <para>
          The <quote>share</quote> command provides a mechanism to share
          (or unshare with the <emphasis role="strong"> u</emphasis>
          option) resources among display managers. When a resource is
          shared between two or more display managers, any change to
          that resource is seen only in the sharing display managers.
          The supported resource types are: ad (ADC), ax (Axes), c
          (Color Schemes), d (Display Lists), g (Grid), m (Menu), r
          (Rubber Band), vi (View), and var (MGED Variables).
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; share g .dm_ogl0 .dm_ogl1
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – .dm_ogl0 shares its grid resource with .dm_ogl1.
  </para>
  <para>
 mged <emphasis role="strong">share -u g
    .dm_ogl1</emphasis>  – .dm_ogl1 acquires a private copy of the grid
    resource.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="solids_on_ray">
        solids_on_ray h v
      </term>
      <listitem>
        <para>
          List all displayed shapes along a ray.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="stuff_str">
        stuff_str string
      </term>
      <listitem>
        <para>
          Sends a string to MGED s tty, while leaving the current
          command line alone. This is used to relay the activity of
          Tcl/Tk command windows to MGED s tty. If MGED is no longer
          attached to a tty, nothing happens.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="svb">
        svb
      </term>
      <listitem>
        <para>
          The <quote>svb</quote> command sets the view reference base
          variables, which are used internally by the
          <link linkend="knob">knob</link> command to implement absolute
          rotation, translation, and scale.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; svb
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the view reference base variables with respect to the current
    view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="tie">
        tie [[<emphasis>-u</emphasis>]
        <emphasis>command_window</emphasis>
        [<emphasis>display_window</emphasis>]]
      </term>
      <listitem>
        <para>
          The <quote>tie</quote> command is used to create (or
          untie/destroy with the <emphasis role="strong">-u</emphasis>
          option) an association between a command window and a display
          window. When there exists such an association, all commands
          entered from the command window will be directed at the
          associated display window. The
          <emphasis>command_window</emphasis> can be specified with MGED
          to refer to the tty from which MGED was started or an id
          associated with a Tcl/Tk interface window
          <link linkend="gui">created with
          <emphasis>gui</emphasis></link>. The
          <emphasis>display_window</emphasis> is specified with its
          Tcl/Tk pathname. If no parameters are given, a listing of the
          current
          <emphasis>command_window</emphasis>/<emphasis>display_window</emphasis>
          pairs is returned. If only the
          <emphasis>command_window</emphasis> is given, the
          <emphasis>display_window</emphasis> associated with
          <emphasis>command_window</emphasis> is returned. If both
          parameters are given, the
          <emphasis>command_window</emphasis>/<emphasis>display_window</emphasis>
          association is created.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; tie my_id .my_display_window
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Create the association between my_id and .my_display_window.
  </para>
  <para>
    mged <emphasis role="strong">tie my_id</emphasis>  .my_display_window  – Returns the display window associated with my_id.
  </para>
  <para>
 mged <emphasis role="strong">tie</emphasis>  {my_id .my_window} {mged {}}  – List all of the command_window/display_window pairs.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="view2grid_lu">
        view2grid_lu vx vy vz
      </term>
      <listitem>
        <para>
          Given a point in view coordinates (local units), converts to
          grid coordinates (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="view2model">
        view2model x y z
      </term>
      <listitem>
        <para>
          The <quote>view2model</quote> command converts the specified
          point (<emphasis>x y z</emphasis>) in view coordinates to
          model coordinates (mm). The part of view space displayed by
          MGED is the cube -1.0 &lt;= x,y,z &lt;= +1.0.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; view2model 1 1 0
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – List the model coordinates of the upper right corner of the MGED
    display (in a plane at the center of the viewing cube).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="view2model_lu">
        view2model_lu vx vy vz
      </term>
      <listitem>
        <para>
          Given a point in view coordinates (local units), converts to
          model coordinates (local units).
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="view2model_vec">
        view2model_vec vx vy vz
      </term>
      <listitem>
        <para>
          Given a vector in view coordinates, convert it to model
          coordinates.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="view_ring">
        view_ring subcommand
      </term>
      <listitem>
        <para>
          This manipulates the view ring for the current display
          manager. The view ring is a list of views owned by a display
          manager. Views can be added or removed and can also be
          traversed or queried. <emphasis>View_ring</emphasis> accepts
          the following subcommands:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    add
  </para>
  <para>
    This subcommand adds the current view to the view ring.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    next
  </para>
  <para>
    This subcommand makes the next view on the view ring the current
    view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    prev
  </para>
  <para>
    This subcommand makes the previous view on the view ring the current
    view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    toggle
  </para>
  <para>
    This subcommand toggles between the current view and the last view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    delete vid
  </para>
  <para>
    This subcommand removes/deletes the view with a view id of
    <emphasis>vid</emphasis> from the view ring. The last view cannot be
    removed (i.e., there is always one view on the view ring).
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    goto vid
  </para>
  <para>
    This subcommand makes the view with a view id of
    <emphasis>vid</emphasis> the current view.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <para>
    get [<emphasis>-a</emphasis>]
  </para>
  <para>
    Returns the id of the current view. If <emphasis>-a</emphasis> is
    specified, all view ids on the view ring are returned.
  </para>
  <para>
    Examples:
  </para>
  <para>
    mged&gt; view_ring add
  </para>
  <para>
    – Add the current view to the view ring.
  </para>
  <para>
 mged <emphasis role="strong">view_ring goto
    1</emphasis>  – Go to view 1.
  </para>
  <para>
 mged <emphasis role="strong">view_ring delete
    1</emphasis>  – Delete view 1 from the view ring.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="viewget">
        viewget parameter
      </term>
      <listitem>
        <para>
          The <quote>viewget</quote> command displays various
          <emphasis>mged</emphasis> view parameters. The possible
          parameters are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        aet – list the <link linkend="azimuth">azimuth</link>,
        <link linkend="ELEVATION">elevation</link>, and
        <link linkend="twist">twist</link> for the current viewing
        aspect.
      </para>
    </listitem>
    <listitem>
      <para>
        center – list the model coordinates (mm) of the center of the
        viewing cube.
      </para>
    </listitem>
    <listitem>
      <para>
        size – list the size (mm) of a side the current MGED display.
      </para>
    </listitem>
    <listitem>
      <para>
        eye – list the model coordinates (mm) of the current eye point.
      </para>
    </listitem>
    <listitem>
      <para>
        ypr – list the yaw, pitch, and roll angles (degrees) of the
        current viewing aspect.
      </para>
    </listitem>
    <listitem>
      <para>
        quat – list the quaternion for the current viewing aspect.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Examples:
  </para>
  <para>
    mged&gt; viewget center
  </para>
  <para>
    – List the model coordinates of the center of the MGED viewing cube.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="viewset">
        viewset &lt;<emphasis>parameter value</emphasis>&gt;
      </term>
      <listitem>
        <para>
          The <quote>viewset</quote> command sets various MGED view
          parameters. More than one parameter may be set with one
          command. The possible parameters are:
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <itemizedlist>
    <listitem>
      <para>
        aet – set the <link linkend="azimuth">azimuth</link>,
        <link linkend="ELEVATION">elevation</link>, and
        <link linkend="twist">twist</link> for the current viewing
        aspect.
      </para>
    </listitem>
    <listitem>
      <para>
        center – set the model coordinates (mm) of the center of the
        viewing cube.
      </para>
    </listitem>
    <listitem>
      <para>
        size – set the size (mm) of a side of the current MGED display.
      </para>
    </listitem>
    <listitem>
      <para>
        eye – set the model coordinates (mm) of the current eye point.
      </para>
    </listitem>
    <listitem>
      <para>
        ypr – set the yaw, pitch, and roll angles (degrees) of the
        current viewing aspect.
      </para>
    </listitem>
    <listitem>
      <para>
        quat – set the quaternion for the current viewing aspect.
      </para>
    </listitem>
  </itemizedlist>
  <variablelist>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; viewset center 1 2 3 size 100
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – Set the model coordinates of the center of the MGED viewing cube
    to the point (1 2 3) and set the size of the viewing cube to 100 mm.
  </para>
  <para>
    <emphasis role="strong"></emphasis>
  </para>
  <variablelist>
    <varlistentry>
      <term xml:id="winset">
        winset [<emphasis>pathName</emphasis>]
      </term>
      <listitem>
        <para>
          The <quote>winset</quote> command sets the current display
          manager to <emphasis>pathName</emphasis>. If
          <emphasis>pathName</emphasis> is not given, the current
          display manager is returned.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>
        Examples:
      </term>
      <listitem>
        <para>
          mged&gt; winset .my_window
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    – .my_window is now the current display manager.
  </para>
  <para>
    mged <emphasis role="strong">winset</emphasis>  – Returns the current display manager (i.e.,
    .my_window).
  </para>
  <table>
  	<title>Mged</title>
    <tgroup cols="2">
      <colspec align="left" />
      <colspec align="left" />
      <tbody>
        <row>
          <entry>
            <link linkend="MGEDUserCommands">MGED
            User Commands</link>
          </entry>
          <entry>
            <link linkend="MGEDDeveloperCommands">MGED
            Developer Commands</link>
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</section>
</section>
	<section>
  <title>MGED Tcl Variables</title>
			<section>
  <title>MGED Tcl Variables</title>
  <para>
    The use of <emphasis>pathName</emphasis> in this document refers to
    the Tcl/Tk pathname of a display manager window.
  </para>
  <para>
    <emphasis role="strong">local2base</emphasis>
  </para>
  <para>
    <emphasis>local2base</emphasis> specifies the conversion factor that
    converts local units to base units (i.e. millimeters).
  </para>
  <para>
    <emphasis role="strong">base2local</emphasis>
  </para>
  <para>
    <emphasis>base2local</emphasis> specifies the conversion factor that
    converts base units (i.e. millimeters) to local units.
  </para>
  <para>
    <emphasis role="strong">localunit</emphasis>
  </para>
  <para>
    <emphasis>localunit</emphasis> indicates the local units.
  </para>
  <para>
    <emphasis role="strong">edit_class</emphasis>
  </para>
  <para>
    <emphasis>edit_class</emphasis> specifies the class of edit that is
    in effect. For example, 0 signifies none, 1 signifies translation, 2
    signifies rotation and 3 signifies scale.
  </para>
  <para>
    <emphasis role="strong">edit_solid_flag</emphasis>
  </para>
  <para>
    <emphasis>edit_solid_flag</emphasis> specifies the type of edit to
    perform on the solid being edited.
    <emphasis>edit_solid_flag</emphasis> is linked to MGED’s internal
    variable es_edflag.
  </para>
  <para>
    <emphasis role="strong">edit_object_flag</emphasis>
  </para>
  <para>
    <emphasis>edit_object_flag</emphasis> specifies the type of edit to
    perform on the object being edited.
    <emphasis>edit_object_flag</emphasis> is linked to MGED’s internal
    variable edobj.
  </para>
  <para>
    <emphasis role="strong">edit_info</emphasis>
  </para>
  <para>
    <emphasis>edit_info</emphasis> contains detailed information about
    the current solid/object being edited.
  </para>
  <para>
    <emphasis role="strong">glob_compat_mode</emphasis>
  </para>
  <para>
    <emphasis>glob_compat_mode</emphasis> indicates whether or not to
    perform globbing against the database.
  </para>
  <para>
    <emphasis role="strong">mged_display(state)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(state)</emphasis> specifies the state of
    MGED. The state string will be one of the six values listed below.
  </para>
  <itemizedlist>
    <listitem>
      <para>
        VIEWING
      </para>
    </listitem>
    <listitem>
      <para>
        SOL PICK
      </para>
    </listitem>
    <listitem>
      <para>
        SOL EDIT
      </para>
    </listitem>
    <listitem>
      <para>
        OBJ PICK
      </para>
    </listitem>
    <listitem>
      <para>
        OBJ PATH
      </para>
    </listitem>
    <listitem>
      <para>
        OBJ EDIT
      </para>
    </listitem>
  </itemizedlist>
  <para xml:id="mged_default">
    <emphasis role="strong">mged_display(pathName,fps)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,fps)</emphasis> specifies the frames
    per second that MGED is able to display.
  </para>
  <para>
    <emphasis role="strong">mged_display(pathName,aet)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,aet)</emphasis> specifies the
    current azimuth, elevation and twist for
    <emphasis>pathName</emphasis>.
  </para>
  <para>
    <emphasis role="strong">mged_display(pathName,ang)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,ang)</emphasis> indicates the rates
    of view rotation.
  </para>
  <para>
    <emphasis role="strong">mged_display(pathName,center)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,center)</emphasis> indicates the
    view center.
  </para>
  <para>
    <emphasis role="strong">mged_display(pathName,size)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,size)</emphasis> indicates the view
    size.
  </para>
  <para>
    <emphasis role="strong">mged_display(pathName,adc)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(pathName,adc)</emphasis> specifies
    information about the angle distance cursor.
  </para>
  <para>
    <emphasis role="strong">mged_display(path_lhs)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(path_lhs)</emphasis> indicates the left hand
    side path.
  </para>
  <para>
    <emphasis role="strong">mged_display(path_rhs)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(path_rhs)</emphasis> indicates the right hand
    side path.
  </para>
  <para>
    <emphasis role="strong">mged_display(units)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(units)</emphasis> indicates the local units.
  </para>
  <para>
    <emphasis role="strong">mged_display(keypoint)</emphasis>
  </para>
  <para>
    <emphasis>mged_display(keypoint)</emphasis> indicates the point from
    which edits will take place.
  </para>
  <para>
    <emphasis role="strong">mged_default(geom)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(geom)</emphasis> is used to specify the size
    and position of the command window.
  </para>
  <para>
    <emphasis role="strong">mged_default(ggeom)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(ggeom)</emphasis> is used to specify the size
    and position of the geometry window.
  </para>
  <para>
    <emphasis role="strong">mged_default(id)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(id)</emphasis> indicates the base id to use
    if the user didn’t provide an id to the
    <link linkend="gui">gui</link> command. For
    example, if mged_default(id) is set to myId, then the following id’s
    will be created as needed: myId_0, myId_1, myId_2 etc.
  </para>
  <para>
    <emphasis role="strong">mged_default(pane)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(pane)</emphasis> indicates the initial active
    pane. The keywords, ul, ur, ll, and lr are the only acceptable
    values. The keywords refer to <quote>’upper
    left</quote><quote>,</quote><quote>upper
    right</quote><quote>,</quote><quote>lower
    left</quote><quote>and</quote><quote>lower right</quote>’
    respectively.
  </para>
  <para>
    <emphasis role="strong">mged_default(multi_pane)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(multi_pane)</emphasis> indicates whether to
    show four smaller geometry windows at the same time or to show one
    larger geometry window.
  </para>
  <para>
    <emphasis role="strong">mged_default(config)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(config)</emphasis> indicates the initial
    configuration of the MGED GUI. A value of
    <quote>’g</quote><quote>indicates that only the geometry window is
    shown,</quote><quote>c</quote><quote>indicates that only the command
    window is shown, and</quote><quote>b</quote>’ indicates that both
    the geometry and command windows are shown. Note - this initial
    configuration specification only has affect when the command window
    and geometry windows are combined together in a single top level
    window. See the
    <link linkend="mged_default">mged_default(comb)</link>
    variable.
  </para>
  <para>
    <emphasis role="strong">mged_default(display)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(display)</emphasis> indicates where to
    display the command window and other tools.
  </para>
  <para>
    <emphasis role="strong">mged_default(gdisplay)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(gdisplay)</emphasis> indicates where to
    display the geometry window if not combined with the command window.
    See the
    <link linkend="mged_default">mged_default(comb)</link>
    variable.
  </para>
  <para>
    <emphasis role="strong">mged_default(dm_type)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(dm_type)</emphasis> indicates the default
    display manager type.
  </para>
  <para>
    <emphasis role="strong">mged_default(comb)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(comb)</emphasis> indicates whether or not to
    combine the command window with the geometry window in a single top
    level window.
  </para>
  <para>
    <emphasis role="strong">mged_default(edit_style)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(edit_style)</emphasis> indicates the initial
    edit style. The edit style determines the behavior of command line
    editing. The two possible values are
    <quote>’emacs</quote><quote>and</quote><quote>vi</quote>’.
  </para>
  <para>
    <emphasis role="strong">mged_default(num_lines)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(num_lines)</emphasis> indicates the number of
    lines to use in the command window.
  </para>
  <para>
    <emphasis role="strong">mged_default(tearoff_menus)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(tearoff_menus)</emphasis> indicates whether
    or not to use tearoff menus. A tearoff menu is one that has the
    ability to become a top level window. That is, it can remain active
    and be placed anywhere on the screen.
  </para>
  <para>
    <emphasis role="strong">mged_default(html_dir)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(html_dir)</emphasis> indicates the directory
    wherein to look for the MGED manual.
  </para>
  <para>
    <emphasis role="strong">mged_default(web_browser)</emphasis>
  </para>
  <para>
    <emphasis>mged_default(web_browser)</emphasis> indicates the web
    browser to use for viewing documentation.
  </para>
</section>
</section>
<section>
  <title>MGED Environment Variable</title>
<section>
  <title>MGED Environment Variables</title>
  <para>
    <emphasis role="strong">DISPLAY</emphasis>
  </para>
  <para>
    <emphasis>DISPLAY</emphasis> specifies where to draw the windows.
  </para>
  <para>
    <emphasis role="strong">BRLCAD_ROOT</emphasis>
  </para>
  <para>
    <emphasis>BRLCAD_ROOT</emphasis> specifies where to find the root
    directory of the installed BRL-CAD package.
  </para>
  <para>
    <emphasis role="strong">EDITOR</emphasis>
  </para>
  <para>
    <emphasis>EDITOR</emphasis> specifies which external editor to use
    when one is required.
  </para>
  <para>
    <emphasis role="strong">FB_FILE</emphasis>
  </para>
  <para>
    <emphasis>FB_FILE</emphasis> specifies the framebuffer to use when
    using applications that require a framebuffer.
  </para>
  <para>
    <emphasis role="strong">TCL_LIBRARY</emphasis>
  </para>
  <para>
    <emphasis>TCL_LIBRARY</emphasis> specifies where to look for Tcl
    files.
  </para>
  <para>
    <emphasis role="strong">TK_LIBRARY</emphasis>
  </para>
  <para>
    <emphasis>TK_LIBRARY</emphasis> specifies where to look for Tk
    files.
  </para>
</section>
</section>
<section>
  <title>MGED Callback</title>
<section>
  <title>MGED Callbacks</title>
  <para>
    MGED has several callbacks that get called at strategic times in
    order to give the GUI a chance to update itself after something
    important has happened.
  </para>
  <itemizedlist>
    <listitem>
      <para>
        opendb_callback - this is called after opening a database to
        update the command windows’ title bar and to update the raytrace
        control panel.
      </para>
    </listitem>
    <listitem>
      <para xml:id="EditMenus">
        begin_edit_callback - this is called at the start of an edit to
        reconfigure the GUI’s edit menus and to initialize other parts
        of the GUI with information about the solid/object being edited.
      </para>
    </listitem>
    <listitem>
      <para>
        active_edit_callback - this is called during an active edit,
        after MGED perceives a change to the solid/object being edited,
        to continuously update GUI components during an edit.
      </para>
    </listitem>
    <listitem>
      <para>
        end_edit_callback - this is called at the end of an edit to
        reconfigure the GUI to a non-edit configuration.
      </para>
    </listitem>
    <listitem>
      <para>
        output_callback - this is called when things need to be printed
        to the command window(s) (i.e. after issuing a command).
      </para>
    </listitem>
    <listitem>
      <para>
        solid_list_callback - this is called whenever MGED’s internal
        solid list changes. Note - the solid list changes whenever
        solids/objects are
        <link linkend="e">e’d</link> up or when they
        are <link linkend="d">deleted</link> from the
        display.
      </para>
    </listitem>
  </itemizedlist>
</section>
</section>
<section>
	<title>
		Glossary
	</title>
<section>
  <title>BRL­CAD Glossary</title>
  <para>
    <emphasis role="strong">acyclic directed graph</emphasis>
  </para>
  <para>
    In an <emphasis>acyclic directed graph</emphasis>, usually called a
    <emphasis>DAG</emphasis>, each node may have arcs pointing to
    multiple <link linkend="objects">objects</link>, and each
    <link linkend="object">object</link> may be pointed to by multiple
    <link linkend="object">objects</link>. However, no node is permitted
    to refer to any of its ancestors.
  </para>
  <para>
    <emphasis role="strong">air code</emphasis>
  </para>
  <para>
    See <link linkend="space"><emphasis>space code</emphasis></link>.
  </para>
  <para xml:id="azimuth">
    <emphasis role="strong">azimuth</emphasis>
  </para>
  <para>
    Viewing aspects in
    <link linkend="mged"><emphasis>mged</emphasis></link> may be
    specified in terms of <emphasis>azimuth</emphasis>,
    <link linkend="ELEVATION">elevation</link>, and
    <link linkend="twist">twist</link>.
  </para>
  <para>
 <inlinemediaobject>
      <imageobject>
        <imagedata fileref="images/az_el_sm.gif" width="250" />
      </imageobject>
    </inlinemediaobject>
  </para>
  <para>
    <emphasis>Azimuth</emphasis> is the angle (in degrees) around the
    <emphasis>z</emphasis>-axis through which the viewing direction is
    rotated from the positive <emphasis>xz</emphasis>-quarterplane
    towards the positive <emphasis>y</emphasis>-axis. When
    <emphasis>azimuth =
    <link linkend="ELEVATION">elevation</link></emphasis> = 0, for
    instance, viewing is parallel to the <emphasis>x</emphasis>-axis in
    the direction of decreasing <emphasis>x</emphasis>. When
    <emphasis>azimuth</emphasis> = 90 degrees, viewing is parallel to
    the <emphasis>yz</emphasis>-plane along some direction of decreasing
    <emphasis>y</emphasis>: the precise direction within the
    <emphasis>yz</emphasis>-plane being specified by the
    <link linkend="ELEVATION">elevation</link>.
    <emphasis>Azimuth</emphasis> can take on any real value.
  </para>
  <para>
    <emphasis role="strong">Boolean</emphasis>
  </para>
  <para>
    The <emphasis>Boolean</emphasis> (i.e., set-theoretic) operations of
    <emphasis>union</emphasis>, <emphasis>intersection</emphasis>, and
    <emphasis>subtraction</emphasis> are used in
    constructive solid geometry to build
    complex objects from simpler ones. <inlinemediaobject>
      <imageobject>
        <imagedata fileref="images/bool.gif" width="250" />
      </imageobject>
    </inlinemediaobject>
  </para>
  <para>
    <emphasis role="strong">boundary representation</emphasis>
  </para>
  <para xml:id="BREP">
    <emphasis>Boundary representation</emphasis>
    (<emphasis>BREP</emphasis>) is one of the two major types of
    solid modeling, the other being
    constructive solid geometry.
    <emphasis>BREP</emphasis> objects are built by describing the entire
    enclosing surface of an object. This will typically involve a
    variety of surface types including, for example, planar,
    cylindrical, NURB, and spherical surfaces. While objects in a
    <emphasis>BREP</emphasis> system may be built using
    <link linkend="BOOLEAN">Boolean</link> operations, the resulting
    object is typically stored as a set of enclosing surfaces.
  </para>
  <para xml:id="COMBINATION">
    <emphasis role="strong">combination</emphasis>
  </para>
  <para>
    A <emphasis>combination</emphasis> is a formula for combining
    primitive solids and/or other
    <link linkend="objects">objects</link> into a more complex shape.
    Each <link linkend="solid">solid</link> or other
    <emphasis>combination</emphasis> directly in this formula is
    referred to as a <link linkend="member">member</link> of this
    <emphasis>combination</emphasis>. The formula may involve
    <emphasis>intersection</emphasis>, <emphasis>subtraction</emphasis>,
    and <emphasis>union</emphasis> operations, and the
    <emphasis>combination</emphasis> may be assigned a
    <link linkend="SHADER">shader</link> and a color.
    <emphasis>Combinations</emphasis> are typically built in
    <link linkend="mged"><emphasis>mged</emphasis></link> using the
    <link linkend="c">c</link>,
    <link linkend="comb">comb</link>,
    <link linkend="r">r</link>, or
    <link linkend="g">g</link>
    commands.<link linkend="REGION">Regions</link> and
    <link linkend="groups">groups</link> are special types of
    <emphasis>combinations</emphasis>.
  </para>
  <para>
    <emphasis role="strong">constructive solid geometry</emphasis>
  </para>
  <para xml:id="CSG">
    <emphasis>Constructive solid geometry</emphasis>
    (<emphasis>CSG</emphasis>), sometimes referred to as
    <emphasis>combinatorial solid geometry</emphasis>, is one of the two
    major types of solid modeling (The
    other being boundary representation). In
    a <emphasis>CSG</emphasis> system, complex objects are built by
    combining simpler objects, with primitive solids as the basic
    building blocks. The combinations make use of
    <link linkend="BOOLEAN">Boolean</link> operations, and the resulting
    objects are stored as <link linkend="trees">trees</link>.
    <emphasis>BRL­CAD</emphasis> is actually a hybrid of
    <emphasis>CSG</emphasis> and <link linkend="BREP">BREP</link>, but
    its main emphasis is on the <emphasis>CSG</emphasis> capabilities.
  </para>
  <para xml:id="DAG">
    <emphasis role="strong">DAG</emphasis>
  </para>
  <para>
    See <link linkend="DAG"><emphasis>acyclic directed
    graph</emphasis></link>.
  </para>
  <para>
    <emphasis role="strong">elevation</emphasis>
  </para>
  <para>
    Viewing aspects in
    <link linkend="mged"><emphasis>mged</emphasis></link> may be
    specified in terms of <link linkend="azimuth">azimuth</link>,
    <emphasis>elevation</emphasis>, and
    <link linkend="twist">twist</link>. <emphasis>Elevation</emphasis>
    is the angle (in degrees) through which the viewing direction is
    rotated out of the <emphasis>xy</emphasis>-plane towards the
    positive <emphasis>z</emphasis>-axis (see
    the illustration in the
    <emphasis>azimuth</emphasis> entry). When
    <emphasis>elevation</emphasis> = 90 degrees, for instance, viewing
    is parallel to the <emphasis>z</emphasis>-axis in the direction of
    decreasing <emphasis>z</emphasis>. <emphasis>Elevation</emphasis>
    can take on any real value between -90 and +90 degrees.
  </para>
  <para>
    <emphasis role="strong">group</emphasis>
  </para>
  <para xml:id="group">
    A <emphasis>group</emphasis> is a
    <link linkend="COMBINATION">combination</link> with all
    <emphasis>union</emphasis> operators. Typically a
    <emphasis>group</emphasis> is used to combine components into a
    subsystem, subsystems into a system, or systems into top-level
    collections.
  </para>
  <para>
    <emphasis role="strong">ident</emphasis>
  </para>
  <para>
    An <emphasis>ident</emphasis> (also referred to as
    <emphasis>component ID</emphasis>, <emphasis>region ID</emphasis>,
    <emphasis>item</emphasis>, or <emphasis>ID code</emphasis>) is an
    integer assigned to a <link linkend="REGION">region</link> or
    <link linkend="REGION">regions</link> to encode information used by
    application programs that process <emphasis>BRL­CAD</emphasis>
    models. <emphasis>Idents</emphasis> are assigned by the user and are
    not directly used by <emphasis>BRL­CAD</emphasis>, but are reported
    to applications that need them.
  </para>
  <para xml:id="inheritance">
    <emphasis role="strong">inheritance</emphasis>
  </para>
  <para>
    <emphasis>Inheritance</emphasis> is an attribute of
    <link linkend="COMBINATION">combinations</link> that determines how
    <link linkend="SHADER">shader</link> attributes are handled when a
    <link linkend="member">member</link> of a
    <link linkend="COMBINATION">combination</link> is itself a
    <link linkend="COMBINATION">combination</link>. If the
    <emphasis>inheritance</emphasis> flag is set to 1, then all the
    <link linkend="SHADER">shader</link> attributes of
    <link linkend="COMBINATION">combinations</link> lower in the
    <link linkend="tree">tree</link> are overridden by this
    <link linkend="COMBINATION">combination</link>.
  </para>
  <para>
    <emphasis role="strong">key solid</emphasis>
  </para>
  <para>
    The <emphasis>key solid</emphasis> is the solid used to provide a
    reference during matrix editing
    operation. Rotations, translations, and scaling in this mode are
    performed about a point on the ``key solid’’.
  </para>
  <para>
    <emphasis role="strong">LOS</emphasis>
  </para>
  <para>
    An <emphasis>LOS</emphasis> is a percentage (0 to 100) assigned to a
    <link linkend="REGION">region</link> representing the percentage of
    the <link linkend="REGION">region</link> that consists of material
    substance. It might be thought of as the
    <link linkend="REGION">region</link>’s
    <emphasis>solidity</emphasis>, and is somewhat analogous to the
    alpha channel of a computer graphics display.
    <emphasis>LOS</emphasis> is assigned by the user and is not directly
    used by <emphasis>BRL­CAD</emphasis>, but is reported to
    applications that need it.
  </para>
  <para>
    <emphasis role="strong">material code</emphasis>
  </para>
  <para xml:id="REGION">
    A <link linkend="REGION">region</link> may be assigned an integer
    <emphasis>material code</emphasis> by the user. This is intended to
    identify the material used to build the part. <emphasis>Material
    codes</emphasis> are assigned by the user and are not directly used
    by <emphasis>BRL­CAD</emphasis>, but are reported to applications
    that need them.
  </para>
  <para>
    <emphasis role="strong">matrix edit mode</emphasis>
  </para>
  <para>
    This is the mode that
    <link linkend="mged"><emphasis>mged</emphasis></link> is in while
    editing a transformation matrix in a
    <link linkend="COMBINATION">combination</link>. It is characterized
    by the illumination of one object in the graphics window, and the
    appearance of matrix editing selections in the
    <emphasis>Edit</emphasis> menu. This mode may be entered through the
    <emphasis>Matrix Selection..</emphasis> entry of the
    <emphasis>Edit</emphasis> menu, or via the
    <link linkend="oed"><emphasis>oed</emphasis></link>
    command. Editing operations such as rotation, translation, and scale
    may be performed in this mode and will affect all objects below the
    edited matrix in the <link linkend="tree">tree</link>. These
    operations will be applied in reference to a
    key solid that is a leaf of that
    tree.
  </para>
  <para xml:id="member">
    <emphasis role="strong" xml:id="members">member</emphasis>
  </para>
  <para>
    An <link linkend="object">object</link> is referred to as a
    <emphasis>member</emphasis> of a
    <link linkend="COMBINATION">combination</link> if it is directly
    referenced by the <link linkend="COMBINATION">combination</link>.
  </para>
  <para xml:id="mged">
    <emphasis role="strong">MGED</emphasis>
  </para>
  <para>
    <emphasis>Mged</emphasis> is the interactive graphical editor for
    <emphasis>BRL­CAD</emphasis>. It may be used to view, modify, and
    create models. Normally, the user views the model in a wireframe
    display in <emphasis>mged</emphasis>.
  </para>
  <para>
    <emphasis role="strong">model coordinates</emphasis>
  </para>
  <para>
    In a <emphasis>BRL­CAD</emphasis> model, the <emphasis>model
    coordinates</emphasis> are the actual coordinates of points on the
    model in <emphasis>real</emphasis> units. The user may position a
    model at any desired location in <emphasis>model
    coordinates</emphasis>. By convention in
    <emphasis>BRL­CAD</emphasis>, a model is oriented so that the
    positive <emphasis>x</emphasis>-axis points from the model’s back to
    its front, the positive <emphasis>y</emphasis>-axis points from the
    model’s right to its left, and, since the coordinate system is right
    handed, the positive <emphasis>z</emphasis>-axis points from the
    model’s bottom to its top. All <emphasis>BRL­CAD</emphasis> models
    are stored in millimeters, however the user may operate in nearly
    any units by using the
    <link linkend="mged"><emphasis>mged</emphasis></link>
    <link linkend="units">units</link> command. See also
    <link linkend="view">view coordinates</link>.
  </para>
  <para xml:id="object">
    <emphasis role="strong">object</emphasis>
  </para>
  <para xml:id="objects">
    <emphasis>Objects</emphasis> are the fundamental entities
    constituting a <emphasis>BRL­CAD</emphasis> model. They are the
    nodes of the <link linkend="DAG">DAG</link> into which the database
    is organized. The terminal nodes, or leaves, of the
    <link linkend="DAG">DAG</link> are the
    <link linkend="solid">solids</link> and the internal nodes are the
    <link linkend="COMBINATION">combinations</link>, of which two types
    are <link linkend="REGION">regions</link> and
    <link linkend="groups">groups</link>.
  </para>
  <para xml:id="path">
    <emphasis role="strong">path</emphasis>
  </para>
  <para>
    A <emphasis>path</emphasis> to an
    <link linkend="object">object</link> in <emphasis>BRL­CAD</emphasis>
    is a list of <link linkend="COMBINATION">combinations</link> that
    ends at the desired <link linkend="object">object</link>.
    <emphasis>Paths</emphasis> are specified with a syntax similar to
    the one used in UNIX file systems (with ``/’’ characters as
    separators). Each element of the <emphasis>path</emphasis> must be a
    <link linkend="member">member</link> of the previous element. For
    example, ``left_arm/arm/hand/thumb’’ might be a
    <emphasis>path</emphasis> from ``left_arm’<quote>to ``thumb</quote>’
    in some <emphasis>BRL­CAD</emphasis> database indicating that
    ``arm’’ is a <link linkend="member">member</link> of
    ``left_arm’<quote>, ``hand</quote>’ is a
    <link linkend="member">member</link> of ``arm’<quote>, and
    ``thumb</quote>’ is a <link linkend="member">member</link> of
    ``hand’’. The <emphasis>path</emphasis> information implies a set of
    transformation matrices (each <link linkend="member">member</link>
    of a <link linkend="COMBINATION">combination</link> has a
    transformation matrix associated with it). As a
    <emphasis>path</emphasis> is traversed, the effects of encountered
    transformation matrices are accumulated, and typically applied to
    the <link linkend="object">object</link> at the end of the
    <emphasis>path</emphasis>. This means that the ``thumb’’ referred to
    by the <emphasis>path</emphasis> ``left_arm/arm/hand/thumb’<quote>is
    likely to be in a different location and orientation (and possibly
    scaled) from the ``thumb</quote><quote>referred to by
    ``right_arm/arm/hand/thumb</quote>’.
  </para>
  <para xml:id="primitive">
    <emphasis role="strong">primitive solid</emphasis>
  </para>
  <para>
    <emphasis>Primitive solids</emphasis> are the basic building blocks
    of <link linkend="CSG">CSG</link>solid
    modeling systems. The <emphasis>primitive solids</emphasis>
    available in <emphasis>BRL­CAD</emphasis> include:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        <link linkend="ARB">ARB</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="ARBN">ARBN</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="arbitrary_faceted_solid">arbitrary faceted
        solid</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="extruded_bitmap">extruded bitmap</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="right_hyperbolic_cylinder">Right Hyperbolic
        Cylinder</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="elliptical_hyperboloid">Elliptical
        Hyperboloid</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="elliptical_paraboloid">Elliptical
        Paraboloid</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="right_parabolic_cylinder">Right Parabolic
        Cylinder</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="elliptical_torus">Elliptical Torus</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="ellipsoid">Ellipsoid</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="half_space">Half Space</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="height_field">Height Field</link>
      </para>
    </listitem>
    <listitem>
      <para>
        Non­Manifold
        Geometry
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="particle">Particle</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="polysolid">Polysolid</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="spline">Spline</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="TGC">Truncated General
        Cone</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="torus">Torus</link>
      </para>
    </listitem>
    <listitem>
      <para>
        <link linkend="vol">VOL</link>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    <inlinemediaobject>
      <imageobject>
        <imagedata fileref="images/prims.gif" width="250" />
      </imageobject>
    </inlinemediaobject>
  </para>
  <para>
    <emphasis role="strong">solid edit mode</emphasis>
  </para>
  <para>
    This is the mode that
    <link linkend="mged"><emphasis>mged</emphasis></link> is in while
    editing an individual solid. It is characterized by the illumination
    of one solid in the graphics window, and the appearance of solid
    editing selections in the <emphasis>Edit</emphasis> menu. This mode
    may be entered through the <emphasis>Solid Selection..</emphasis>
    entry of the <emphasis>Edit</emphasis> menu, or via the
    <link linkend="sed"><emphasis>sed</emphasis></link>
    command. Solid specific editing may be performed in this mode, as
    well as rotations, translations, and scaling.
  </para>
  <para>
    <emphasis role="strong">quaternion</emphasis>
  </para>
  <para>
    Internal to <link linkend="mged"><emphasis>mged</emphasis></link>,
    the viewing orientation is handled in terms of
    <emphasis>quaternions</emphasis>. A <emphasis>quaternion</emphasis>
    is a method for representing an arbitrary rotation without the
    ambiguity at the poles that accompanies some methods. A
    <emphasis>quaternion</emphasis> may be thought of as a vector
    (defining an axis of rotation), and a rotation about that axis.
  </para>
  <para xml:id="raytrace">
    <emphasis role="strong">ray trace</emphasis>
  </para>
  <para>
    <emphasis>Ray tracing</emphasis> is the main method for
    interrogating <emphasis>BRL­CAD</emphasis> models. It is performed
    by selecting a start point and a ray direction, then calculating the
    intersections of the resulting ray with all the
    primitive solids it encounters. The
    segments of the ray that intersect each
    primitive solid are then combined
    according to the <link linkend="BOOLEAN">Boolean</link> expressions
    for each <link linkend="REGION">region</link> that refers to those
    <link linkend="solid">solids</link>. The result is a series of
    intervals on the ray, called <emphasis>partitions</emphasis>, that
    intersect each <link linkend="REGION">region</link> along the ray.
    If the objective of the <emphasis>ray tracing</emphasis> effort is
    to produce an image, the calculations will typically be stopped
    after the first <link linkend="REGION">region</link> is encountered.
    The <emphasis>BRL­CAD</emphasis> <link linkend="rt">rt</link>
    program performs such <emphasis>ray tracing</emphasis>.
  </para>
  <para>
    <emphasis role="strong">region</emphasis>
  </para>
  <para>
    A <emphasis>region</emphasis> is a
    <link linkend="COMBINATION">combination</link> with special
    significance for application programs that process
    <emphasis>BRL­CAD</emphasis> models. It corresponds to a physical
    entity of uniform material properties. In addition to all the
    attributes of any <link linkend="COMBINATION">combination</link>, a
    <emphasis>region</emphasis> also has an
    <link linkend="IDENT">ident</link> number, a
    <link linkend="material_code">material code</link> number, an
    <link linkend="LOS">LOS</link> number, and a
    <link linkend="space">space code</link> number. No two
    <emphasis>regions</emphasis> in a model should share any points in
    space. Such <emphasis>overlaps</emphasis> are reported, for
    instance, by the <emphasis>BRL­CAD</emphasis>
    ray tracer,
    <link linkend="rt"><emphasis>rt</emphasis></link>.
  </para>
  <para>
    <emphasis role="strong">region ID</emphasis>
  </para>
  <para>
    See <link linkend="IDENT"><emphasis>ident</emphasis></link>.
  </para>
  <para xml:id="RGB">
    <emphasis role="strong">RGB</emphasis>
  </para>
  <para>
    <emphasis>RGB</emphasis> is an abbreviation for
    <emphasis>Red</emphasis>, <emphasis>Green</emphasis>, and
    <emphasis>Blue</emphasis>. When a color is specified in
    <emphasis>BRL­CAD</emphasis>, it is in terms of its primary color
    components. Each component may be from 0 to 255. An
    <emphasis>RGB</emphasis> of ``0 0 0’<quote>is black, ``255 255
    255</quote><quote>is white, and ``0 255 0</quote>’ is green.
  </para>
  <para>
    <emphasis role="strong">rt</emphasis>
  </para>
  <para>
    <emphasis>Rt</emphasis> is one of the programs in the
    <emphasis>BRL­CAD</emphasis> package. It is used to
    <link linkend="raytrace">ray trace</link> a model and produce a
    color shaded image. <emphasis>rt</emphasis> supports transparency,
    reflection, refraction, shadows, texture mapping, light sources, and
    animation.
  </para>
  <para>
    <emphasis role="strong">shader</emphasis>
  </para>
  <para>
    A <emphasis>shader</emphasis> is a <emphasis>BRL­CAD</emphasis>
    module that performs calculations to determine the actual pixel
    color to be displayed when a ray intersects an
    <link linkend="object">object</link> during rendering by
    <link linkend="rt">rt</link>. <emphasis>Shaders</emphasis> are
    assigned to <link linkend="COMBINATION">combinations</link> by the
    user, and some allow additional parameters to adjust their
    appearance. Available <emphasis>shaders</emphasis> include
    <emphasis>mirror</emphasis>, <emphasis>glass</emphasis>,
    <emphasis>plastic</emphasis>, and <emphasis>texture</emphasis> (for
    texture mapping). Source code modules in the <emphasis>rt</emphasis>
    directory with names of the form <emphasis>sh_*.c</emphasis>
    correspond to the available shaders.
  </para>
  <para xml:id="solid">
    <emphasis role="strong">solid model</emphasis>
  </para>
  <para>
    A <emphasis>solid model</emphasis> is a description of an object or
    objects produced in such a way that any point can be classified
    without ambiguity as lying inside, outside, or on the surface of a
    modeled object. This means that a true solid model cannot have
    surfaces that do not completely enclose space, and solid objects
    that are defined in the model must not be defined based on
    irrelevant variables such as viewing direction.
  </para>
  <para xml:id="space">
    <emphasis role="strong">space code</emphasis>
  </para>
  <para>
    A <emphasis>space code</emphasis> (or <emphasis>air code</emphasis>)
    is assigned to <link linkend="REGION">regions</link> that are
    intended to represent ``empty air’’ rather than solid parts of the
    model. The code number may be used to distinguish different air
    spaces from one another. Regions representing solid parts must have
    a space code of 0. <emphasis>Space codes</emphasis> are assigned by
    the user and are not directly used by <emphasis>BRL­CAD</emphasis>,
    but are reported to applications that need them.
  </para>
  <para>
    <emphasis role="strong">tree</emphasis>
  </para>
  <para>
    A tree is a <link linkend="BOOLEAN">Boolean</link> expression
    representing some aggregation of
    <link linkend="objects">objects</link>. Strictly speaking, this is an
    abuse of the term <emphasis>tree</emphasis>: such
    <link linkend="BOOLEAN">Boolean</link> expressions are not trees in
    either the computer-science or the graph-theoretic sense, but are
    more correctly referred to as <link linkend="DAG">acyclic directed
    graphs</link>, also known as <link linkend="DAG">DAG</link>s.
  </para>
  <para xml:id="twist">
    <emphasis role="strong">twist</emphasis>
  </para>
  <para>
    Viewing aspects in
    <link linkend="mged"><emphasis>mged</emphasis></link> may be
    specified in terms of <link linkend="azimuth">azimuth</link>,
    <link linkend="ELEVATION">elevation</link>, and
    <emphasis>twist</emphasis>. <emphasis>Twist</emphasis> is the angle
    (in degrees) around the screen-<emphasis>z</emphasis>-axis through
    which the (model-) <emphasis>z</emphasis>-axis is rotated from the
    positive screen-<emphasis>y</emphasis>-axis towards the positive
    screen-<emphasis>x</emphasis>-axis. (see the
    illustration in the <emphasis>azimuth</emphasis> entry). When
    <emphasis>twist</emphasis> = 0, for instance, the positive
    <emphasis>z</emphasis>-axis is some nonnegative scalar multiple of
    the positive screen-<emphasis>y</emphasis>-axis.
  </para>
  <para>
    <emphasis role="strong">view coordinates</emphasis>
  </para>
  <para>
    When an <link linkend="object">object</link> is displayed in the
    <link linkend="mged"><emphasis>mged</emphasis></link> graphics
    window, it is converted from
    <link linkend="model">model</link> to
    <emphasis>view</emphasis> coordinates. The <emphasis>view
    coordinate</emphasis> system has its origin at the center of the
    viewing cube (the center of the
    <link linkend="mged"><emphasis>mged</emphasis></link> display). The
    <emphasis>view</emphasis> <emphasis>x</emphasis>-axis always points
    to the right, the <emphasis>view</emphasis>
    <emphasis>y</emphasis>-axis always points toward the top of the
    display, and the <emphasis>view</emphasis>
    <emphasis>z</emphasis>-axis always points out of the screen towards
    the viewer. The visible portion of view space (known as the
    ``viewing cube’’) extends from -1.0 to +1.0 along each of the
    <emphasis>view</emphasis> axes.
  </para>
</section>
</section>

<section>
	<title>BRL-CAD Solid</title>
<para><emphasis role="bold"> ARB</emphasis>
</para>
<para>
The ARB is a planar-faced convex solid with between four and eight unique vertices. The specific type of ARB is often referred to by adding the number of unique vertices to the word ARB. For example, an ARB8 is the usual solid block, an ARB4 is a tetrahedron, and an ARB6 may be a wedge shape.
</para>
<para xml:id="arbitrary_faceted_solid"><emphasis role="bold">
arbitrary faceted solid
</emphasis>
</para>

<para>
The arbitrary faceted solid (Also referred to as ARS) is a planar-faced solid defined by any number of curves (more precisely closed polylines). These curves are typically planar waterline or station curves, but they are not restricted to being planar. Each curve in a particular ARS must have the same number of points. The first and last curves are normally degenerate, each consisting of repetitions of a single point to make up the correct number of points for a curve. Faces are built by connecting corresponding points on adjacent curves. Since the curves are assumed to be closed, the last point on any curve is implicitly connected to the first point on the same curve
</para>
<para xml:id="ARBN"><emphasis role="bold">
ARBN
</emphasis>
</para>
<para>
The ARBN is a planar faced convex solid defined by any number of bounding planes.
</para>
<para xml:id="BOT"><emphasis role="bold">
BOT
</emphasis>
</para>
<para>
The BOT solid is a collection of triangular facets. It may represent a zero thickness surface, a finite thickness plate, or a solid volume bounded by the triangles. The surface normal for each triangle may be unoriented, oriented according to the right-hand rule, or oriented according to the left-hand rule.
</para>
<para xml:id="ellipsoid"><emphasis role="bold">
ellipsoid
</emphasis>
</para>
<para>
The ellipsoid is a solid defined by three mutually perpendicular semi­axes. When the axes are of unequal length, an ellipsoid is generated. When the axes are all the same length, a sphere is generated.
</para>
<para xml:id="elliptical_hyperboloid"><emphasis role="bold">
elliptical hyperboloid
</emphasis>
</para>
<para>
The elliptical hyperboloid (also referred to as EHY) is a solid with an elliptical base the remainder of the surface of which is defined by hyperbolas that run from any point on the ellipse through a common vertex at a specified distance from the ellipse and back to the ellipse at the point diametrically opposite the starting point. Further control of the surface may be obtained by specifying the distance from the hyperbolas to the vertex of the asymptotes.
</para>
<para xml:id="elliptical_paraboloid"><emphasis role="bold">
elliptical paraboloid
</emphasis>
</para>
<para>
The elliptical paraboloid (also referred to as EPA) is a solid with an elliptical base the remainder of the surface of which is defined by parabolas that run from any point on the ellipse through a common vertex at a specified distance from the ellipse and back to the ellipse at a point diametrically opposite the starting point.
</para>
<para xml:id="elliptical_torus"><emphasis role="bold">
elliptical torus
</emphasis>
</para>
<para>
The Elliptical Torus (Also referred to as ETO) is defined by sweeping an ellipse through a circular path. The plane of the ellipse and the plane of the circular path are mutually perpendicular.
</para>
<para xml:id="extruded_bitmap"><emphasis role="bold">
extruded bitmap
</emphasis>
</para>
<para>
The extruded bitmap (also referred to as EBM) is a solid based on a greyscale bitmap. The bitmap is an array of unsigned char values, see bw(5), and is extruded by some distance. The EBM solid requires the dimensions of the bitmap file (height and width in bytes), an extrusion length, and a transformation matrix to position the EBM. Each byte in the bitmap file is treated as the base of a cell that is extruded by the specified extrusion length. If the value of the byte is non­zero, then that cell is considered solid.
</para>
<para xml:id="half_space"><emphasis role="bold">
half space
</emphasis>
</para>
<para>
A half space is the portion of space on one side of a plane. It is represented by its boundary (the plane) and its outward-pointing normal vector.
</para>
<para xml:id="height_field"><emphasis role="bold">
height field
</emphasis>
</para>
<para>
The height field is a solid defined by a series of height measurements on a regular grid. In addition to a file of height measurements, this solid also requires a location vector, width and height direction vectors, and some scale factors.
</para>
<para xml:id="manifold_geometry"><emphasis role="bold">
n­manifold geometry
</emphasis>
</para>
<para>
(also referred to as NMG)
The n­manifold geometry solid, sometimes known as a non­manifold geometry, is based on the description by Kevin Weiler in ``The Radial Edge Structure: A Topological Representation for Non­Manifold Geometric Modeling'' from Geometric Modeling for CAD Applications (Springer Verlag, 1987). A useful reference for the NMG solid is Combinatorial Solid Geometry, Boundary Representations, and Non_Manifold Geometry.
</para>
<para xml:id="particle"><emphasis role="bold">
particle
</emphasis>
</para>
<para>
The particle solid is a lozenge-shaped object defined by a vertex, a height vector and radii at both ends. The body of the particle is either a cylinder or a truncated cone, depending on the values of the radii. Each end of the particle is a hemisphere of the specified radius.
</para>
<para xml:id="pipe"><emphasis role="bold">
pipe
</emphasis>
</para>
<para>
The pipe solid is defined by a sequence of control points, each with values for inner radius, outer radius, and bend radius. The actual pipe starts at the first control point and ends at the last control point. The intervening control points are replaced by circular bends with the specified bend radius, so the pipe is not likely to actually pass through these points. An inner radius of zero indicates a solid pipe or wire.
</para>
<para xml:id="polysolid"><emphasis role="bold">
polysolid
</emphasis></para>
<para>
The polysolid is defined by a set of planar polygons. Each polygon may have up to 5 unique vertices. The vertices of each polygon must be in counter­clockwise order when viewed from outside the solid. The set of polygons must completely enclose the interior of the polysolid.
</para>
<para xml:id="right_hyperbolic_cylinder"><emphasis role="bold">
right hyperbolic cylinder</emphasis>
</para>
<para>
The right hyperbolic cylinder (also referred to as RHC) is a solid built by extruding a truncated hyperbola through a height vector.
</para>
<para xml:id="right_parabolic_cylinder"><emphasis role="bold">
right parabolic cylinder
</emphasis></para>
<para>
The right parabolic cylinder (also referred to as RPC) is a solid built by extruding a truncated parabola through a height vector.
</para>
<para xml:id="spline"><emphasis role="bold">
spline
</emphasis></para>
<para>
The spline solid is defined by a set of non­uniform rational B­spline surfaces (NURBs). There are no trimming curves in the spline solid, so each NURB surface must exactly adjoin its neighbor so that the interior of the spline solid is completely enclosed and no parts of any NURB surface are dangling outside the solid.
</para>
<para xml:id="torus"><emphasis role="bold">
torus
</emphasis></para>
<para>
The torus is defined by sweeping one circle through a larger circular path. The planes of the circles are mutually perpendicular.
</para>
<para xml:id="truncated_general_cone"><emphasis role="bold">
truncated general cone
(also referred to as TGC)
</emphasis>
</para>
<para>
The TGC solid is a truncated cone with elliptical (or circular) base and top. The base and top must be parallel, but the height vector connecting the center of the base with the center of the top does not need to be perpendicular to them.
</para>
<para xml:id="vol"><emphasis role="bold">
vol
</emphasis></para>
<para>
The vol solid is defined by a 3-dimensional array of unsigned char values. The solid requires a file of these values, the extent of the file (in bytes) in each dimension, the size of each cell, and high and low thresholds. Any value in the file that is between the thresholds (inclusive) represents a solid cell.
</para>
</section>
</article>
