<article
  xmlns="http://docbook.org/ns/docbook"
  version="5.0"
  >

<!--

  This is produced from the slides in 'tcltk.ppt' on the  BRL-CAD site.

  There were 31 slides from which text and images have been extracted to make
  DocBook source file.

-->


<!-- slide 01 -->
   <info>
     <title>Introduction to Tcl/Tk</title>

     <author>
	<personname>
	  <firstname>TraNese Christy</firstname>
	</personname>
     </author>

  </info>
<!-- slide 02 -->
<section>
  <title>What is Tcl/Tk?</title>

  <itemizedlist>

    <listitem>
      <para>Tool Command Language/ToolKit.</para>
    </listitem>

    <listitem>
      <para>Tcl is an embeddable and extensible interpreted language. </para>
    </listitem>

    <listitem>
      <para>Tk is a toolkit for building user interfaces.</para>
    </listitem>

    <listitem>
      <para>Combined, they provide a programming system for
      development and use of GUI applications.</para>
    </listitem>

  </itemizedlist>
</section>
<section>
  <title>Benefits of Tcl/Tk</title>
<!-- slide 03 -->

  <itemizedlist>

    <listitem>
      <para>Ease of providing applications with a powerful scripting language</para>
    </listitem>

    <listitem>
      <para>An excellent "glue language"</para>
    </listitem>

    <listitem>
      <para>User convenience</para>
    </listitem>

    <listitem>
      <para>Portability</para>
    </listitem>

  </itemizedlist>
</section>
<!-- slide 04 -->
<section>
  <title>Tcl/Tk-Based GUI for MGED</title>
   <!-- image4.png -->
   <!-- tk-based-gui-for-mged.png -->

<figure>
<mediaobject>
  <imageobject role='html'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/tk-based-gui-for-mged.png"
    /><!-- was: width='100%' -->
  </imageobject>
  <imageobject role='fo'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/tk-based-gui-for-mged.png"
    />
  </imageobject>
</mediaobject>
</figure>

</section>
<!-- slide 05 -->
<section>
  <title>Tcl Syntax</title>
<itemizedlist>
  <listitem>
      <para>A command is a list of words.</para>
    </listitem>
    <listitem>
      <para>First word on the command line is the command name, any additional words are arguments.</para>
</listitem>
</itemizedlist>
<programlisting>
      -- command [arg1 ... argn
      mged&gt; puts "Hello World"
      Hello World
    </programlisting>
       <itemizedlist>
 <listitem>
  <para>
      Words can be grouped with double quotes (" ") or curly braces ({}).
    </para>
  </listitem>
    <listitem>
      <para>Commands are terminated with a newline or semicolon.</para>
    </listitem>
  </itemizedlist>
</section>
<!-- slide 06 -->
<section>
  <title>Variables</title>
<itemizedlist>
  <listitem>
      <para>Variable names are case-sensitive.</para>
    </listitem>
    <listitem>
      <para>Declarations are not necessary.</para>
    </listitem>
    <listitem>
      <para>set <emphasis>varName [value]</emphasis></para>
</listitem>
<listitem>
      <para>Assigns <emphasis>value</emphasis> to the variable <emphasis>varName</emphasis>.</para>
</listitem>
</itemizedlist>
<programlisting>
      mged&gt; set day Friday

      Friday
      mged&gt; set day
      Friday

      mged&gt; set day 25

      25
    </programlisting>
</section>

<!-- slide 07 -->
<section>
  <title>Lists</title>
<itemizedlist>
  <listitem>
      <para>An ordered set of strings</para>
    </listitem>
    <listitem>
      <para>Specified with curly braces</para>
</listitem>
</itemizedlist>
<programlisting>
      mged&gt; set colors {red yellow green blue}
      red yellow green blue
    </programlisting>
<itemizedlist>
    <listitem>
      <para>Sometimes created with "list" command</para>
</listitem>
</itemizedlist>
<programlisting>
      mged&gt; set colors [list red yellow green blue]
      red yellow green blue
    </programlisting>
<itemizedlist>
    <listitem>
      <para>Can extract elements from the list using the "lindex" command (indices start at zero)</para>
    </listitem>
  </itemizedlist>
  <programlisting>
      mged&gt; lindex {red yellow green blue} 2
     green
   </programlisting>
</section>
<section>
  <title>Arrays</title>

<!-- slide 08 -->
<itemizedlist>
  <listitem>
      <para>Uses associative arrays</para>
      <itemizedlist>
        <listitem>
      <para>-- Strings used to index the array elements</para>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<programlisting>
      mged&gt; set profit(January) 1500
      1500
    </programlisting>
    <programlisting>
      mged&gt; set profit(February) -200
      -200
    </programlisting>
    <programlisting>
    mged&gt; set profit(January)
    1500
  </programlisting>
</section>
<section>
  <title>Special Characters</title>
<!-- slide 09 -->
<itemizedlist>
  <listitem>
      <para>Dollar sign $</para>

      <para>--Substitutes the value of the variable</para>
</listitem>
<listitem>
      <para>Square brackets [ ]</para>
      <para>-- Replaces contents with the result of evaluating the command</para>
    </listitem>
<listitem>
      <para>Backslash \</para>
      <para>-- Allows special characters such as newlines, [, and $ to be
      inserted without being treated specially</para>
</listitem>
<listitem>
      <para>Double quotes " "</para>

      <para>-- Allows special characters to be processed normally</para>
    </listitem>
    <listitem>
      <para>Curly braces {}</para>

      <para>-- Disables special characters</para>
    </listitem>
    <listitem>
      <para>Parentheses ()</para>

      <para>-- Delimits key values in arrays</para>
    </listitem>
    <listitem>
      <para>Hashmark #</para>

      <para>-- At the beginning of a line, signifies a comment to
      follow</para>
    </listitem>
  </itemizedlist>
</section>
<section>
<title>Special Character Examples</title>
<!-- slide 10 -->
<programlisting>
      mged&gt; set name Elvis
      Elvis
</programlisting>
<programlisting>
      mged&gt; puts "Hello name"
      Hello name
    </programlisting>
    <programlisting>
     mged&gt; puts "Hello $name"
     Hello Elvis
   </programlisting>
   <programlisting>
      mged&gt; set len [string length $name]
      5
    </programlisting>
    <itemizedlist>
      <listitem>
      <para>-- string length $name returns 5</para>
</listitem>
<listitem>
      <para>-- len gets the value 5</para>
    </listitem>
  </itemizedlist>
</section>
<!-- slide 11 -->
<section>
  <title>Special Character Examples (cont'd)</title>
<programlisting>
      mged&gt; set price 1.41
      1.41
      mged&gt; puts "Gasoline: \$ $price/gallon"
      Gasoline: $1.41/gallon
      mged&gt; puts {Gasoline: \$ $price/gallon}
      Gasoline: \$ $price/gallon
      mged&gt; set product 1; #This is a comment
      1
</programlisting>
</section>
<!-- slide 12 -->
<section>
  <title>Special Character Conflicts</title>
<itemizedlist>
  <listitem>
      <para>MGED traditional "name globbing" characters conflict with
      Tcl/Tk usage:</para>
      <itemizedlist>
<listitem>
      <para>-- MGED follows Unix shell filename patterns.</para>
</listitem>
<listitem>
      <para>-- Tcl/Tk has different interpretation of * and [].</para>
    </listitem>
  </itemizedlist>
</listitem>
<listitem>
      <para>Users can select which interpretation of special
      characters:</para>
      <itemizedlist>
<listitem>
      <para>.mgedrc: set MGED variable </para>
    </listitem>
    <listitem>
      <para>glob_compat_mode</para>
    </listitem>
    <listitem>
      <para>set glob_compat_mode 0 (for Tcl evaluation)</para>
    </listitem>
    <listitem>
      <para>set glob_compat_mode 1 (for object name matching)</para>
    </listitem>
    <listitem>
      <para>Menu: File-&gt;Preferences-&gt;Special Characters</para>
    </listitem>
  </itemizedlist>
</listitem>
</itemizedlist>
</section>
<!-- slide 13 -->
<section>
  <title>Special Character Interpretation</title>

  <itemizedlist>

    <listitem>
      <para>Special Character Interpretation</para>
    </listitem>

  </itemizedlist>

  <!-- image5.png -->
  <!-- special-character-interpretation.png -->
<figure>
<mediaobject>
  <imageobject role='html'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/special-character-interpretation.png"
    /><!-- was: width='100%' -->
  </imageobject>
  <imageobject role='fo'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/special-character-interpretation.png"
    />
  </imageobject>
</mediaobject>
</figure>

</section>

<!-- slide 14 -->
<section>
  <title>Expressions</title>
<itemizedlist>
  <listitem>
      <para>The <emphasis role="bold">expr</emphasis>command is used
      to evaluate math expressions.</para>
    </listitem>
  </itemizedlist>
<programlisting>
      mged&gt; expr 2 + 2

      4

      mged&gt; expr (3 + 2) * 4

      20

      mged&gt; in ball.s sph 0 0 0 [expr 3 + 4]
</programlisting>
      <para>-- A sphere is created with a vertex (0,0,0) and a radius
      of 7.</para>
</section>
<!-- slide 15 -->
<section>
  <title>Control Flow</title>

<programlisting>
      if {test} {body1} [else {body2}]

      mged&gt; set temp 90

      90

      mged&gt; if {$temp &gt; 75} {

      puts "It's hot"

      } else {

      puts "It's moderate"

      }

      It's hot
    </programlisting>
</section>
<section>
<title>
Control Flow (cont'd)
</title>
<!-- slide 16 -->

<programlisting>
      while {test} {body}

      mged&gt; set time 3

      3

      mged&gt; while {$time &gt; 0} {

      puts "Time is $time"

      set time [expr $time - 1]

      }
</programlisting>
      <para>Time is 3</para>

      <para>Time is 2</para>

      <para>Time is 1</para>
</section>
<section>
  <title>
    Control Flow (cont'd)
  </title>
<!-- slide 17 -->
  <programlisting>
      for{init} {test} {reinit} {body}
      for {set time 3} {$time &gt; 0} {set time [expr $time - 1]} {puts "Time is $time"}
    </programlisting>
      <para>Time is 3</para>
      <para>Time is 2</para>
      <para>Time is 1</para>
</section>
<section>
  <title>Control Flow (cont'd)</title>
<!-- slide 18 -->
<programlisting>
      foreach
      varList list{body}
      mged&gt;
      foreach fruit {apples pears peaches} {
      puts "I like $fruit"}
</programlisting>
      <para>I like apples</para>
      <para>I like pears</para>
      <para>I like peaches</para>
      <programlisting>
      mged&gt;
      foreach {key val} {sky blue grass green snow white} {
      puts "The $key is $val"
      }
    </programlisting>
      <para>The sky is blue</para>
      <para>The grass is green</para>
      <para>The snow is white</para>

</section>
<section>
  <title>MGED Commands</title>
<!-- slide 19 -->

<programlisting>
     get
     obj[attr]
     Returns a list of the object's attributes. If attr is specified,
      only the value for that attribute is returned.
      mged&gt;
      get foo.r
      comb region yes id 200 los 100 GIFTmater 2 rgb {100 100 100}
      mged&gt;
      get foo.r rgb
      100 100 100
      mged&gt;
      get foo.s
      ell V {0 0 0} A {4 0 0} B {0 4 0} C {0 0 4}
    </programlisting>
</section>
<section>
  <title>MGED Commands (cont'd)</title>
<!-- slide 20 -->

<itemizedlist>
  <listitem>
<para>
      adjust obj attr value[attr value]
</para>
<itemizedlist>
  <listitem>
    <para>
      Modifies the object's attribute(s) by adjusting the value of the attribute(s) to the new value(s).</para>

    </listitem>
  </itemizedlist>
</listitem>
<listitem>
  <para>
          ls[-c -r -s]
</para>
<itemizedlist>
  <listitem>
    <para>
           Without any options, lists every object in the database.
         </para>
       </listitem>
       <listitem>
        <para>
       With the "c" option, lists all nonhidden combinations;
      "r"  option lists all nonhidden regions; and
      "s" option lists all nonhidden primitives.</para>
    </listitem>
  </itemizedlist>
</listitem>
</itemizedlist>
</section>
<!-- slide 21 -->
<section>
  <title>
    MGED Examples
  </title>
<itemizedlist>
  <listitem>
    <para>
         Task: Change the color of all regions to blue.
       </para>
     </listitem>
   </itemizedlist>
<programlisting>

      mged&gt;
      foreach region [ls -r] {
      adjust $region rgb {0 0 255}
      }
    </programlisting>
    <itemizedlist>
      <listitem>
        <para>
          Task:  Print all regions with nonzero air codes.
        </para>
      </listitem>
    </itemizedlist>
      <para>Task:  Print all regions with nonzero air codes.</para>
    <programlisting>

      mged&gt;
      foreach reg [ls -r] {
      if {[get $reg air] != 0} {
      puts "$reg"
      }
      }
    </programlisting>
</section>
<!-- slide 22 -->
<section>
  <title>
    MGED Examples (cont'd)
</title>
<itemizedlist>
  <listitem>
      <para>Task: Print all objects with the inherit flag set.</para>
    </listitem>
  </itemizedlist>
  <programlisting>

      mged&gt; foreach obj [ls -c] {
      if {[get $obj inherit] == "yes"} {
      puts "$obj"
      }
      }
    </programlisting>
    </section>
<section>
  <title>
    Procedures
  </title>
<!-- slide 23 -->
<itemizedlist>
  <listitem>
      <para>User-Defined commands</para>
    </listitem>
  <listitem>
      <para>proc</para>
    </listitem>
  </itemizedlist>
<programlisting>
      procName{args} {body}
      mged&gt;
      proc add {x y} {
      set answer [expr $x + $y]
      return $answer
      }
      mged&gt;add 123 456
      579
</programlisting>
<itemizedlist>
  <listitem>
    <para>Create new MGED commands</para>
  </listitem>
  <listitem>
      <para>Save in .mgedrc</para>
    </listitem>
  </itemizedlist>
</section>
<section>
  <title>
    Procedure Example
  </title>
<!-- slide 24 -->
<itemizedlist>
  <listitem>
      <para>Procedure that generates a PART that encompasses two specified SPHs</para>
    </listitem>
  </itemizedlist>
<programlisting>

    proc sph-part {sph1 sph2 newname} {
    foreach {vx1 vy1 vz1} [lindex [get $sph1 V] 0] {}
    foreach {vx2 vy2 vz2} [lindex [get $sph2 V] 0] {}
    foreach {ax1 ay1 az1} [lindex [get $sph1 A] 0] {}
    foreach {ax2 ay2 az2} [lindex [get $sph2 A] 0] {}
    set radius1 [expr sqrt($ax1*$ax1 + $ay1*$ay1 + $az1*$az1)]
    set radius2 [expr sqrt($ax2*$ax2 + $ay2*$ay2 + $az2*$az2)]
    set hx [expr $vx2-$vx1]
    set hy [expr $vy2-$vy1]
    set hz [expr $vz2-$vz1]
    in $newname part $vx1 $vy1 $vz1 $hx $hy $hz $radius1 $radius2
    }
  </programlisting>
</section>
<section>
  <title>Procedure Example (cont'd)</title>
<!-- slide 25 -->

<programlisting>
 mged&gt;
sph-part s1.s s2.s part.s
</programlisting>
  <!-- image6.png -->
  <!-- copy-sph-part-left.png -->
<figure>
<mediaobject>
  <imageobject role='html'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/copy-sph-part-left.png"
    /><!-- was: width='100%' -->
  </imageobject>
  <imageobject role='fo'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/copy-sph-part-left.png"
    />
  </imageobject>
</mediaobject>
</figure>

  <!-- image7.png -->
  <!-- copy-sph-part-right.png -->
<figure>
<mediaobject>
  <imageobject role='html'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/copy-sph-part-right.png"
    /><!-- was: width='100%' -->
  </imageobject>
  <imageobject role='fo'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/copy-sph-part-right.png"
    />
  </imageobject>
</mediaobject>
</figure>

</section>
 <section>
   <title>
    The "source" Command
     </title>
<!-- slide 26 -->

<itemizedlist>
  <listitem>
      <para>source <emphasis>fileName</emphasis></para>
      <itemizedlist>
        <listitem>
	<para>Reads and executes the file as a Tcl script.</para>
</listitem>
</itemizedlist>
</listitem>
<listitem>
      <para>Create the file with a text editor.</para>
    </listitem>
    <listitem>
      <para>Reload the file with "source" changes are made.</para>
    </listitem>
    <listitem>
      <para>The proc or the source command can be placed in .mgedrc.</para>
    </listitem>
</itemizedlist>
</section>
<section>
   <title> MGED Defaults </title>
<!-- slide 27 -->


  <itemizedlist>

    <listitem>
      <para>Create the default .mgedrc from inside MGED:</para>
    </listitem>

  </itemizedlist>

  <!-- image8.png -->
  <!-- mged-defaults.png -->
<figure>
<mediaobject>
  <imageobject role='html'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/mged-defaults.png"
    /><!-- was: width='100%' -->
  </imageobject>
  <imageobject role='fo'>
    <imagedata
       align='center'
       width='5.5in' scalefit='1'
       fileref="../presentations/images/mged-defaults.png"
    />
  </imageobject>
</mediaobject>
</figure>
</section>
 <section>
  <title>
MGED Customization
</title>
<!-- slide 28 -->


  <itemizedlist>

    <listitem>
      <para>Placed in the file </para>
    </listitem>
</itemizedlist>
      <para>.mgedrc</para>

      <para>In local directory or home</para>

      <para>############### MGEDRC_HEADER ###############</para>

      <para># You can modify the values below. However, if you want</para>

      <para># to add new lines, add them above the MGEDRC_HEADER.</para>

      <para># Note - it's not a good idea to set the same variables</para>

      <para># above the MGEDRC_HEADER that are set below (i.e., the last</para>

      <para># value set wins).</para>
      <para># Determines the maximum number of lines of</para>

      <para># output displayed in the command window</para>

      <para>set mged_default(max_text_lines) 1000</para>
</section>
<section>
  <title>[incr Tcl/Tk]
  </title>
<!-- slide 29 -->


  <itemizedlist>

    <listitem>
      <para>Object-oriented extension to Tcl.</para>
    </listitem>

    <listitem>
      <para>Provides support to build large programs. </para>
    </listitem>

    <listitem>
      <para>New applications in BRL-CAD are being written in [incr Tcl/Tk].</para>
    </listitem>

  </itemizedlist>
</section>
<section>
  <title>Useful References</title>
<!-- slide 30 -->

  <itemizedlist>

    <listitem>
      <para>Raines, Paul. <emphasis>Tcl/Tk Pocket Reference</emphasis>. O'Reilly &amp; Associates, Inc., Sebastopol, CA, 1998.</para>
    </listitem>

    <listitem>
      <para>Ousterhout, John K. <emphasis>Tcl and the Tk Toolkit</emphasis>. Addison-Wesley, Reading, MA, 1994.</para>
    </listitem>

    <listitem>
      <para>Welch, Brent B. <emphasis>Practical Programming in Tcl and Tk, Second Edition</emphasis>. Prentice Hall, Upper Saddle River, NJ, 1997. </para>
    </listitem>

  </itemizedlist>
</section>
</article>
