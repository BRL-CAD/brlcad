.\" Copyright (c) 1988, University of Utah
.TH RLETOABA62 1 "6 February 1988" 1
.SH NAME
rletoabA62 \- Convert from RLE Format to Abekas A62 Dump Format
.SH SYNOPSIS
.B rletoabA62
[
.B \-N
] [
.BI \-f " n"
] [
.BI \-n " n"
] [
.I infile
]
.SH DESCRIPTION
.I RletoabA62
converts a raster file in the Utah Raster Toolkit RLE format into a format
suitable for writing to an Abekas A62 dump tape and subsequent loading onto the
Abekas disk.
The generated image is 768 pixels wide and 512 pixels high.
If the input is larger, it is truncated.
If it is smaller, it is padded on the top and right with black.
The output is written to
.IR stdout ,
and should be written to a tape in 24K byte blocks with
.I dd
as in the following:
.LP
	dd of=/dev/rmt8 obs=24k
.LP
Normally, the output is processed with a simple digital filter; this feature
may be turned off with an option.
.I RletoabA62
normally writes two consecutive frames, normally starting at frame 1.
.LP
Input is taken from
.I stdin
unless a file name is given on the command line.
Only a single file may be given, and so if multiple invocations of
.I rletoabA62
are performed in a script, care must be taken to tell the program to convert
the data for the proper Abekas frame number (1-4).
Otherwise, the colors will appear wrong; they will be rotated on a vector scope
diagram.
.SH EXAMPLE
.LP
The following example converts all files ending in
.I .rle
in the current directory and writes them to a tape.
Two frames are written per image and the frame number is incremented
accordingly.
.LP
.in +1i
frame=1
.br
number=2
.br
for file in *.rle
.br
do
.br
	rletoabA62 \-f $frame $file
.br
	frame=`expr \\( \\( $frame \- 1 \\) + $number \\) % 4 + 1`
.br
done |
.br
dd of=/dev/rmt8 obs=24k
.in \-1i
.SH OPTIONS
.LP
Options are parsed by getopt(3).
.TP
.BI \-N
Do not apply digital filtering.
.TP
.BI \-f \ n
Create the first frame as Abekas frame number
.IR n ,
having a value from one to four.
Consecutive frames increment this number modulo four.
The default is one.
.TP
.BI \-n \ n
Write
.I n
frames of output, incrementing the frame number each time.
The default is two.
.SH SEE ALSO
.IR urt (1),
.IR RLE (5).
.SH AUTHOR
Bob Brown, RIACS.
.SH BUGS
This program does not preserve the aspect ratio of the input.
