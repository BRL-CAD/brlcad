.\" Copyright (c) 1986, University of Utah
.TH APPLYMAP 1 "Nov 12, 1986" 1
.UC 4 
.SH NAME
applymap \- Apply the color map in an RLE file to the pixel data
.SH SYNOPSIS
.B applymap
[
.B \-l
] [
.B \-o
.I outfile
] [ 
.I infile
] 
.SH DESCRIPTION
This program takes the color map in an
.IR RLE (5)
file and modifies the pixel values by applying the color map to them.
If there is more than one color channel in the input file,
the color map in the input file should have the same number of
channels.  If the input file has a single color channel, the
output file will have the same number of color channels as the color
map.

Each pixel in the input file is mapped as follows:  For a
multi-channel input file, a pixel in channel
.I i
is mapped as
.IR "map[i][pixel] >> 8" ,
producing a pixel in output channel
.IR i .
The right shift takes the 16 bit color map value to an 8 bit pixel
value.  For a single channel input file, to produce a pixel in output
channel
.I i
is produced from the corresponding input pixel value
as
.IR "map[i][pixel] >> 8" .
.SH OPTIONS
.TP
.B \-l
This option will cause a linear (identity) color map to be loaded into the
output file.  Otherwise, the output file will have no color map.
.TP
.I infile
The input will be read from this file, otherwise, input will
be taken from stdin.
.TP
.BI \-o " outfile"
If specified, output will be written to this file, otherwise it will
go to stdout.
.SH SEE ALSO
.IR rleldmap (1),
.IR urt (1),
.IR RLE (5).
.SH AUTHOR
Spencer W. Thomas, University of Utah
.SH BUGS
If the image data and color map channels in the input file do not conform to
the restriction stated above (N\(->N or 1\(->N) the program will most likely
core dump.
