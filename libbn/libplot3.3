.TH LIBPLOT3 3 BRL-CAD
.SH NAME
libplot3 \- graphics interface subroutines
.SH SYNOPSIS
.nf
.PP
.B "pl_space( fp, x0, y0, x1, y1 )"
.B FILE \(**fp;
.B int x0, y0, x1, y1;
.PP
.B "pl_3space( fp, x0, y0, z0, x1, y1, z1 )"
.B FILE \(**fp;
.B "int x0, y0, z0, x1, y1, z1;"
.PP
.B pl_erase( fp )
.B FILE \(**fp;
.PP
.B pl_color( fp, r, g, b )
.B FILE \(**fp;
.B int r, g, b;
.PP
.B pl_linmod( fp, s )
.B FILE \(**fp;
.B char \(**s;
.PP
.B pl_label( fp, s )
.B FILE \(**fp;
.B char \(**s;
.PP
.B "pl_line( fp, x1, y1, x2, y2 )"
.B FILE \(**fp;
.B int x1, y1, x2, y2;
.PP
.B "pl_3line( fp, x1, y1, z1, x2, y2, z2 )"
.B FILE \(**fp;
.B "int x1, y1, z1, x2, y2, z2;"
.PP
.B pl_move( fp, x, y )
.B FILE \(**fp;
.B int x, y;
.PP
.B pl_3move( fp, x, y, z )
.B FILE \(**fp;
.B int x, y, z;
.PP
.B pl_cont( fp, x, y )
.B FILE \(**fp;
.B int x, y;
.PP
.B pl_3cont( fp, x, y, z )
.B FILE \(**fp;
.B int x, y, z;
.PP
.B pl_point( fp, x, y )
.B FILE \(**fp;
.B int x, y;
.PP
.B pl_3point( fp, x, y, z )
.B FILE \(**fp;
.B int x, y, z;
.PP
.B "pl_box( fp, x1, y1, x2, y2 )"
.B FILE \(**fp;
.B int x1, y1, x2, y2;
.PP
.B "pl_3box( fp, x1, y1, z1, x2, y2, z2 )"
.B FILE \(**fp;
.B "int x1, y1, z1, x2, y2, z2;"
.PP
.B "pl_circle( fp, x, y, r )"
.B FILE \(**fp;
.B int x, y, r;
.PP
.B "pl_arc( fp, x, y, x0, y0, x1, y1 )"
.B FILE \(**fp;
.B "int x, y, x0, y0, x1, y1;"
.PP
.SH DESCRIPTION
.PP
These subroutines
generate
graphic output commands for processing
with the
.B plot(1)
plotting filters.
They are slightly more general than those in
.B libplot
as these take a file pointer.   They also include
the BRL 3-D extensions to the plot intermediate code.
.PP
.I Pl_space\^
or
.I pl_3space\^
must be used before any of the graphic primitives to declare the
amount of space necessary.
See
.IR plot3(5) .
.PP
.I Pl_box\^
or
.I pl_3box\^
draws a box between the two given opposite points.
The ''pen'' will be left at the second point.
.PP
.I Pl_circle\^
draws a circle of radius
.I r\^
with center at the point
.RI ( x ,
.IR y ).
Note that
.I circle
and
.I arc
cannot be transformed in three space if one is using a
filter to do that.
.PP
.I Pl_arc\^
draws an arc of a circle with center at the point
.RI ( x ,
.IR y )
between the points
.RI ( x0 ,
.IR y0 )
and
.RI ( x1 ,
.IR y1 ).
.PP
String arguments to
.I pl_label\^
and
.I pl_linmod\^
are terminated by nulls and do not contain new-lines.
.PP
There are also 2-D and 3_D double-precision versions, with arguments 
identical to their counterparts above.  The naming conventions are to 
change the prefix to ``pd''; examples are thus
.I pd_point\^
and
.I pd_3point\^.
Vector versions for 3_D (also double-precision) are prefixed ``pdv'', as in
.I pdv_3point\^.
.PP
See
.I plot3(5)
and
.I plot(5)
for a description
of the effect of the remaining functions.
.PP
.SH FILES
/usr/brlcad/lib/libplot3\f3.\fPa	produces output for
.IR plot\^ (1G)
filters
.br
.SH WARNINGS
In order to compile a program containing these functions
in
.I file.c\^
it is necessary to use
``cc
.I file.c\^
\-lplot3''.
.PP
.I Color\^
specification and
three-dimensional primitives
are BRL extensions to the "unix plot" language
that are not generally found on other systems.
.SH SEE ALSO
plot(1), pl-fb(1),
plot3(5), plot(5)
.SH AUTHORS
Phillip Dykstra
.SH SOURCE
SECAD/VLD Computing Consortium, Bldg 394
.br
The U. S. Army Ballistic Research Laboratory
.br
Aberdeen Proving Ground, Maryland  21005
.SH BUG REPORTS
Reports of bugs or problems should be submitted via electronic
mail to <CAD@ARL.ARMY.MIL>.
