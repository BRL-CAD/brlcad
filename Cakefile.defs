/*
 *			C A K E F I L E . D E F S
 *
 *  Main include file for compiling the BRL CAD Package with the CAKE program.
 *
 *  Author -
 *	Michael John Muuss
 *
 *  Source -
 *	SECAD/VLD Computing Consortium, Bldg 394
 *	The U. S. Army Ballistic Research Laboratory
 *	Aberdeen Proving Ground, Maryland  21005-5066
 *
 *  $Header$
 *
 *  For those unfamiliar with CAKE, one important hint:
 *  When a rule includes an ampersand ('&') before the colon,
 *  this signals a pattern that does not result in a file being
 *  created.  If the ampersand is absent, CAKE checks to make sure
 *  that the target (file) was created.
 *
 *  Note that CAKE ordinarily runs shell commands through CSH,
 *  but these Cakefiles insist on using the Bourne Shell instead,
 *  so an override is enforced here.
 *
 *  WARNING:  For proper operation on the SGI 3-D machines,
 *  all comments must start in the first column, or CPP will
 *  leave the leading tabs in place, and confuse Cake.
 */
set -S1 "/bin/sh -c"
set -S2 "/bin/sh"

/* Program to run to obtain the "sub" substitution effect */
#define SUB	cakesub

/*
 *  Manifest constants
 *
 *  Note that because the C preprocessor does not implement
 *  string comparisons, manifest constants must be given
 *  numbers.  Shades of FORTRAN.
 */
#define BSD	42
#define SYSV	5

/****************************************************************
*								*
*  System-specific definitions					*
*								*
*  Note a moderately ugly problem:  the desired value for	*
*  symbol MTYPE is often the same symbol built into CPP		*
*  to indicate the type of machine.  Therefore, in order to	*
*  keep the MTYPE string from being converted to		*
*  the string "1", the machine type symbol (eg, "vax")		*
*  must be #undef'ed.						*
*								*
****************************************************************/

#ifdef vax
/*	DEC VAX-11 systems */
#	undef	vax
#	define	MTYPE	vax
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
/*#	define	CC_DEFS	-Dvoid=int	/* Ultrix & 4.1 systems */
#	define	LIBFB_OBJS	if_remote pkg if_ptty if_adage
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY -DIF_ADAGE
/*	At USNA, add -DGM256 to LIBFB_CONFIG */
#	define	LIBRT_TIMER	timer42
#	define	MGED_OBJS	dm-mg dm-vg
#	define	MGED_CONFIG	-DDM_MG -DDM_VG
#	undef	MGED_LIBES
#	define	MGED_VERS	newvers.sh
#endif

#ifdef alliant
/*	Alliant FX/8.  Compile all programs for the CEs */
#	undef	fx
#	undef	alliant
#	define	MTYPE	fx
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
#	define	CC_OPTS	-ce
#	define	FC	/usr/alliant/fortran
#	define	LIBMALLOC	/* use vendor library */
#	define	RT_CONFIG	-lcvec
#	define	LIBRT_TIMER	timer42
#	define	MGED_VERS	newvers.sh
#endif

#ifdef gould
/*	Gould SEL, PowerNode.  Obtain more stack space with -m */
#	undef	sel
#	define	MTYPE	sel
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
#	define	CC_OPTS	-m 8
#	define	LIBRT_TIMER	timer42
#	define	MGED_VERS	newvers.sh
#endif

#if defined(sgi) && !defined(mips)
/*	Silicon Graphics 3D */
#	undef	sgi
#	define	MTYPE	3d
#	define	UNIXTYPE	SYSV
#	define	HAS_TCP	1
/*	set CC_OPTS= -Zf only if Weitek FP chip installed */
#	define	CC_OPTS	-Zf
#	define	FC	/bin/f77
#	define	RANLIB	ranlib
#	define	MGED_OBJS	dm-ir
#	define	MGED_CONFIG	-DDM_IR
/*		MGED_CONFIG:  append -DMC68010 for non-turbo 2400 */
/*		MGED_CONFIG:  append -DNOBLOCK for XNS kernels */
#	define	MGED_VERS	newvers5.sh
#	ifdef	Version3.4
#		define	LIBPKG_CONFIG	-I/usr/include/EXOS -DSGI_EXCELAN
#		define	LIBPKG_SETUP	cp /usr/lib/libsocket.a PRODUCTS
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libsocket.a; \
			AR uv ../libfb.a *; \
			rm -f *; \
			AR x /usr/lib/libgl2.a; \
			AR uv ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	REMRT_CONFIG	-I/usr/include/EXOS -DSGI_EXCELAN
#		define	MGED_LIBES	../libfb/sgiselect.o -lgl2
#	else
/*		Versions 3.5 and 3.6 */
#		define	LIBPKG_CONFIG	-I/usr/include/bsd -DBSD
#		define	LIBPKG_SETUP	cp /usr/lib/libbsd.a PRODUCTS
#		define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
			rm -f libfb.a; cd tmp; \
			AR x /usr/lib/libdbm.a; \
			AR x /usr/lib/libgl2.a; \
			rm -f select.o; \
			AR x /usr/lib/libbsd.a; \
			rm -f __.SYMDEF; \
			AR uv ../libfb.a *; \
			cd ..; rm -fr tmp)
#		define	REMRT_CONFIG	-I/usr/include/bsd -DBSD
#		define	RFBD_CONFIG	-I/usr/include/bsd -DBSD
#		define	MGED_LIBES	-lbsd -lgl2
#	endif
#	define	LIBFB_OBJS	if_remote pkg if_sgi
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SGI
#	define	LIBRT_TIMER	timerunix
#endif

#if defined(sgi) && defined(mips)
/*	Silicon Graphics 4D, which uses the MIPS chip */
#	undef	sgi
#	define	MTYPE	4d
#	define	UNIXTYPE	SYSV
#	define	HAS_TCP	1
#	define	CC	/usr/bin/cc
#	define	OPTIMIZER	-O2
#	define	RANLIB	ar ts
#	define	GETHOST	hostname
#	define	LIBPKG_CONFIG	-I/usr/include/bsd -DBSD
#	define	REMRT_CONFIG	-I/usr/include/bsd -DBSD
#	define	RFBD_CONFIG	-I/usr/include/bsd -DBSD
#	define	LIBFB_OBJS	if_remote pkg if_4d
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_4D
#	define	LIBFB_SETUP	(rm -fr tmp;  mkdir tmp; \
		rm -f libfb.a; cd tmp; \
		AR x /usr/lib/libgl.a; \
		rm -f select.o *EBEB*; \
		AR x /usr/lib/libbsd.a; \
		AR uv ../libfb.a *; \
		cd ..; rm -fr tmp)
#	define	LIBRT_TIMER	timerunix
#	define	RT_CONFIG	-lbsd
#	define	LGT_CONFIG	-G 16
#	define	MGED_OBJS	dm-4d
#	define	MGED_CONFIG	-G 16 -DDM_4D
#	define	MGED_LIBES	-lbsd -lgl
#	define	MGED_VERS	newvers5.sh
#endif

#ifdef sun
/*	Need some way to discriminate sun3 and sun4/sparc */
#	undef	sun
#	undef	sun3
#	define	MTYPE	sun3
#	define	UNIXTYPE	BSD
#	define	HAS_TCP	1
/*	Select correct floating point flag, -fswitch if unsure */
#	define	CC_OPTS	-f68881
/*#	define	CC_OPTS	-ffpa */
/*#	define	CC_OPTS	-fswitch */
#	define	LIBMALLOC	/* use vendor library */
#	define	LIBFB_OBJS	if_remote pkg if_sun
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_SUN
#	define	LIBFB_SETUP	(rm -fr /usr/tmp/libfb; \
		mkdir /usr/tmp/libfb; \
		( cd /usr/tmp/libfb; \
		cp /usr/lib/libsuntool.a libfb.a; \
		AR x /usr/lib/libsunwindow.a; \
		AR uv ../libfb.a *; \
		AR u libfb.a * ); \
		mv /usr/tmp/libfb/libfb.a . ; \
		rm -fr /usr/tmp/libfb )
#	define	LIBRT_TIMER	timer42
#	define	MGED_OBJS	dm-sun
#	define	MGED_VERS	newvers.sh
#	define	MGED_CONFIG
#	define	MGED_LIBES
#if defined(CRAY) && !defined(CRAY2)
/*	Cray X-M/P running UNICOS. */
#if defined(CRAY1)
#	undef	xmp
#	define	UNIXTYPE	SYSV
#	undef	cray
#	define	CC_DEFS	-DPARALLEL
#	define	CC_OPTS	-holevel_0
#		define	CC	/bin/ncc
#	define	REMRT_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT -DCRAY
#	define	LIBRT_TIMER	timercray
#	define	RT_CONFIG	-L/lib/multi -lu
#	define	MGED_VERS	newvers5.sh
#	define	ARCH_SUF	o
#	define	LIBTERMLIB	-lcurses
#	define	AR	../cray-ar.sh
#	define	FC	/bin/cft77
#	endif
#	define	RANLIB	echo
#	define	LIBPKG_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
#	define	LIBFB_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
#ifdef CRAY2
#if defined(CRAY2)
#	undef	cr2
#	define	UNIXTYPE	SYSV
#	define	CC_DEFS	-DPARALLEL -Dcray
#	define	FC	/bin/cft77
		AR x /usr/lib/libnet.a select.o socket.o; \
#	define	LIBPKG_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT -DCRAY
#	define	REMRT_CONFIG	-I/usr/win-include -DBSD -DSHORT_IDENT -DCRAY
#	define	LIBRT_TIMER	timercray
#	define	RT_CONFIG	-lmt
#	define	MGED_VERS	newvers5.sh
#	define	RT_LIBES	-lmt
#	define	LIBFB_SETUP	cp /usr/lib/libnet.ARCH_SUF PRODUCTS
 */
#	define	MGED_LIBES	LIBFB
#ifdef pyramid

#ifdef pyr
#	define	UNIXTYPE	BSD
#	define	MTYPE	pyr
#	define	BSD	42
#	define	HAS_TCP	1
#	define	MGED_VERS	newvers.sh
#	define	CC_DEFS	-Dvoid=int
#	define	LIBRT_TIMER	timer42
#endif

/*
 *  Prototype System V machine
 */
#	define	UNIXTYPE	SYSV
#ifdef RANDOM_SYSV
#	define	MTYPE	unknown_sysv
#	define	MGED_VERS	newvers5.sh
#	define	HAS_TCP	0
#	define	LIBRT_TIMER	timerunix
#endif

#	define	UNIXTYPE	SYSV
#ifdef VLD
/*	Not yet shaken out for use with Cake */
#	define	HAS_TCP	0
#	define	MGED_VERS	newversVLD.sh
#	define	CC_DEFS	-DVLDSYSV
#	define	LIBRT_TIMER	timer52brl
#	define	CC	/usr/5bin/cc
#	define	RANLIB	ranlib
#	define	BINDIR	/vld/bin
#	define	INCLUDE_DIR	/vld/include
#	define	LIBDIR	/vld/lib
#	define	ETCDIR	/vld/etc
#	define	MANDIR	/usr/5lib/man/local/min
****************************************************************/

#if !defined(MTYPE)
#	include "It is necessary to define the machine type as MTYPE"
#if !defined(UNIXTYPE) || ( UNIXTYPE != BSD && UNIXTYPE != SYSV )
#	include "It is necessary to define UNIXTYPE as either _BSD or _SYSV"
#endif

#endif

#if !defined(HAS_TCP)
#	include "It is necessary to define HAS_TCP as either 0 or 1"
#endif

#if !defined(CC_DEFS)
#	define	CC_DEFS	/**/
#endif

#if !defined(CC_OPTS)
#	define	CC_OPTS	/**/
#endif
#ifndef LIBFB_OBJS
#	define	LIBFB_OBJS	if_remote pkg if_ptty
#	define	LIBFB_CONFIG	-DIF_REMOTE -DIF_PTTY
#	endif
/*	LIBFB_SETUP is only to be defined when needed */
/*	LIBSYSV_SETUP is only to be defined when needed */

#ifndef RT_CONFIG
#	define	RT_CONFIG	/**/
#endif
#	define	RFBD_CONFIG
#ifndef RFBD_CONFIG
#	define	RFBD_CONFIG	/**/
#endif

/*
 *  Provide paths for programs, etc.
 *  Don't add comments after a definition, the extra tabs ruin things
 */
#ifndef	CC
#	define	CC	/bin/cc
#endif
#ifndef FC
#	define	FC	/usr/bin/f77
#endif
#	if	UNIXTYPE == BSD
#if	!defined(GETHOST)
#	ifdef BSD
#		define	GETHOST	hostname
#	else
#		define	GETHOST	uname -n
#	endif
#endif
#	if	UNIXTYPE == BSD
#if	!defined(RANLIB)
#	ifdef BSD
#		define	RANLIB	echo
/*		Can be defined in specific config as "echo" to no-op */
#		define	RANLIB	ranlib5.sh
#	endif
#endif

#if	!defined(BINDIR)
/*	Define places where users can find "installed" copies of things */
#	define	BINDIR	/usr/brlcad/bin
#	define	LIBDIR	/usr/brlcad/lib
#	define	ETCDIR	/usr/brlcad/etc
#	define	INCLUDE_DIR	/usr/include/brlcad
#endif

/* Permissions for "installed" files of various types */
#define	BINPERM	775
#define	LIBPERM	664
#define	MANPERM	664
#define	DIRPERM	775

#if	!defined(ARCH_SUF)
/*	Suffix for archives.  "a" on most UNIX machine, "o" on XMP */
#	define	ARCH_SUF	a
#endif
 * Places to find the working copies of the libraries
 *  For the purposes of Cray-2 LIB_PRE, there can only be ONE tab
#define	LIBFB	../libfb.MTYPE/libfb.ARCH_SUF
#define	LIBRT	../librt.MTYPE/librt.ARCH_SUF
#define	LIBPLOT	../libplot3.MTYPE/libplot3.ARCH_SUF
#define	LIBRLE	../librle.MTYPE/librle.ARCH_SUF
#define	LIBWDB	../libwdb.MTYPE/libwdb.ARCH_SUF
#define	LIBSPL	../libspl.MTYPE/libspl.ARCH_SUF
#define	LIBTERMIO	../libtermio.MTYPE/libtermio.ARCH_SUF
#define	LIBCURSOR	../libcursor.MTYPE/libcursor.ARCH_SUF
#define	LIBURT	../liburt.MTYPE/liburt.ARCH_SUF
#define	LIBFONT	../libfont.MTYPE/libfont.ARCH_SUF
#ifndef	LIBMALLOC
#	define	LIBMALLOC	../libmalloc.MTYPE/libmalloc.ARCH_SUF
#endif
#if HAS_TCP
#	define	LIBPKG	../libpkg.MTYPE/libpkg.ARCH_SUF
#	endif
#	define	LIBPKG	/**/
#endif

#if UNIXTYPE == BSD
#	define	LIBSYSV		../libsysv.MTYPE/libsysv.ARCH_SUF
#else
#	define	LIBSYSV		/**/
#		define	LIBPKG	/**/
#	endif
#endif

#if !defined(LIBTERMLIB)
#	define	LIBTERMLIB	-ltermlib
#endif
#	if UNIXTYPE == BSD
#if !defined(MANDIR)
#	ifdef BSD
#		define	MANDIR	/usr/man/man
#	else
#		define	MANDIR	/usr/man/u_man/man
#	endif
#endif

/*****/

/* Directory within CAD tree for header files */
#define INCDIR	../h

/* These should go after main Cakefile */
#if !defined(OPTIMIZER)
#	define	OPTIMIZER	-O
#endif
#if !defined(PROFILER)
#	define	PROFILER	/**/
#endif
#if !defined(CONFIGDEFS)
#	define	CONFIGDEFS	/**/
#endif
#if UNIXTYPE == BSD
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DBSD CC_DEFS CONFIGDEFS
#ifdef BSD
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DBSD=BSD CC_DEFS CONFIGDEFS
#else
#	define CFLAGS	CC_OPTS OPTIMIZER PROFILER -I''INCDIR -DSYSV CC_DEFS CONFIGDEFS
#endif
#define	LDFLAGS	OPTIMIZER CC_OPTS CONFIGDEFS
/* Loader flags.  Note that CC is used to do the loading */
#define	LDFLAGS	OPTIMIZER LD_OPTS CONFIGDEFS
#define FFLAGS	OPTIMIZER
/* FORTRAN flags */
#define FFLAGS	OPTIMIZER FC_OPTS

#if UNIXTYPE == BSD
#	define	LFLAGS	-hbvxac -DBSD CC_DEFS CONFIGDEFS
#ifdef BSD
#	define	LFLAGS	-abchx -DBSD=BSD CC_DEFS CONFIGDEFS
#else
#	define	LFLAGS	-DSYSV CC_DEFS CONFIGDEFS
#endif

/* Archiver */
#if !defined(AR)
#	define	AR	ar
/* CC and LINT libraries.  Everybody gets math library by default */
#define LIBES	LIBSYSV -lm
#define LLIBES	-lm
#define LIBES	LIB_PRE''LIBSYSV STANDARD_LIBES
#define LLIBES	STANDARD_LIBES

/* Program to install executables */
#define	INS	cp
 *  Usage is:   TYPESET_MAN1 *.MANSECTION TYPESET_MAN2
/* Command strings to typeset manual pages.
 *  Usage is:   TYPESET_MAN0 TYPESET_MAN1 *.MANSECTION TYPESET_MAN2
#define	TYPESET_MAN1	tbl /usr/lib/tmac/tmac.an
#define	TYPESET_MAN2	| /usr/5lib/troff -Ti300 | /usr/5bin/dimp -t | \
#define	TYPESET_MAN1	/usr/lib/tmac/tmac.an
#define	TYPESET_MAN2	/usr/5lib/troff -Ti300 | /usr/5bin/dimp -t | \
#define	TYPESET_MAN1	tbl /usr/lib/tmac/tmac.an 
			    qpr -q im231
#ifdef never
#define	TYPESET_MAN1	troff -man
#undef	TYPESET_MAN2
#define	TYPESET_MAN1	/**/
#define	TYPESET_MAN2	/**/
#endif

/*
 *  Definition of master source machine, and master distribution
 *  directory.  Please don't change these values.		
 *  When the current host is == MASTERHOST, the "make install"	
 *  rules will also handle the distribution source management.	
 *  Even if you have lots of disk space, you don't want that	
#define	MASTERHOST	brl-spark
 */
#define	MASTERHOST	spark.brl.mil
#define	DISTRIBUTION	/m/dist

/* Symbols that should be defined in individual Cakefiles */
#undef	SHFILES ??
/* PRODUCTS */
/* MANSECTION */
/* CONFIGDEFS */
/* SRCDIR */
/* AFTERINSTALL */

/* Cake-related definitions */
#define BASE_FILES	[[echo FILES|tr " " '\\\\012'|sed -e 's,.*''/,,']]
#define	SRC	[[SUB X X''SRCSUFF FILES]]
#define	OBJ	[[SUB X X''OBJSUFF BASE_FILES]]


#define	OBJSUFF .o
#define	HDR_DEP	[[cakeinclude.sh ../SRCDIR/%.c INCDIR ../SRCDIR]]
