.\" Copyright (c) 1986, University of Utah
.TH RLE_PUTROW 3 2/2/87 3
.SH NAME
rle_putrow \- Write a row (scanline) of data to an RLE file.
.SH SYNOPSIS
.B
#include <rle.h>
.sp
.B
void rle_putrow( rows, length, the_hdr );
.br
.B
rle_pixel ** rows;
.br
.B
int length;
.br
.B
rle_hdr * the_hdr;
.SH DESCRIPTION
.I Rle_putrow
is called for each output scanline when creating an
.IR RLE (5)
image.  
.I Rows
is an array of pointers to the pixel data for the color components of
the scanline.  Rows should have 
.IR the_hdr \(-> ncolors
elements.  If an alpha channel is being saved, rows[-1] should point to the
alpha channel data.
.I Length
is the number of pixels in the scanline.  
.I Rows[i]
should point to the 
.IR the_hdr \(-> xmin
element of the scanline.

The function
.IR rle_row_alloc (3)
will properly allocate memory for use by 
.IR rle_putrow .
.SH SEE ALSO
.na
.IR rle_hdr (3),
.IR rle_skiprow (3),
.IR rle_putraw (3),
.IR rle_puteof (3),
.IR rle_row_alloc (3),
.IR rle_row_free (3),
.IR librle (3),
.IR RLE (5).
.ad b
.SH AUTHOR
Spencer W. Thomas, Todd Fuqua
.SH BUGS
Having the scanline indexed from 
.I xmin
is an incredible botch.  Its origin lies in the deep dark history of
the raster toolkit, and it seems it's too late to change it now.
