.TH BRLCAD 1 BRL-CAD
./"                       B R L C A D . 1
./" BRL-CAD
./"
./" Copyright (c) 2005 United States Government as represented by
./" the U.S. Army Research Laboratory.
./"
./" This document is made available under the terms of the GNU Free
./" Documentation License or, at your option, under the terms of the
./" GNU General Public License as published by the Free Software
./" Foundation.  Permission is granted to copy, distribute and/or
./" modify this document under the terms of the GNU Free Documentation
./" License, Version 1.2 or any later version published by the Free
./" Software Foundation; with no Invariant Sections, no Front-Cover
./" Texts, and no Back-Cover Texts.  Permission is also granted to
./" redistribute this document under the terms of the GNU General
./" Public License; either version 2 of the License, or (at your
./" option) any later version.
./"
./" You should have received a copy of the GNU Free Documentation
./" License and/or the GNU General Public License along with this
./" document; see the file named COPYING for more information.
./"
./"./"./"
.SH NAME
brlcad \- BRL-CAD programs for solid modeling, raytracing,
graphics, and image processing
.SH DESCRIPTION
The BRL-CAD Distribution contains many directories of materials.
The major categories of programs are:
.TP
.B mged
A multi-device interactive editor for constructing and updating
combinatorial solid geometry (CSG)
models.
See
.IR mged (1),
and
\fIUnderstanding the Preparation and Analysis of Solid Models\fR
by Michael John Muuss (enclosed, in the ``paper'') directory.
.TP
.B librt
A library of functions suitable for interogation of a
CSG solid model, utilizing ray-tracing techniques.
See
.IR librt (3).
.TP
.B rt
A ray-tracing lighting model, for rendering pictures of
.IR mged (1)
CSG models.
See
.IR rt (1),
.IR rtray (1),
.IR rtpp (1).
.TP
.B conv
Programs to convert
.IR mged (1)
and
.IR pix (3)
format binary files to a portable ASCII form, and back again.
See
.IR asc2g (1),
.IR asc2pix (1),
.IR conv-vg2g (1),
.IR g2asc (1),
.IR pix2asc (1).
.TP
.B libpkg
A ``message-passing'' interface layered on top of TCP network links,
to ease construction of network-distributed applications.
.TP
.B libfb
A generic frame-buffer library which includes
support for a number of display devices,
as well as file, network, and debugging interfaces.
Most programs which use this library have the letters ``fb''
in their names.  To override your system default frame-buffer,
the environment variable
.B
.SM FB_FILE
can be set.  In addition, some commands also support a
.B \-F
.I framebuffer
option.
Note that the disk file format of
.I libfb
is that of
.IR pix (5),
allowing ``framebuffer'' files to be later processed by
any of the ``pix'' family of programs.
See
.IR libfb (3),
.IR pix-fb (3),
.IR pix (5),
etc.
.TP
.B rfbd
TCP-based network server which implements remote frame-buffer services.
.TP
.B libsysv
Some System-V compatability routines
.TP
.B libtermio
A library to handle terminal mode setting
on both Berkeley or SystemV machines.
.TP
.B libplot3
A public-domain version of the UNIX-Plot library
which differs from that of the standard
.IR libplot (3),
by the addition of 3-D primatives, color, floating point
coordinate routines, and the use of a file pointer parameter.
See
.IR libplot3 (3),
.IR plot3 (5).
.TP
.B librle
A Run-Length-Encoding (RLE) library,
providing functions
originally from the University of Utah in a library package.
Note that the current version of this library reads
Edition-3 RLE files.
[Edition-1 and Edition-2 RLE files can be read and written
with the
.B liborle
and
.B orle
programs.]
See
.IR rle-fb (1),
.IR fb-rle (1),
.IR rle-pix (1),
.IR pix-rle (1),
.IR librle (3).
.TP
.B util
A collection of image-handling utilities,
each constructed as individual tools intended to be used in combination.
See
.IR ap-pix (1),
.IR bw-fb (1),
.IR bw-imp (1),
.IR bw-pix (1),
.IR bw3-pix (1),
.IR bwcrop (1),
.IR bwdiff (1),
.IR bwfilter (1),
.IR bwhist (1),
.IR bwmod (1),
.IR bwrect (1),
.IR bwrot (1),
.IR bwscale (1),
.IR bwstat (1),
.IR dunncolor (1),
.IR dunnsnap (1),
.IR fb-bw (1),
.IR fb-pix (1),
.IR fb-rle (1),
.IR fbanim (1),
.IR fbclear (1),
.IR fbcmap (1),
.IR fbcmrot (1),
.IR fbcolor (1),
.IR fbframe (1),
.IR fbgrid (1),
.IR fbpoint (1),
.IR fbzoom (1),
.IR gencolor (1),
.IR loop (1),
.IR pix-bw (1),
.IR pix-bw3 (1),
.IR pix-fb (1),
.IR pixbackgnd (1),
.IR pixbustup (1),
.IR pixdiff (1),
.IR pixfilter (1),
.IR pixhist (1),
.IR pixhist3d-pl (1),
.IR pixhist3d (1),
.IR pixinterp2x (1),
.IR pixrect (1),
.IR pixrot (1),
.IR pixscale (1),
.IR pixstat (1),
.IR pixtile (1),
.IR pl-fb (1),
.IR pp-fb (1),
.IR rle-fb (1),
.IR rle-pix (1),
.IR wavelet (1),
.IR bw (5),
.IR pix (5),
.IR plot3 (5).
.TP
.B fbed
An interactive, termcap-based frame-buffer image editor.
See
.IR fbed (1).
.TP
.B vdeck
A program to convert
.I mged(1)
models to
.I gift(1)
format card deck files.
See
.IR vdeck (1).
.PD
.SH FB_FILE
Whenever a framebuffer is needed, and the
.B \-F
option has not been specified, the environment variable
.B
.SM FB_FILE
is checked for the device to use.  The format of this
variable is either
.IB [hostname:] /dev/ device_name[num]
or
.I UNIX_path ,
the pathname of a disk file to be used as a ``virtual framebuffer.''
.I Hostname
is the name of a remote machine if the remote framebuffer interface
is being used.
When a local display device is being specified, the
.I hostname
should not be specified, for performance reasons; just the
special string
.I Device_name
is used to select a particular type of framebuffer.
.I Num
is type dependent and can either mean a display number or select
some options for that type.
Note that for security reasons, it is not permitted to access a
disk file via the remote interface.
.PP
If
.B
.SM FB_FILE
is not set, the default for you system will be used.
.PP
The use of
.B /dev/
before the
.I device_name
is simply to distinguish them from filenames.  See the end of the
.IR libfb (3)
manual page for a list of the device names and the meanings of
any
.I num
parameters they may take, and for a more detailed discussion.
.SH OPTIONS
A convention exists for the options used on
most of the utilities provided.
Random options are usually lower case.
Options which could specify either a screen or file size
are, by convention, lower case for file information,
and upper case for screen information.
Here's a list of some of the common options you may encounter:
.TP
.B \-h
The ``high resolution'' flag, increasing the default screen and file
size of 512x512
to 1024x1024.  Has same effect as
.B \-s 1024 \-S 1024
but exists as a convienient shorthand held over from the simple days
when framebuffers where square, and only came in two resolutions.
This historical usage unfortunately prempts this letter from use
as a height specifier, forcing that function to relocate under
protest to
.BR \-n ,
which can be thought of as ``number of scanlines'', which isn't
too bad a mnemonic.
.TP
.B \-i
Inverse flag.  Pretend origin is in upper left corner of screen,
for that good old-fashioned fourth-quadrant behavior.
.TP
.B \-c
Various.  Typically means clear the screen first.
.TP
.B \-z
Various.  Typically means zoom-in on current area of display.
.TP
.BI \-s\  square_file_size
.B WARNING:
Behavior is undefined when the
.B \-s
flag is used in conjunction with the
.BR \-w\  or\  \-n
flags.
.TP
.BI \-w\  file_width
.TP
.BI \-n\  file_height
.TP
.BI \-S\  square_screen_size
.B WARNING:
Behavior is undefined when the
.B \-S
flag is used in conjunction with the
.BR \-W\  or\  \-N
flags.
.TP
.BI \-W\  screen_width
.TP
.BI \-N\  screen_height
.TP
.BI \-x\  file_x_offset
.TP
.BI \-y\  file_y_offset
.TP
.BI \-X\  screen_x_offset
.TP
.BI \-Y\  screen_y_offset
.TP
.BI \-#\  bytes_per_sample
specifies the number of bytes per sample, where the
flag, where the
.B #
character is a literal ``pound'' or ``sharp'' sign character,
typically found over the numeral ``3'' on ANSI keyboards.
Several programs (like pixrect)
can operate on data samples of arbitrary width.
For example, a
.BR pix (5)
format file can often be treated like a
.BR bw (5)
format file with a width of three bytes per sample.
.SH "TAPE FORMAT"
When dealing with large collections of images, as might be
needed for making a movie,
it frequently becomes desirable to deal with magnetic tapes.
Some of the early
.BR pix (5)
tools contained built-in knowledge of the tape format.
While this aberrant early design has been corrected
in favor of using tape-oriented programs such as
.BR dd (1)
in pipelines with the image tools, our ``standard''
image format remains.
.PP
Regardless of image resolution, all tape records are 24k bytes long.
If an image does not occupy an integral number of tape records,
the last record is padded out.
For example, NTSC images in 640x480 format use
37.5 records per image.
The
.IR files-tape (1)
utility is helpful in performing this function.
.PP
The capacity of an averate 2400 foot reel of tape at 6250 is 6144 records
of 24k bytes each.
For the various combinations of density and image resolution,
a convention for the number of frames/reel exists:
.br
Density\ \ Resolution\ \ Frames/reel
.br
\ 6250\ \ \ \ \ \ \ \ 1k\ \ \ \ \ \ \ \ \ \ 48
.br
\ 6250\ \ \ \ \ \ 640x480\ \ \ \ \ \ 160
.br
\ 6250\ \ \ \ \ \ \ 512\ \ \ \ \ \ \ \ \ 192
.br
\ 1600\ \ \ \ \ \ \ \ 1k\ \ \ \ \ \ \ \ \ \ 12
.br
\ 1600\ \ \ \ \ \ \ 512\ \ \ \ \ \ \ \ \ 48
.SH "FILES"
At BRL, the software is installed in the directories:
.br
 /usr/brlcad/bin
 /usr/brlcad/lib
 /usr/brlcad/etc
.br
The master source tree resides on the machine SPARK.ARL.ARMY.MIL:
 /m/cad
.B
.SH SOURCE
SECAD/VLD Computing Consortium, Bldg 394
.br
The U. S. Army Ballistic Research Laboratory
.br
Aberdeen Proving Ground, Maryland  21005-5066
.SH BUG REPORTS
Reports of bugs or problems should be submitted via electronic
mail to <devs@brlcad.org>.
