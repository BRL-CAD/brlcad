Looking at flatzinc as a constraint solver independent way to specify
constraints - libpc could use that standard, and then do whatever is needed on
the back end (talk to gecode, Google's or-tools solver, etc. via flatzinc
directly, or translate as needed.)

Might be worthwhile for readability to support the higher level minizinc (or at
least some part of it) and have libpc incorporate the ability to translate
"under the hood" to flatzinc, if appropriately licensed translators can be
found - the G12 project's tools may be of some use, but would have to be
converted from the Mercury language to C:  http://www.mercurylang.org/

Would have to think about a generic C structure to hold minizinc/flatzinc
results in a programmatically useful form - it wouldn't do to parse the text
outputs, although they should be available for debugging if needed...
