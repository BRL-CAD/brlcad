# To minimize the number of build targets and binaries that are created, we
# combine some of the unit tests into a single program.

set(bu_test_srcs
  b64.c
  backtrace.c
  badmagic.c
  basename.c
  bitv.c
  booleanize.c
  color.c
  datetime.c
  dir.c
  dirname.c
  encode.c
  escape.c
  file.c
  file_mime.c
  heap.c
  hook.c
  humanize_number.c
  vls_incr.c
  vls_simplify.c
  mappedfile.c
  opt.c
  parallel.c
  path_component.c
  process.c
  ptbl.c
  realpath.c
  semaphore.c
  sort.c
  str.c
  str_isprint.c
  uuid.c
  vls.c
  vls_vprintf.c
  )
#  file_glob.c

# Generate and assemble the necessary per-test-type source code
set(BU_TEST_SRC_INCLUDES)
set(BU_TEST_SRC_SWITCHES)
set(BU_TEST_LIST)
foreach(srcfile ${bu_test_srcs})
  get_filename_component(NAME_ROOT ${srcfile} NAME_WE)
  set(BU_TEST_SRC_INCLUDES "${BU_TEST_SRC_INCLUDES}\n#define main ${NAME_ROOT}_main\n#include \"libbu/tests/${srcfile}\"\n#undef main\n")
  set(BU_TEST_SRC_SWITCHES "${BU_TEST_SRC_SWITCHES}\n	if (BU_STR_EQUAL(av[0], \"${NAME_ROOT}\")) return ${NAME_ROOT}_main(ac,av);")
  set(BU_TEST_LIST "${BU_TEST_LIST}\\n	${NAME_ROOT}")
endforeach(srcfile ${bu_test_srcs})

# Generate bu_test.c file and build it
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../..)
configure_file(bu_test.c.in "${CMAKE_CURRENT_BINARY_DIR}/bu_test.c" @ONLY)
BRLCAD_ADDEXEC(bu_test "${CMAKE_CURRENT_BINARY_DIR}/bu_test.c" libbu TEST)
BRLCAD_CTEST_EXEC(bu_test bu)

# Housekeeping for included source files
CMAKEFILES(${bu_test_srcs})
VALIDATE_STYLE("${bu_test_srcs}" bu_test)

#
#  ************ bu_sscanf tests *************
#

BRLCAD_ADDEXEC(bu_sscanf sscanf.c libbu TEST)
BRLCAD_CTEST_EXEC(bu_sscanf bu_sscanf)
BRLCAD_ADDEXEC(bu_gethostname gethostname.c libbu TEST)
BRLCAD_CTEST_EXEC(bu_gethostname bu_gethostbyname)

#
#  ************ basename.c tests *************
#

####################################
#      bu_path_basename testing    #
####################################
BRLCAD_ADD_TEST(NAME bu_path_basename_null                                   GROUP bu COMMAND bu_test basename) # tests NULL
BRLCAD_ADD_TEST(NAME bu_path_basename_empty                                  GROUP bu COMMAND bu_test basename "")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl_dir_sl_file                  GROUP bu COMMAND bu_test basename "/usr/dir/file")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl_dir_sl_                      GROUP bu COMMAND bu_test basename "/usr/dir/")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_bsl__sl_dir                     GROUP bu COMMAND bu_test basename "/usr\\\\/dir")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl__p_                          GROUP bu COMMAND bu_test basename "/usr/.")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl_                             GROUP bu COMMAND bu_test basename "/usr/")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr                                 GROUP bu COMMAND bu_test basename "/usr")
BRLCAD_ADD_TEST(NAME bu_path_basename_usr                                    GROUP bu COMMAND bu_test basename "usr")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl_some_sp_long_sl_file         GROUP bu COMMAND bu_test basename "/usr/some long/file")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_usr_sl_some_sp_file                 GROUP bu COMMAND bu_test basename "/usr/some file")
BRLCAD_ADD_TEST(NAME bu_path_basename_C_c__sl_usr_sl_some_bsl__sp_drivepath  GROUP bu COMMAND bu_test basename "C:/usr/some\\\\ drivepath")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_a_sp_test_sp_file                   GROUP bu COMMAND bu_test basename "/a test file")
BRLCAD_ADD_TEST(NAME bu_path_basename_another_sp_file                        GROUP bu COMMAND bu_test basename "another file")
BRLCAD_ADD_TEST(NAME bu_path_basename_C_c__bsl__Temp                         GROUP bu COMMAND bu_test basename "C:\\\\Temp")
BRLCAD_ADD_TEST(NAME bu_path_basename_C_c__sl_Temp                           GROUP bu COMMAND bu_test basename "C:/Temp")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl_                                    GROUP bu COMMAND bu_test basename "/")
BRLCAD_ADD_TEST(NAME bu_path_basename_sl__sl__sl__sl__sl_                    GROUP bu COMMAND bu_test basename "/////")
BRLCAD_ADD_TEST(NAME bu_path_basename_p_                                     GROUP bu COMMAND bu_test basename ".")
BRLCAD_ADD_TEST(NAME bu_path_basename_p__p_                                  GROUP bu COMMAND bu_test basename "..")
BRLCAD_ADD_TEST(NAME bu_path_basename_p__p__p_                               GROUP bu COMMAND bu_test basename "...")
BRLCAD_ADD_TEST(NAME bu_path_basename_sp__sp__sp_                            GROUP bu COMMAND bu_test basename "   ")


##########################################
#      bu_file_path_component testing    #
##########################################
BRLCAD_ADD_TEST(NAME bu_path_component_null                               GROUP bu COMMAND bu_test path_component) # tests NULL
BRLCAD_ADD_TEST(NAME bu_path_component_empty                              GROUP bu COMMAND bu_test path_component 0) # tests empty

# NOTE: these test numbers correspond with the bu_path_component_t enum values in include/bu/path.h
BRLCAD_ADD_TEST(NAME bu_path_component_sl_usr_sl_dir_sl_file_ext          GROUP bu COMMAND bu_test path_component "/usr/dir/file.ext" "ext" 4)
BRLCAD_ADD_TEST(NAME bu_path_component_c_sl_usr_sl_dir_sl_file_ext        GROUP bu COMMAND bu_test path_component "C:/usr/dir/file.ext" "ext" 4)
BRLCAD_ADD_TEST(NAME bu_path_component_sl_usr_sl_dir_sl_file_base         GROUP bu COMMAND bu_test path_component "/usr/dir/file.ext" "file.ext" 2)
BRLCAD_ADD_TEST(NAME bu_path_component_sl_usr_sl_dir_sl_file_base_core    GROUP bu COMMAND bu_test path_component "/usr/dir/file.ext" "file" 3)
BRLCAD_ADD_TEST(NAME bu_path_component_sl_usr_sl_dir_sl_file_dir          GROUP bu COMMAND bu_test path_component "/usr/dir/file.ext" "/usr/dir" 0)
BRLCAD_ADD_TEST(NAME bu_path_component_sl_usr_sl_dir_sl_file_dir_core     GROUP bu COMMAND bu_test path_component "/usr/dir/file.ext" "/usr/dir/file" 1)
BRLCAD_ADD_TEST(NAME bu_path_component_c_sl_usr_sl_dir_sl_file_dir_core   GROUP bu COMMAND bu_test path_component "C:/usr/dir/file.ext" "C:/usr/dir/file" 1)


#############################
#      bu_file_* testing    #
#############################
BRLCAD_ADD_TEST(NAME bu_file  GROUP bu COMMAND bu_test file) # tests bu/file.h API

# NOTE: these test numbers correspond with the bu_mime_t enum values in include/bu/mime.h
BRLCAD_ADD_TEST(NAME bu_file_mime_dxf   GROUP bu COMMAND bu_test file_mime dxf 5 1) # tests dxf extension in model context
BRLCAD_ADD_TEST(NAME bu_file_mime_stp   GROUP bu COMMAND bu_test file_mime stp 5 7) # tests stp extension in model context
BRLCAD_ADD_TEST(NAME bu_file_mime_png   GROUP bu COMMAND bu_test file_mime png 3 13) # tests png extension in image context

#BRLCAD_ADD_TEST(NAME bu_file_glob   GROUP bu COMMAND bu_test file_glob) # runs a series of built-in unit tests

#
#  ************ bitv.c tests *************
#
include(tests_bitv.cmake)

#
#  ************ booleanize.c tests *************
#

#################################
#      bu_booleanize testing    #
#################################
# expected returns are false:0, strongly true:1, or anything else:>1
BRLCAD_ADD_TEST(NAME bu_booleanize_nullptr      GROUP bu COMMAND bu_test booleanize) # tests NULL
BRLCAD_ADD_TEST(NAME bu_booleanize_nullstr      GROUP bu COMMAND bu_test booleanize "(null)" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_empty        GROUP bu COMMAND bu_test booleanize "" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_space        GROUP bu COMMAND bu_test booleanize " " 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_n            GROUP bu COMMAND bu_test booleanize "n" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_nabcd        GROUP bu COMMAND bu_test booleanize "nabcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_N            GROUP bu COMMAND bu_test booleanize "N" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_Nabcd        GROUP bu COMMAND bu_test booleanize "Nabcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize__sp__sp_abcd GROUP bu COMMAND bu_test booleanize "  abcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_y            GROUP bu COMMAND bu_test booleanize "y" 1)
BRLCAD_ADD_TEST(NAME bu_booleanize_yabcd        GROUP bu COMMAND bu_test booleanize "yabcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_Y            GROUP bu COMMAND bu_test booleanize "Y" 1)
BRLCAD_ADD_TEST(NAME bu_booleanize_Yabcd        GROUP bu COMMAND bu_test booleanize "Yabcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_abcd         GROUP bu COMMAND bu_test booleanize "abcd" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_neg1         GROUP bu COMMAND bu_test booleanize "-1" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_1            GROUP bu COMMAND bu_test booleanize "1" 1)
BRLCAD_ADD_TEST(NAME bu_booleanize_2            GROUP bu COMMAND bu_test booleanize "2" 2)
BRLCAD_ADD_TEST(NAME bu_booleanize_0            GROUP bu COMMAND bu_test booleanize "0" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_neg0         GROUP bu COMMAND bu_test booleanize "-0" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_0000         GROUP bu COMMAND bu_test booleanize "0000" 0)
BRLCAD_ADD_TEST(NAME bu_booleanize_0001         GROUP bu COMMAND bu_test booleanize "0001" 1)

#
#  ************ ctype.c tests *************
#

##################################
#      bu_str_isprint testing    #
##################################
# Note - because of the special characters needed in these tests, the strings
# don't work well when fed in from the command line.
BRLCAD_ADD_TEST(NAME bu_str_isprint_basic                GROUP bu COMMAND bu_test str_isprint 1)
BRLCAD_ADD_TEST(NAME bu_str_isprint_eol                  GROUP bu COMMAND bu_test str_isprint 2)
BRLCAD_ADD_TEST(NAME bu_str_isprint_double_slash         GROUP bu COMMAND bu_test str_isprint 3)
BRLCAD_ADD_TEST(NAME bu_str_isprint_horiz_tab            GROUP bu COMMAND bu_test str_isprint 4)
BRLCAD_ADD_TEST(NAME bu_str_isprint_non-alphanumeric     GROUP bu COMMAND bu_test str_isprint 5)
BRLCAD_ADD_TEST(NAME bu_str_isprint_eol_non-alphanumeric GROUP bu COMMAND bu_test str_isprint 6)
BRLCAD_ADD_TEST(NAME bu_str_isprint_carriage_return      GROUP bu COMMAND bu_test str_isprint 7)

#
#  ************ dirname.c tests *************
#

###################################
#      bu_path_dirname testing    #
###################################
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_dir_file GROUP bu COMMAND bu_test dirname "/usr/dir/file")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_dir_ GROUP bu COMMAND bu_test dirname "/usr/dir/")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr__bsl__dir GROUP bu COMMAND bu_test dirname "/usr\\\\/dir")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_period GROUP bu COMMAND bu_test dirname "/usr/.")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_ GROUP bu COMMAND bu_test dirname "/usr/")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr GROUP bu COMMAND bu_test dirname "/usr")
BRLCAD_ADD_TEST(NAME bu_path_dirname_usr GROUP bu COMMAND bu_test dirname "usr")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_some_sp_long_file GROUP bu COMMAND bu_test dirname "/usr/some long/file")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_some_sp_file GROUP bu COMMAND bu_test dirname "/usr/some file")
BRLCAD_ADD_TEST(NAME bu_path_dirname__usr_some__bsl__sp_drivepath GROUP bu COMMAND bu_test dirname "C:/usr/some\\\\ drivepath")
BRLCAD_ADD_TEST(NAME bu_path_dirname__a_sp_file GROUP bu COMMAND bu_test dirname "/a test file")
BRLCAD_ADD_TEST(NAME bu_path_dirname_another_file GROUP bu COMMAND bu_test dirname "another file")
BRLCAD_ADD_TEST(NAME bu_path_dirname_C_colon__bsl_Temp GROUP bu COMMAND bu_test dirname "C:\\\\Temp")
BRLCAD_ADD_TEST(NAME bu_path_dirname_C_colon__Temp GROUP bu COMMAND bu_test dirname "C:/Temp")
BRLCAD_ADD_TEST(NAME bu_path_dirname__ GROUP bu COMMAND bu_test dirname "/")
BRLCAD_ADD_TEST(NAME bu_path_dirname______ GROUP bu COMMAND bu_test dirname "/////")
BRLCAD_ADD_TEST(NAME bu_path_dirname__period_ GROUP bu COMMAND bu_test dirname ".")
BRLCAD_ADD_TEST(NAME bu_path_dirname__period__period_ GROUP bu COMMAND bu_test dirname "..")
BRLCAD_ADD_TEST(NAME bu_path_dirname__period__period__period_ GROUP bu COMMAND bu_test dirname "...")
BRLCAD_ADD_TEST(NAME bu_path_dirname__sp__sp__sp_ GROUP bu COMMAND bu_test dirname "   ")
BRLCAD_ADD_TEST(NAME bu_path_dirname_empty GROUP bu COMMAND bu_test dirname "")
BRLCAD_ADD_TEST(NAME bu_path_dirname_null GROUP bu COMMAND bu_test dirname)

#
#  ************ escape.c tests *************
#
# Note - because of the quoting needed in these tests, it is simpler
# to leave the input strings in the C code.  Individual tests are triggered
# by number

###################################
#      bu_str_unescape testing    #
###################################
foreach(num RANGE 1 23)
  BRLCAD_ADD_TEST(NAME "bu_str_unescape_${num}" GROUP bu COMMAND bu_test escape 1 "${num}")
endforeach()

#################################
#      bu_str_escape testing    #
#################################
foreach(num RANGE 1 31)
  BRLCAD_ADD_TEST(NAME "bu_str_escape_${num}" GROUP bu COMMAND bu_test escape 2 "${num}")
endforeach()

##############################################
#      escape/unescape round trip testing    #
##############################################
foreach(num RANGE 1 4)
  BRLCAD_ADD_TEST(NAME "bu_escape_roundtrip_${num}" GROUP bu COMMAND bu_test escape 3 "${num}")
endforeach()

###
# bu_heap memory allocation testing
###
BRLCAD_ADD_TEST(NAME bu_heap_1 GROUP bu COMMAND bu_test heap)

#
#  ************ progname.c tests *************
#
# Note - some of the test conditions for bu_progname require previous
# steps to be performed in the same executable context.  Hence, in this
# case, multiple test cases are rolled into a single program execution.

###############################
#      bu_progname testing    #
###############################
BRLCAD_ADDEXEC(bu_progname progname.c libbu TEST)
BRLCAD_CTEST_EXEC(bu_progname bu_progname)
BRLCAD_ADD_TEST(NAME bu_progname_tests GROUP bu_progname COMMAND bu_progname)

#
#  ************ encode.c tests *************
#
# The testing of encoding and de-coding is tested at once in a "round trip"
# approach - the tests below all test both bu_vls_encode and bu_vls_decode.
# Like many string functions using escaped characters the input strings are
# left in C to minimize pass-through errors.
foreach(num RANGE 1 23)
  BRLCAD_ADD_TEST(NAME "bu_encode_${num}" GROUP bu COMMAND bu_test encode "${num}")
endforeach()

#
#  ************ b64.c tests *************
#
# The testing of encoding and de-coding is tested at once in a "round trip"
# approach - the tests below all test both bu_b64_encode and bu_b64_decode.
BRLCAD_ADD_TEST(NAME "bu_b64_test" GROUP bu COMMAND bu_test b64)

#
#  ************ bu_semaphore.c tests *************
#
BRLCAD_ADD_TEST(NAME bu_semaphore_test GROUP bu COMMAND bu_test semaphore)
BRLCAD_ADD_TEST(NAME bu_semaphore_P1 GROUP bu COMMAND bu_test semaphore -P1)
BRLCAD_ADD_TEST(NAME bu_semaphore_P2 GROUP bu COMMAND bu_test semaphore -P2)
BRLCAD_ADD_TEST(NAME bu_semaphore_P3 GROUP bu COMMAND bu_test semaphore -P3)

#
#  ************ bu_parallel.c tests *************
#
BRLCAD_ADD_TEST(NAME bu_parallel_test GROUP bu COMMAND bu_test parallel)

# TODO - add a parallel test for the static version of the library,
# maybe using bu_getiwd

#
#  ************ vls_vprintf.c tests *************
#
foreach(num RANGE 1 67)
  BRLCAD_ADD_TEST(NAME "bu_vls_vprintf_${num}" GROUP bu COMMAND bu_test vls_vprintf "${num}")
endforeach()

#
#  ************ vls.c tests *************
#
include(tests_vls.cmake)


#
#  ************ sort.c test *************
#
BRLCAD_ADD_TEST(NAME bu_sort_unsigned_int_1 GROUP bu COMMAND bu_test sort 1)
BRLCAD_ADD_TEST(NAME bu_sort_unsigned_int_2 GROUP bu COMMAND bu_test sort 2)
BRLCAD_ADD_TEST(NAME bu_sort_fastf_t_1 GROUP bu COMMAND bu_test sort 3)
BRLCAD_ADD_TEST(NAME bu_sort_fastf_t_2 GROUP bu COMMAND bu_test sort 4)
BRLCAD_ADD_TEST(NAME bu_sort_string_1 GROUP bu COMMAND bu_test sort 5)
BRLCAD_ADD_TEST(NAME bu_sort_string_2 GROUP bu COMMAND bu_test sort 6)
BRLCAD_ADD_TEST(NAME bu_sort_dist_to_int_1 GROUP bu COMMAND bu_test sort 7)
BRLCAD_ADD_TEST(NAME bu_sort_dist_to_int_2 GROUP bu COMMAND bu_test sort 8)
BRLCAD_ADD_TEST(NAME bu_sort_fastf_empty GROUP bu COMMAND bu_test sort 9)
BRLCAD_ADD_TEST(NAME bu_sort_fastf_inf GROUP bu COMMAND bu_test sort 10)

#
#  ************ color.c tests *************

# For GROUP bu COMMAND bu_test color, the input format is as follows:
#
# GROUP bu COMMAND bu_test color <function number> <args>

# For function #1 (bu_rgb_to_hsv) the <args> format is as follows:
#
# rgb expected_hsv
#
# Where rgb colors are represented by comma-separated triples of
# integers, and hsv colors are represented by comma-separated triples
# of floats.

BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_1 GROUP bu COMMAND bu_test color 1 192,78,214 290.294,0.636,0.839)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_2 GROUP bu COMMAND bu_test color 1 0,0,0 0.0,0.0,0.0)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_3 GROUP bu COMMAND bu_test color 1 255,255,255 0.0,0.0,1.0)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_4 GROUP bu COMMAND bu_test color 1 255,0,0 0.0,1.0,1.0)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_5 GROUP bu COMMAND bu_test color 1 0,255,0 120.0,1.0,1.0)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_6 GROUP bu COMMAND bu_test color 1 0,0,255 240.0,1.0,1.0)
BRLCAD_ADD_TEST(NAME bu_rgb_to_hsv_7 GROUP bu COMMAND bu_test color 1 128,128,128 0.0,0.0,0.501)

# For function #2 (bu_hsv_to_rgb) the <args> format is as follows:
#
# hsv expected_rgb
#
# Where rgb colors are represented by comma-separated triples of
# integers, and hsv colors are represented by comma-separated triples
# of floats.

BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_1 GROUP bu COMMAND bu_test color 2 290.294,0.636,0.839 192,78,214)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_2 GROUP bu COMMAND bu_test color 2 0.0,0.0,0.0 0,0,0)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_3 GROUP bu COMMAND bu_test color 2 0.0,0.0,1.0 255,255,255)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_4 GROUP bu COMMAND bu_test color 2 0.0,1.0,1.0 255,0,0)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_5 GROUP bu COMMAND bu_test color 2 120.0,1.0,1.0 0,255,0)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_6 GROUP bu COMMAND bu_test color 2 240.0,1.0,1.0 0,0,255)
BRLCAD_ADD_TEST(NAME bu_hsv_to_rgb_7 GROUP bu COMMAND bu_test color 2 0.0,0.0,0.501 128,128,128)

# For function #3 (bu_str_to_rgb) the <args> format is as follows:
#
# string expected_rgb
#
# Where rgb colors are represented by comma-separated triples of
# integers.

BRLCAD_ADD_TEST(NAME bu_str_to_rgb_1 GROUP bu COMMAND bu_test color 3 "1 2 3" 1,2,3)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_2 GROUP bu COMMAND bu_test color 3 "78/214/192" 78,214,192)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_3 GROUP bu COMMAND bu_test color 3 "214 192 78" 214,192,78)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_4 GROUP bu COMMAND bu_test color 3 "192,214,78" 192,214,78)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_5 GROUP bu COMMAND bu_test color 3 "1234/1234/1234" 11,22,33) # invalid
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_6 GROUP bu COMMAND bu_test color 3 "-1 -2 -3" 11,22,33) # invalid
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_7 GROUP bu COMMAND bu_test color 3 "#000000" 0,0,0)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_8 GROUP bu COMMAND bu_test color 3 "#ffffff" 255,255,255)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_9 GROUP bu COMMAND bu_test color 3 "#FfFFfF" 255,255,255)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_10 GROUP bu COMMAND bu_test color 3 "#fff" 255,255,255)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_11 GROUP bu COMMAND bu_test color 3 "#C04ED6" 192,78,214)
BRLCAD_ADD_TEST(NAME bu_str_to_rgb_12 GROUP bu COMMAND bu_test color 3 "#C4D" 204,68,221)

# For function #4 (bu_color_to_rgb_floats) the <args> format is as follows:
#
# rgb_color
#
# Where rgb colors are represented by comma-separated triples of
# integers or floats.

BRLCAD_ADD_TEST(NAME bu_color_to_rgb_floats_1 GROUP bu COMMAND bu_test color 4 192,78,214)

#
# ************ str.c tests ************
#

# For GROUP bu COMMAND bu_test str, the input format is as follows:
#
# GROUP bu COMMAND bu_test str <function number> <args>

# For function #1 (bu_strlcatm) the <args> format is as follows:
#
# string1 string2 result_size expected_ret expected_result
#
# Where string1 and string2 are the strings to concatenate,
# result_size is the size for the buffer that the result will be
# stored in, expected_ret is the expected return value of the
# function, and expected_result is the expected resultant string in
# dst.

BRLCAD_ADD_TEST(NAME bu_strlcatm_valid_1 GROUP bu COMMAND bu_test str 1 "abc" "def" 7 6 "abcdef")
BRLCAD_ADD_TEST(NAME bu_strlcatm_valid_2 GROUP bu COMMAND bu_test str 1 "abc" "def" 8 6 "abcdef")
BRLCAD_ADD_TEST(NAME bu_strlcatm_bad_size_1 GROUP bu COMMAND bu_test str 1 "abc" "def" 0 0 "")
BRLCAD_ADD_TEST(NAME bu_strlcatm_bad_size_2 GROUP bu COMMAND bu_test str 1 "abc" "def" 5 4 "abcd")

# For function #2 (bu_strlcpym) the <args> format is as follows:
#
# string result_size expected_ret expected_result
#
# Where string is the string to copy, result_size is the size of the
# result buffer, expected_ret is the expected return value of the
# function, and expected_result is the expected contents of the copied
# string.

BRLCAD_ADD_TEST(NAME bu_strlcpym_valid_1 GROUP bu COMMAND bu_test str 2 "abcdef" 7 6 "abcdef")
BRLCAD_ADD_TEST(NAME bu_strlcpym_valid_2 GROUP bu COMMAND bu_test str 2 "abcdef" 8 6 "abcdef")
BRLCAD_ADD_TEST(NAME bu_strlcpym_bad_size_1 GROUP bu COMMAND bu_test str 2 "abcdef" 0 0 "")
BRLCAD_ADD_TEST(NAME bu_strlcpym_bad_size_2 GROUP bu COMMAND bu_test str 2 "abcdef" 5 4 "abcd")

# For function #3 (bu_strdupm) the <args> format is as follows:
#
# string
#
# Where string is the string to duplicate.

BRLCAD_ADD_TEST(NAME bu_strdupm_1 GROUP bu COMMAND bu_test str 3 "abcdef")

# For function #4 (bu_strcmp) the <args> format is as follows:
#
# string1 string2 expected_ret
#
# Where string1 and string2 are the strings to compare, and
# expected_ret is a number of the same sign as the expected comparison
# result.

BRLCAD_ADD_TEST(NAME bu_strcmp_equal_1 GROUP bu COMMAND bu_test str 4 "abcd" "abcd" 0)
BRLCAD_ADD_TEST(NAME bu_strcmp_less_1 GROUP bu COMMAND bu_test str 4 "a" "b" -1)
BRLCAD_ADD_TEST(NAME bu_strcmp_less_2 GROUP bu COMMAND bu_test str 4 "abCD" "abcd" -1)
BRLCAD_ADD_TEST(NAME bu_strcmp_greater_1 GROUP bu COMMAND bu_test str 4 "b" "a" 1)
BRLCAD_ADD_TEST(NAME bu_strcmp_greater_2 GROUP bu COMMAND bu_test str 4 "abcd" "abCD" 1)

# For function #5 (bu_strncmp) the <args> format is as follows:
#
# string1 string2 n expected_ret
#
# Where string1 and string2 are the strings to compare, n is the
# length to give strncmp, and expected_ret is a number of the same
# sign as the expected comparison result.

BRLCAD_ADD_TEST(NAME bu_strncmp_equal_1 GROUP bu COMMAND bu_test str 5 "abcd" "abcd" 4 0)
BRLCAD_ADD_TEST(NAME bu_strncmp_equal_2 GROUP bu COMMAND bu_test str 5 "abcd" "abcd" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncmp_equal_3 GROUP bu COMMAND bu_test str 5 "abcd" "abcd" 5 0)
BRLCAD_ADD_TEST(NAME bu_strncmp_equal_4 GROUP bu COMMAND bu_test str 5 "abcd" "abc" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncmp_equal_5 GROUP bu COMMAND bu_test str 5 "abcd" "abce" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncmp_less_1 GROUP bu COMMAND bu_test str 5 "abcd" "abce" 4 -1)
BRLCAD_ADD_TEST(NAME bu_strncmp_less_2 GROUP bu COMMAND bu_test str 5 "abCD" "abcd" 4 -1)
BRLCAD_ADD_TEST(NAME bu_strncmp_greater_1 GROUP bu COMMAND bu_test str 5 "abcd" "abc" 4 1)
BRLCAD_ADD_TEST(NAME bu_strncmp_greater_2 GROUP bu COMMAND bu_test str 5 "abcd" "abCD" 4 1)

# For function #6 (bu_strcasecmp) the <args> format is as follows:
#
# string1 string2 expected_ret
#
# Where string1 and string2 are the strings to compare, and
# expected_ret is a number of the same sign as the expected comparison
# result.

BRLCAD_ADD_TEST(NAME bu_strcasecmp_equal_1 GROUP bu COMMAND bu_test str 6 "abcd" "abcd" 0)
BRLCAD_ADD_TEST(NAME bu_strcasecmp_equal_2 GROUP bu COMMAND bu_test str 6 "abCD" "abcd" 0)
BRLCAD_ADD_TEST(NAME bu_strcasecmp_equal_3 GROUP bu COMMAND bu_test str 6 "abcd" "abCD" 0)
BRLCAD_ADD_TEST(NAME bu_strcasecmp_less_1 GROUP bu COMMAND bu_test str 4 "a" "b" -1)
BRLCAD_ADD_TEST(NAME bu_strcasecmp_greater_1 GROUP bu COMMAND bu_test str 4 "b" "a" 1)

# For function #7 (bu_strncasecmp) the <args> format is as follows:
#
# string1 string2 n expected_ret
#
# Where string1 and string2 are the strings to compare, n is the
# length to give strncmp, and expected_ret is a number of the same
# sign as the expected comparison result.

BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_1 GROUP bu COMMAND bu_test str 7 "abcd" "abcd" 4 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_2 GROUP bu COMMAND bu_test str 7 "abcd" "abcd" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_3 GROUP bu COMMAND bu_test str 7 "abcd" "abcd" 5 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_4 GROUP bu COMMAND bu_test str 7 "abcd" "abc" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_5 GROUP bu COMMAND bu_test str 7 "abcd" "abce" 3 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_6 GROUP bu COMMAND bu_test str 7 "abCD" "abcd" 4 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_equal_7 GROUP bu COMMAND bu_test str 7 "abcd" "abCD" 4 0)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_less_1 GROUP bu COMMAND bu_test str 7 "abcd" "abce" 4 -1)
BRLCAD_ADD_TEST(NAME bu_strncasecmp_greater_1 GROUP bu COMMAND bu_test str 7 "abcd" "abc" 4 1)

#
#  *********** badmagic.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_badmagic_diff_magic  GROUP bu COMMAND bu_test badmagic 1)
BRLCAD_ADD_TEST(NAME bu_badmagic_normal      GROUP bu COMMAND bu_test badmagic 2)
BRLCAD_ADD_TEST(NAME bu_badmagic_null_ptr    GROUP bu COMMAND bu_test badmagic 3)
BRLCAD_ADD_TEST(NAME bu_badmagic_misaligned  GROUP bu COMMAND bu_test badmagic 4)

#
#  *********** vls_incr.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_vls_incr_1  GROUP bu COMMAND bu_test vls_incr "test1.r"      0 "NULL"        1  "test2.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_2  GROUP bu COMMAND bu_test vls_incr "test1.r"      0 "0:0:0:0"    10  "test11.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_3  GROUP bu COMMAND bu_test vls_incr "test1_1.r"    0 "0:0:0:0"     2  "test1_3.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_4  GROUP bu COMMAND bu_test vls_incr "test-1.r"     0 "0:0:0:0"     1  "test-2.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_5  GROUP bu COMMAND bu_test vls_incr "test1.r"      0 "3:0:0:0"     1  "test002.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_6  GROUP bu COMMAND bu_test vls_incr "test1.r"      0 "3:5:0:0"     1  "test005.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_7  GROUP bu COMMAND bu_test vls_incr "test5.r"      0 "3:5:0:0"     1  "test006.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_8  GROUP bu COMMAND bu_test vls_incr "test8.r"      0 "0:0:9:0"     2  "test0.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_9  GROUP bu COMMAND bu_test vls_incr "test1.r"      0 "0:0:0:2"     2  "test5.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_10 GROUP bu COMMAND bu_test vls_incr "test90.r"     0 "4:20:99:5"   2  "test0020.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_11 GROUP bu COMMAND bu_test vls_incr "test_1_obj.r" 1 "0:0:0:0:-:-" 1  "test-2-obj.r")
BRLCAD_ADD_TEST(NAME bu_vls_incr_12 GROUP bu COMMAND bu_test vls_incr "test.r"       1 "3:0:0:0:-"   5  "test.r-005")
BRLCAD_ADD_TEST(NAME bu_vls_incr_13 GROUP bu COMMAND bu_test vls_incr "test1"        0 "NULL"        1  "test2")
BRLCAD_ADD_TEST(NAME bu_vls_incr_14 GROUP bu COMMAND bu_test vls_incr "test20"       0 "NULL"      100  "test120")
BRLCAD_ADD_TEST(NAME bu_vls_incr_15 GROUP bu COMMAND bu_test vls_incr "test"         0 "NULL"        1  "test1")
BRLCAD_ADD_TEST(NAME bu_vls_incr_16 GROUP bu COMMAND bu_test vls_incr "test"         0 "0:0:0:0:-"   1  "test-1")

BRLCAD_ADDEXEC(bu_vls_incr_uniq vls_incr_uniq.cpp libbu TEST)
BRLCAD_CTEST_EXEC(bu_vls_incr_uniq bu_vls_incr_uniq)
BRLCAD_ADD_TEST(NAME bu_vls_incr_uniq_1  GROUP bu_vls_incr_uniq COMMAND bu_vls_incr_uniq  "test.r1" "test.r3")
BRLCAD_ADD_TEST(NAME bu_vls_incr_uniq_2  GROUP bu_vls_incr_uniq COMMAND bu_vls_incr_uniq  "test.r2" "test.r3")

#
#  *********** vls_simlify.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_vls_simplify_1  GROUP bu COMMAND bu_test vls_simplify "^%test1@@%"    "__test1___")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_2  GROUP bu COMMAND bu_test vls_simplify "^%test1@@%"    "_test1_"     ""   "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_3  GROUP bu COMMAND bu_test vls_simplify "^%test1@@%"    "_test1@@_"   "@"  "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_4  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "_test1_s_"   ""   "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_5  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "_test1.s_"   "."  "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_6  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "test1.s"     "."  "_"  "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_7  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "%test1.s_%"  ".%" "_"  "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_8  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "test1.s"     ".%" "_"  "%_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_9  GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "test1.s@"    ".@" "_@" "_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_10 GROUP bu COMMAND bu_test vls_simplify "^%test1.s@@%"  "test1.s"     ".@" "_@" "@_")
BRLCAD_ADD_TEST(NAME bu_vls_simplify_11 GROUP bu COMMAND bu_test vls_simplify "^%test@1.s@@%" "test@1.s"    ".@" "_@" "@_")

#
#  *********** opt.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_opt_null  GROUP bu COMMAND bu_test opt 0 0 0)

# Verbosity (custom handler) testing
BRLCAD_ADD_TEST(NAME bu_opt_1_v_00  GROUP bu COMMAND bu_test opt 1 v 0)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_01  GROUP bu COMMAND bu_test opt 1 v 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_02  GROUP bu COMMAND bu_test opt 1 v 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_03  GROUP bu COMMAND bu_test opt 1 v 3)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_04  GROUP bu COMMAND bu_test opt 1 v 4)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_05  GROUP bu COMMAND bu_test opt 1 v 5)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_06  GROUP bu COMMAND bu_test opt 1 v 6)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_07  GROUP bu COMMAND bu_test opt 1 v 7)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_08  GROUP bu COMMAND bu_test opt 1 v 8)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_09  GROUP bu COMMAND bu_test opt 1 v 9)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_10  GROUP bu COMMAND bu_test opt 1 v 10)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_11  GROUP bu COMMAND bu_test opt 1 v 11)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_12  GROUP bu COMMAND bu_test opt 1 v 12)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_13  GROUP bu COMMAND bu_test opt 1 v 13)
BRLCAD_ADD_TEST(NAME bu_opt_1_v_14  GROUP bu COMMAND bu_test opt 1 v 14)

# Help option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_h_01  GROUP bu COMMAND bu_test opt 1 h 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_02  GROUP bu COMMAND bu_test opt 1 h 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_03  GROUP bu COMMAND bu_test opt 1 h 3)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_04  GROUP bu COMMAND bu_test opt 1 h 4)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_05  GROUP bu COMMAND bu_test opt 1 h 5)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_06  GROUP bu COMMAND bu_test opt 1 h 6)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_07  GROUP bu COMMAND bu_test opt 1 h 7)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_08  GROUP bu COMMAND bu_test opt 1 h 8)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_09  GROUP bu COMMAND bu_test opt 1 h 9)
BRLCAD_ADD_TEST(NAME bu_opt_1_h_10  GROUP bu COMMAND bu_test opt 1 h 10)

# Boolean option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_b_01  GROUP bu COMMAND bu_test opt 1 b 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_b_02  GROUP bu COMMAND bu_test opt 1 b 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_b_03  GROUP bu COMMAND bu_test opt 1 b 3)
BRLCAD_ADD_TEST(NAME bu_opt_1_b_04  GROUP bu COMMAND bu_test opt 1 b 4)

# String option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_s_01  GROUP bu COMMAND bu_test opt 1 s 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_s_02  GROUP bu COMMAND bu_test opt 1 s 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_s_03  GROUP bu COMMAND bu_test opt 1 s 3)
BRLCAD_ADD_TEST(NAME bu_opt_1_s_04  GROUP bu COMMAND bu_test opt 1 s 4)
BRLCAD_ADD_TEST(NAME bu_opt_1_s_05  GROUP bu COMMAND bu_test opt 1 s 5)

# Integer option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_i_01  GROUP bu COMMAND bu_test opt 1 i 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_i_02  GROUP bu COMMAND bu_test opt 1 i 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_i_03  GROUP bu COMMAND bu_test opt 1 i 3)
BRLCAD_ADD_TEST(NAME bu_opt_1_i_04  GROUP bu COMMAND bu_test opt 1 i 4)

# Long int option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_l_01  GROUP bu COMMAND bu_test opt 1 l 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_l_02  GROUP bu COMMAND bu_test opt 1 l 2)

# fastf_t option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_f_01  GROUP bu COMMAND bu_test opt 1 f 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_f_02  GROUP bu COMMAND bu_test opt 1 f 2)
BRLCAD_ADD_TEST(NAME bu_opt_1_f_03  GROUP bu COMMAND bu_test opt 1 f 3)

# Multiple flag option testing
BRLCAD_ADD_TEST(NAME bu_opt_1_mf_01  GROUP bu COMMAND bu_test opt 1 m 1)
BRLCAD_ADD_TEST(NAME bu_opt_1_mf_02  GROUP bu COMMAND bu_test opt 1 m 2)

# non-static var assignment option testing (and also complex
# custom arg processing testing)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_00  GROUP bu COMMAND bu_test opt 2 C 0)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_01  GROUP bu COMMAND bu_test opt 2 C 1)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_02  GROUP bu COMMAND bu_test opt 2 C 2)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_03  GROUP bu COMMAND bu_test opt 2 C 3)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_04  GROUP bu COMMAND bu_test opt 2 C 4)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_05  GROUP bu COMMAND bu_test opt 2 C 5)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_06  GROUP bu COMMAND bu_test opt 2 C 6)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_07  GROUP bu COMMAND bu_test opt 2 C 7)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_08  GROUP bu COMMAND bu_test opt 2 C 8)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_09  GROUP bu COMMAND bu_test opt 2 C 9)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_10  GROUP bu COMMAND bu_test opt 2 C 10)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_11  GROUP bu COMMAND bu_test opt 2 C 11)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_12  GROUP bu COMMAND bu_test opt 2 C 12)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_13  GROUP bu COMMAND bu_test opt 2 C 13)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_14  GROUP bu COMMAND bu_test opt 2 C 14)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_15  GROUP bu COMMAND bu_test opt 2 C 15)
BRLCAD_ADD_TEST(NAME bu_opt_2_color_16  GROUP bu COMMAND bu_test opt 2 C 16)

# vector tests
BRLCAD_ADD_TEST(NAME bu_opt_3_vect_00  GROUP bu COMMAND bu_test opt 3 V 0)
BRLCAD_ADD_TEST(NAME bu_opt_3_vect_01  GROUP bu COMMAND bu_test opt 3 V 1)
BRLCAD_ADD_TEST(NAME bu_opt_3_vect_02  GROUP bu COMMAND bu_test opt 3 V 2)
BRLCAD_ADD_TEST(NAME bu_opt_3_vect_03  GROUP bu COMMAND bu_test opt 3 V 3)
BRLCAD_ADD_TEST(NAME bu_opt_3_vect_04  GROUP bu COMMAND bu_test opt 3 V 4)

#
#  *********** datetime.c tests ************
#

foreach(num RANGE 0 11)
  BRLCAD_ADD_TEST(NAME "bu_datetime${num}" GROUP bu COMMAND bu_test datetime "${num}")
endforeach()

#
#  *********** hash.c tests ************
#
BRLCAD_ADDEXEC(bu_hash hash.cpp libbu TEST)
BRLCAD_CTEST_EXEC(bu_hash bu_hash)
BRLCAD_ADD_TEST(NAME bu_hash_noop         GROUP bu_hash COMMAND bu_hash 0)
BRLCAD_ADD_TEST(NAME bu_hash_one_entry    GROUP bu_hash COMMAND bu_hash 1)
BRLCAD_ADD_TEST(NAME bu_hash_lorem_ipsum  GROUP bu_hash COMMAND bu_hash 2)

#
#  *********** humanize_number.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_humanize_number_BSD GROUP bu COMMAND bu_test humanize_number)

#
#  *********** uuid.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_uuid_encode GROUP bu COMMAND bu_test uuid)

#BRLCAD_ADD_TEST(NAME bu_uuid_create  GROUP bu COMMAND bu_test uuid 0)
#BRLCAD_ADD_TEST(NAME bu_uuid_compare GROUP bu COMMAND bu_test uuid 1)
#BRLCAD_ADD_TEST(NAME bu_uuid_encode  GROUP bu COMMAND bu_test uuid 2)

#
#  *********** ptbl.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_ptbl_init_default GROUP bu COMMAND bu_test ptbl init)
BRLCAD_ADD_TEST(NAME bu_ptbl_init_0 GROUP bu COMMAND bu_test ptbl init 0)
BRLCAD_ADD_TEST(NAME bu_ptbl_init_10000 GROUP bu COMMAND bu_test ptbl init 10000)

BRLCAD_ADD_TEST(NAME bu_ptbl_reset GROUP bu COMMAND bu_test ptbl reset)

BRLCAD_ADD_TEST(NAME bu_ptbl_ins GROUP bu COMMAND bu_test ptbl ins)
BRLCAD_ADD_TEST(NAME bu_ptbl_ins_uniq GROUP bu COMMAND bu_test ptbl ins uniq)
BRLCAD_ADD_TEST(NAME bu_ptbl_locate GROUP bu COMMAND bu_test ptbl locate)

BRLCAD_ADD_TEST(NAME bu_ptbl_rm_cons GROUP bu COMMAND bu_test ptbl rm cons)
BRLCAD_ADD_TEST(NAME bu_ptbl_rm_mix GROUP bu COMMAND bu_test ptbl rm mix)

BRLCAD_ADD_TEST(NAME bu_ptbl_cat GROUP bu COMMAND bu_test ptbl cat)
BRLCAD_ADD_TEST(NAME bu_ptbl_cat_uniq GROUP bu COMMAND bu_test ptbl cat uniq)

BRLCAD_ADD_TEST(NAME bu_ptbl_trunc GROUP bu COMMAND bu_test ptbl trunc)

#
#  *********** hook.c tests ************
#

BRLCAD_ADD_TEST(NAME bu_hook_basic GROUP bu COMMAND bu_test hook basic)
BRLCAD_ADD_TEST(NAME bu_hook_multiadd GROUP bu COMMAND bu_test hook multiadd)
BRLCAD_ADD_TEST(NAME bu_hook_saverestore GROUP bu COMMAND bu_test hook saverestore)

#
#  *********** process.c tests ************
#

# Make a binary to launch as a subprocess, and add it as
# dependency of bu_test to make sure it is present when
# bu_test runs its process tests
BRLCAD_ADDEXEC(bu_subprocess subprocess.cpp libbu TEST)
BRLCAD_CTEST_EXEC(bu_subprocess bu_subprocess)
BRLCAD_ADD_TEST(NAME bu_process_basic GROUP bu_subprocess COMMAND bu_test process "$<TARGET_FILE:bu_subprocess>" basic)
BRLCAD_ADD_TEST(NAME bu_process_abort GROUP bu_subprocess COMMAND bu_test process "$<TARGET_FILE:bu_subprocess>" abort)

#  *********** mappedfile.c tests ************
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_1 GROUP bu COMMAND bu_test mappedfile 1 1)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_1 GROUP bu COMMAND bu_test mappedfile 2 1)
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_16 GROUP bu COMMAND bu_test mappedfile 1 16)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_16 GROUP bu COMMAND bu_test mappedfile 2 16)
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_128 GROUP bu COMMAND bu_test mappedfile 1 128)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_128 GROUP bu COMMAND bu_test mappedfile 2 128)
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_1024 GROUP bu COMMAND bu_test mappedfile 1 1024)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_1024 GROUP bu COMMAND bu_test mappedfile 2 1024)
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_2048 GROUP bu COMMAND bu_test mappedfile 1 2048)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_2048 GROUP bu COMMAND bu_test mappedfile 2 2048)
BRLCAD_ADD_TEST(NAME bu_mappedfile_serial_16384 GROUP bu COMMAND bu_test mappedfile 1 16384)
BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_16384 GROUP bu COMMAND bu_test mappedfile 2 16384)
BRLCAD_ADD_TEST(NAME bu_mappedfile_repeat_serial_10 GROUP bu COMMAND bu_test mappedfile 3 10)
BRLCAD_ADD_TEST(NAME bu_mappedfile_repeat_parallel_10 GROUP bu COMMAND bu_test mappedfile 4 10)
#BRLCAD_ADD_TEST(NAME bu_mappedfile_parallel_free GROUP bu COMMAND bu_test mappedfile 5)

#
#  *********** realpath.c tests ************
#
BRLCAD_ADD_TEST(NAME bu_file_realpath_1 GROUP bu COMMAND bu_test realpath 1)
BRLCAD_ADD_TEST(NAME bu_file_realpath_2 GROUP bu COMMAND bu_test realpath 2)

#
#  *********** bu_dlopen/bu_dlsym test ************
#
add_subdirectory(dylib)

CMAKEFILES(
  tests_bitv.cmake
  tests_vls.cmake
  dylib/README.txt
  dylib/CMakeLists.txt
  dylib/plugin_1.cpp
  dylib/plugin_2.cpp
  dylib/dylib.c
  dylib/run.c
  dylib/dylib.h
  )

CMAKEFILES(CMakeLists.txt)

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8 textwidth=0 wrapmargin=0
