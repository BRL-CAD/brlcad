#------------------------------------------------------------- -*- makefile -*-
#
# Makefile for ITcl
#
# Basic build, test and install
#   nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\installdir TCLDIR=c:\path\to\tcl\source
#   nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\installdir TCLDIR=c:\path\to\tcl\source test
#   nmake /s /nologo /f makefile.vc INSTALLDIR=c:\path\to\installdir TCLDIR=c:\path\to\tcl\source install
#
# For other build options (debug, static etc.)
# See TIP 477 (https://core.tcl.tk/tips/doc/trunk/tip/477.md) for
# detailed documentation.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
#------------------------------------------------------------------------------

PROJECT         = itcl
NEED_TCL_SOURCE = 1
RCFILE      = itcl.rc

!include "rules-ext.vc"

PRJ_OBJS = \
	$(TMP_DIR)\itcl_bicmds.obj \
	$(TMP_DIR)\itcl_class.obj \
	$(TMP_DIR)\itcl_cmds.obj \
	$(TMP_DIR)\itcl_ensemble.obj \
	$(TMP_DIR)\itcl_linkage.obj \
	$(TMP_DIR)\itcl_migrate.obj \
	$(TMP_DIR)\itcl_methods.obj \
	$(TMP_DIR)\itcl_objects.obj \
	$(TMP_DIR)\itcl_parse.obj \
	$(TMP_DIR)\itcl_util.obj \
	$(TMP_DIR)\itclStubInit.obj \
!if !$(STATIC_BUILD)
	$(TMP_DIR)\dllEntryPoint.obj \
	$(TMP_DIR)\itcl.res
!endif

PRJ_STUBOBJS = $(TMP_DIR)\itclStubLib.obj

PRJ_DEFINES = /D_CRT_SECURE_NO_WARNINGS
!if $(DEBUG)
PRJ_DEFINES = $(PRJ_DEFINES) /DITCL_DEBUG
!endif

PRJ_HEADERS_PUBLIC = \
	$(GENERICDIR)\itcl.h \
	$(GENERICDIR)\itclDecls.h


# Define the standard targets except we have a custom test target
DISABLE_TARGET_test = 1
!include "$(_RULESDIR)\targets.vc"

pkgindex:   $(OUT_DIR)\pkgIndex.tcl
$(OUT_DIR)\pkgIndex.tcl:
	@$(COPY) << "$(OUT_DIR)\pkgIndex.tcl"
if {[package vsatisfies 8.0 [package provide Tcl]]} {
    set add 80
} else {
    set add {t}
}
if {[::tcl::pkgconfig get debug] && \
        [file exists [file join $$dir itcl$(VERSION)$${add}g.dll]]} {
    package ifneeded Itcl $(DOTVERSION) [list load [file join $$dir itcl$(VERSION)$${add}g.dll] Itcl]
} else {
    package ifneeded Itcl $(DOTVERSION) [list load [file join $$dir itcl$(VERSION)$${add}.dll] Itcl]
}
unset add
<<

!if $(STATIC_BUILD)
test :
	@echo test target not supported for a static library.
!else
test : setup $(PROJECT)
	$(TCLSH) ..\tests\all.tcl $(TESTFLAGS) -loadfile <<
	set env(ITCL_LIBRARY) [file normalize [file join $(MAKEDIR:\=/) .. library]]
	package ifneeded $(PROJECT) $(DOTVERSION) [list load [file normalize [file join $(MAKEDIR:\=/) $(PRJLIB:\=/)]]]
<<
!endif

genstubs:
!if $(TCLINSTALL)
	@echo Need the source distribution to regenerate the Stubs table.
!else
	$(TCLSH) $(TOOLSDIR)\genStubs.tcl $(GENERICDIR) \
	       $(GENERICDIR)\$(PROJECT).decls $(GENERICDIR)\$(PROJECT)Int.decls
!endif
