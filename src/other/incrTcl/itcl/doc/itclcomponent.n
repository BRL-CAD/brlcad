'\"
'\" Copyright (c) 2008 Arnulf Wiedemann
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\"
'\" RCS: $Id$
'\"
.so man.macros
.TH component n 4.0 itcl "[incr\ Tcl]"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
component \- define components for extendedclass, widget or widgetadaptor
.sp
Parts of this description are "borrowed" from Tcl extension [snit], as the functionality is mostly identical.
.sp
\fBWARNING!\fR
.br
This is new functionality in [incr Tcl] where the API can still change!!
.SH SYNOPSIS
\fBpublic component \fIcomp\fR ?\fB-inherit\fR?
.br
\fBprotected component \fIcomp\fR ?\fB-inherit\fR?
.br
\fBprivate component \fIcomp\fR ?\fB-inherit\fR?
.br
.sp
.BE

.SH DESCRIPTION
.PP
The \fBcomponent\fR command is used inside an \fB[incr\ Tcl]\fR
extendedclass/widget/widgetadaptor definition to define components.
.sp
Explicitly declares a component called comp, and automatically defines
the component's instance variable.
.sp
If the \fI-inherit\fR option is specified then all unknown methods
and options will be delegated to this component. The name -inherit
implies that instances of this new type inherit, in a sense,
the methods and options of the component. That is,
-inherit yes is equivalent to:
.sp
.CS
component mycomp
delegate option * to mycomp
delegate method * to mycomp
.CE
.sp

.SH KEYWORDS
component, widget, widgetadaptor, extendedclass
