.\" Automatically generated by Pod::Man 2.16 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` 
.    ds C' 
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "UUID-CONFIG 1"
.TH UUID-CONFIG 1 "OSSP uuid 1.6.2" "04-Jul-2008" "Universally Unique Identifier"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBuuid-config\fR \- \fB\s-1OSSP\s0 uuid \s-1API\s0 build utility\fR
.SH "VERSION"
.IX Header "VERSION"
\&\s-1OSSP\s0 uuid \s-11.6.2 (04-Jul-2008)\s0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBuuid-config\fR
[\fB\-\-help\fR]
[\fB\-\-version\fR]
[\fB\-\-all\fR]
[\fB\-\-prefix\fR]
[\fB\-\-exec\-prefix\fR]
[\fB\-\-bindir\fR]
[\fB\-\-libdir\fR]
[\fB\-\-includedir\fR]
[\fB\-\-mandir\fR]
[\fB\-\-datadir\fR]
[\fB\-\-acdir\fR]
[\fB\-\-cflags\fR]
[\fB\-\-ldflags\fR]
[\fB\-\-libs\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBuuid-config\fR program is a little helper utility for easy configuring and
building applications based on the \fIuuid\fR\|(3) library.  It can be used to query the
C compiler and linker flags which are required to correctly compile and link
the application against the \fIuuid\fR\|(3) library.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBuuid-config\fR accepts the following options:
.IP "\fB\-\-help\fR" 2
.IX Item "--help"
Prints the short usage information.
.IP "\fB\-\-version\fR" 2
.IX Item "--version"
Prints the version number and date of the installed \fIuuid\fR\|(3) library.
.IP "\fB\-\-all\fR" 2
.IX Item "--all"
Forces the output of all flags, that is, including extra flags which are not
\&\fB\s-1OSSP\s0 uuid\fR specific.
.IP "\fB\-\-prefix\fR" 2
.IX Item "--prefix"
Prints the installation prefix of architecture independent files
.IP "\fB\-\-exec\-prefix\fR" 2
.IX Item "--exec-prefix"
Prints the installation prefix of architecture dependent files.
.IP "\fB\-\-bindir\fR" 2
.IX Item "--bindir"
Prints the installation directory of binaries.
.IP "\fB\-\-libdir\fR" 2
.IX Item "--libdir"
Prints the installation directory of libraries.
.IP "\fB\-\-includedir\fR" 2
.IX Item "--includedir"
Prints the installation directory of include headers.
.IP "\fB\-\-mandir\fR" 2
.IX Item "--mandir"
Prints the installation directory of manual pages.
.IP "\fB\-\-datadir\fR" 2
.IX Item "--datadir"
Prints the installation directory of shared data.
.IP "\fB\-\-acdir\fR" 2
.IX Item "--acdir"
Prints the installation directory of \fBautoconf\fR data.
.IP "\fB\-\-cflags\fR" 2
.IX Item "--cflags"
Prints the C compiler flags which are needed to compile the \fIuuid\fR\|(3)\-based
application. The output is usually added to the \f(CW\*(C`CFLAGS\*(C'\fR uuidiable of the
applications \f(CW\*(C`Makefile\*(C'\fR.
.IP "\fB\-\-ldflags\fR" 2
.IX Item "--ldflags"
Prints the linker flags (\f(CW\*(C`\-L\*(C'\fR) which are needed to link the application with
the \fIuuid\fR\|(3) library. The output is usually added to the \f(CW\*(C`LDFLAGS\*(C'\fR uuidiable of
the applications \f(CW\*(C`Makefile\*(C'\fR.
.IP "\fB\-\-libs\fR" 2
.IX Item "--libs"
Prints the library flags (\f(CW\*(C`\-l\*(C'\fR) which are needed to link the application with
the C \fIuuid\fR\|(3) library. The output is usually added to the \f(CW\*(C`LIBS\*(C'\fR uuidiable of the
applications \f(CW\*(C`Makefile\*(C'\fR.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 4
\& CC      = cc
\& CFLAGS  = \-O \`uuid\-config \-\-cflags\`
\& LDFLAGS = \`uuid\-config \-\-ldflags\`
\& LIBS    = \-lm \`uuid\-config \-\-libs\`
\&
\& all: foo
\& foo: foo.o
\&     $(CC) $(LDFLAGS) \-o foo foo.o $(LIBS)
\& foo.o: foo.c
\&     $(CC) $(CFLAGS) \-c foo.c
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIuuid\fR\|(3), \fIuuid\fR\|(1), \fIOSSP::uuid\fR\|(3).
