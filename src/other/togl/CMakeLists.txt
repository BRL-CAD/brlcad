CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(COMMAND CMAKE_POLICY)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

PROJECT(TOGL)

SET(CMAKE_MODULE_PATH ${TOGL_SOURCE_DIR}/CMake;${CMAKE_MODULE_PATH})

find_package(X11)
find_package(GL)
find_package(TCL)

# If we have only a target and not a full working exec, it's up to
# a parent CMake system to define TK_SYSTEM_GRAPHICS
get_filename_component(FULL_EXEC_PATH ${TCL_WISH_EXECUTABLE} ABSOLUTE)
IF(${TCL_WISH_EXECUTABLE} MATCHES ${FULL_EXEC_PATH})
	TK_GRAPHICS_SYSTEM(${TCL_WISH_EXECUTABLE} TK_SYSTEM_GRAPHICS)
ENDIF(${TCL_WISH_EXECUTABLE} MATCHES ${FULL_EXEC_PATH})
IF(TK_SYSTEM_GRAPHICS MATCHES "x11")
   SET(TOGL_WINDOWINGSYSTEM "TOGL_X11")
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "x11")
IF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
	SET(TOGL_WINDOWINGSYSTEM "TOGL_AGL")
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "aqua")
IF(TK_SYSTEM_GRAPHICS MATCHES "win32")
	SET(TOGL_WINDOWINGSYSTEM "TOGL_WGL")
ENDIF(TK_SYSTEM_GRAPHICS MATCHES "win32")

# System checks
INCLUDE(CheckFunctions)
CMAKE_HEADER_STDC()
CHECK_INCLUDE_FILE(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILE(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILE(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILE(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILE(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILE(strings.h HAVE_STRINGS_H) 
CHECK_INCLUDE_FILE(inttypes.h HAVE_INTTYPES_H) 
CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H) 
CHECK_INCLUDE_FILE(stddef.h HAVE_STDDEF_H) 
CHECK_INCLUDE_FILE(unistd.h HAVE_UNISTD_H) 
CHECK_INCLUDE_FILE(limits.h HAVE_LIMITS_H) 
CHECK_INCLUDE_FILE(sys/param.h HAVE_SYS_PARAM_H)

OPTION(USE_TCL_STUBS "Use Tcl Stubs" ON)
OPTION(USE_TK_STUBS "Use Tk Stubs" ON)

#TODO
#cmakedefine _LARGEFILE64_SOURCE 
#cmakedefine TCL_WIDE_INT_IS_LONG 

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/include/togl_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/include/togl_config.h)


SET(TOGL_PKGNAME Togl)
SET(TOGL_PKGVERSION "2.1")

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(demo)

# Create the pkgIndex.tcl file.
GET_TARGET_PROPERTY(TOGL_LIBLOCATION togl LOCATION_${CMAKE_BUILD_TYPE})
GET_FILENAME_COMPONENT(TOGL_LIBNAME ${TOGL_LIBLOCATION} NAME)
FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/pkgIndex.tcl "package ifneeded ${TOGL_PKGNAME} ${TOGL_PKGVERSION} [list load [file join $dir .. .. ${LIB_DIR} ${TOGL_LIBNAME} }] togl]")
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/pkgIndex.tcl DESTINATION lib/${TOGL_PKGNAME}${TOGL_PKGVERSION})

FILE(WRITE ${CMAKE_BINARY_DIR}/lib/${TOGL_PKGNAME}${TOGL_PKGVERSION}/pkgIndex.tcl "package ifneeded ${TOGL_PKGNAME} ${TOGL_PKGVERSION} [list load [file join $dir ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} ${TOGL_LIBNAME}] ${TOGL_PKGNAME}]")
