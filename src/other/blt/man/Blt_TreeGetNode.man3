'\"
'\" Copyright 1991-1998 by Bell Labs Innovations for Lucent Technologies.
'\"
'\" Permission to use, copy, modify, and distribute this software and its
'\" documentation for any purpose and without fee is hereby granted, provided
'\" that the above copyright notice appear in all copies and that both that the
'\" copyright notice and warranty disclaimer appear in supporting documentation,
'\" and that the names of Lucent Technologies any of their entities not be used
'\" in advertising or publicity pertaining to distribution of the software
'\" without specific, written prior permission.
'\"
'\" Lucent Technologies disclaims all warranties with regard to this software,
'\" including all implied warranties of merchantability and fitness.  In no event
'\" shall Lucent Technologies be liable for any special, indirect or
'\" consequential damages or any damages whatsoever resulting from loss of use,
'\" data or profits, whether in an action of contract, negligence or other
'\" tortuous action, arising out of or in connection with the use or performance
'\" of this software.  
'\"
'\"
.so man.macros
.TH Blt_TreeGetNode 3 BLT_VERSION BLT "BLT Library Procedures"
.BS
.SH NAME
Blt_TreeGetNode \- Finds the node from the ID.
.SH SYNOPSIS
.nf
\fB#include <bltTree.h>\fR
.sp
Blt_TreeNode
\fBBlt_TreeGetNode\fR(\fItree\fR, \fInumber\fR)
.SH ARGUMENTS
.AS "unsigned int" number
.AP Blt_Tree tree in
Tree containing the requested node.
.AP "unsigned int" number in
Serial number of the requested node.  
.BE
.SH DESCRIPTION
This procedure returns a node in a tree object 
based upon a give serial number.  
The node is searched using the serial number.  
.PP
The arguments are as follows:
.TP 1i
\fItree\fR
The tree containing the requested node.
.TP 1i
\fInumber\fR
The serial number of the requested node.
.SH RETURNS
The node represented by the given serial number is returned.  If no
node with that ID exists in \fItree\fR then NULL is returned.
.SH EXAMPLE
The following example gets the node from a serial number.
.CS
unsigned int number;
Blt_TreeNode node;
Blt_TreeToken token;
...
node = Blt_TreeGetNode(token, number);
if (node == NULL) {
    printf("no node with ID %d exists\\n", number);
} else {
    printf("node found: label is %s\\n", Blt_TreeNodeLabel(node));
}
.CE
.SH KEYWORDS
Tcl_TreeCreateNode, Tcl_TreeDeleteNode
