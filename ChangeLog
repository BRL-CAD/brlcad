2010-12-07 23:29  brlcad

	* [r41556] src/librt/cmd.c:
	  allow the command table to have a negative max count, effectively
	  implying unlimited.

2010-12-07 23:25  brlcad

	* [r41555] src/librt/cmd.c:
	  ws indent cleanup. rt_do_cmd() is precariously out of place
	  residing in librt. make a note that it needs to move to libbu,
	  even though it'll likely be minimally impacting.

2010-12-07 23:14  brlcad

	* [r41554] src/libged/preview.c:
	  working towards repair. first step: the benign ws changes.

2010-12-07 23:05  starseeker

	* [r41553] TODO:
	  Reverted preview, will need to sort out after release. Final
	  release process now beginning.

2010-12-07 22:55  starseeker

	* [r41552] src/libged/preview.c:
	  Revert preview to the state of commit 37421 (plus a local
	  definition of MAXARGS) - will need more work after release.

2010-12-07 22:01  brlcad

	* [r41551] NEWS:
	  erik (re)ported the benchmark suite (pixcmp, benchmark script) to
	  windows, albeit still requiring a posix shell and probably more
	  (works on cygwin).

2010-12-07 21:56  brlcad

	* [r41550] NEWS:
	  original comment from keith was closer to the user-visible
	  feature mark. improved NURBS wireframes. he added special
	  wire-frame drawing routines for surfaces whose 3d edges tend to
	  yield a poor graphical representation.

2010-12-07 21:51  brlcad

	* [r41549] NEWS:
	  reiterate the format. NEWS items should be just one line per
	  user-visible change. clarify credits.

2010-12-07 21:41  bob1961

	* [r41548] src/tclscripts/archer/CombEditFrame.tcl:
	  This update affects setting the keypoint in any of the "Relative
	  Edit" tables. If the row in question has been selected, all
	  selected rows will have their keypoints set using the view
	  center.

2010-12-07 21:24  brlcad

	* [r41547] src/tclscripts/mged/anim.tcl:
	  shouldn't directly use path separators on paths. use file join
	  for portability, passing the buck down to the callers since we
	  need to join individual command names.

2010-12-07 21:01  indianlarry

	* [r41546] src/tclscripts/mged/anim.tcl:
	  Added path separator to sketch paths, also forced single command
	  evaluation

2010-12-07 20:57  starseeker

	* [r41545] src/libbu/parse.c:
	  Switch loc in the main branch too.

2010-12-07 19:54  erikgreenwald

	* [r41541] NEWS:
	  mention windows benchmark

2010-12-07 19:47  bob1961

	* [r41539] src/tclscripts/lib/Ged.tcl:
	  Fixed a typo in Ged::apropos.

2010-12-07 19:42  indianlarry

	* [r41538] src/libbu/image.c:
	  Add 'depth' parameter to png_save() for RGB and RGBA formats.

2010-12-07 17:15  indianlarry

	* [r41535] NEWS:
	  Added news item for improved NURBS wire-frame

2010-12-07 15:43  indianlarry

	* [r41533] include/opennurbs_ext.h, src/librt/opennurbs_ext.cpp,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_debug.cpp:
	  Added special wire-frame drawing routines for surfaces who's 3D
	  edges tend to yield a poor graphical representation. These
	  special drawing routines relate to extruded, revolved and closed
	  surfaces and use the surface subdivision tree. To improve
	  performance added a 'depthLimit' parameter to surface subdivision
	  routines for use in wire-frame approximation.

2010-12-07 01:26  brlcad

	* [r41530] src/libbu/parse.c:
	  simplify, break unreached. msvc complains about set statements
	  within expressions, prefer moving them to separate lines.

2010-12-07 00:30  brlcad

	* [r41528] TODO, src/librt/primitives/bot/bot.c:
	  the Tcl_DoOneEvent() event calls make the new bot interface
	  update interactively. this will make the interface stall/hang
	  until the task (bot_decimate, bot_vertex_fuse, etc) completes,
	  but there shouldn't be tcl event calls down in librt regardless.

2010-12-06 23:26  starseeker

	* [r41527] src/librt/primitives/bot/bot.c:
	  Remove the known troublemaker from trunk, too

2010-12-06 22:27  starseeker

	* [r41520] src/libbu/parse.c:
	  Bad developer - don't wipe out old fixes when committing new
	  ones.

2010-12-06 22:07  starseeker

	* [r41519] src/libbu/parse.c:
	  Add parser rework to trunk.

2010-12-06 21:16  r_weiss

	* [r41517] include/bn.h:
	  Updated macro BN_VECT_ARE_PARALLEL in file 'bn.h'. The macro now
	  can identify parallel vectors pointing in the same direction and
	  in opposite directions. This change should improve the results
	  from the mged commands 'facetize' and 'ev'. Initial test results
	  look good but still in process of full testing.

2010-12-06 20:54  erikgreenwald

	* [r41516] TODO:
	  TODO rt/bench confirmed on vista.

2010-12-06 20:53  erikgreenwald

	* [r41515] bench/run.sh:
	  Don't assume bc if dc is not found (but do assume awk as a last
	  ditch attempt, because that's somehow better).

2010-12-06 19:06  bob1961

	* [r41514] src/tclscripts/archer/CombEditFrame.tcl:
	  Update calls to setKeypointVC to account for the selection
	  column.

2010-12-06 18:17  starseeker

	* [r41513] src/libbu/parse.c:
	  The %p option needs to continue if the lookup didn't succeed -
	  fixes the failure in shaders regression test.

2010-12-06 16:04  erikgreenwald

	* [r41511] bench/run.sh:
	  Use a temp file to do the pixcmp test instead of /dev/null.
	  Cygwin fakes a /dev and does not allow opening /dev/null for
	  reading.

2010-12-06 15:58  erikgreenwald

	* [r41510] bench/pixcmp.c:
	  report the right filename when fopen errors

2010-12-06 15:52  erikgreenwald

	* [r41509] misc/win32-msvc8/pixcmp,
	  misc/win32-msvc8/pixcmp/pixcmp.vcproj:
	  Add pixcmp

2010-12-06 15:48  erikgreenwald

	* [r41508] misc/win32-msvc8/brlcad/brlcad.sln:
	  Add pixcmp

2010-12-06 15:41  erikgreenwald

	* [r41507] bench/run.sh:
	  add path info for the msvc build (using cygwin's sh)

2010-12-06 15:38  erikgreenwald

	* [r41506] bench/pixcmp.c:
	  use bu_optind instead of optind (win32 fix)

2010-12-03 23:59  starseeker

	* [r41501] ChangeLog:
	  Update the ChangeLog

2010-12-03 23:41  brlcad

	* [r41500] TODO:
	  only two tasks left for release

2010-12-03 20:54  r_weiss

	* [r41498] src/libbn/plane.c:
	  Updated functions bn_coplanar and bn_isect_line3_line3. Removed
	  the magic number tolerances. Also made additional tolerance
	  changes which should improve facetize and 'ev'. Currently in
	  process of testing. Initial results appear good.

2010-12-03 18:22  bob1961

	* [r41497] src/libged/showmats.c:
	  Added a -a option to showmats for getting only the Accumulated
	  matrix of the specified path.

2010-12-02 23:00  brlcad

	* [r41496] src/libbn/mat.c:
	  callers of bn_ck_mat() have better knowledge about the state that
	  leads up to a bad matrix so don't print by default at this low
	  level. this fixes double-printing of matrices if you open a
	  corrupt v4.

2010-12-02 13:57  brlcad

	* [r41495] include/raytrace.h:
	  rt_uniresource is in librt/globals.c

2010-12-01 20:49  bob1961

	* [r41494] src/tclscripts/archer/AttrGroupsDisplayUtility.tcl:
	  Minor tweak to AttrGroupsDisplayUtility::exportToPng. Changed
	  Text to PNG in typelist.

2010-12-01 14:27  indianlarry

	* [r41493] src/util/bwrect.c, src/util/mac-pix.c,
	  src/util/plgetframe.c:
	  minor fixes to get to compile, brlcad probably not finished with
	  yet ;^)

2010-12-01 07:19  brlcad

	* [r41492] sh/conversion.sh:
	  add the tally object count to the individual status lines as well
	  so we know how many we've processed thus far. also need to escape
	  the quotes or object/file names with spaces in them otherwise
	  printf will be unhappy.

2010-12-01 06:38  brlcad

	* [r41491] sh/conversion.sh:
	  clean up and simplify the elapsed time calculation by using
	  seconds since epoch. may or may not be posix, but seems to work
	  well on bsd, linux, mac. also tighten up the status output lines
	  including a running tally of the elapsed time via '22756'

2010-12-01 06:19  brlcad

	* [r41490] src/util/ap-pix.c, src/util/bary.c, src/util/bw-pix.c,
	  src/util/bw3-pix.c, src/util/bwcrop.c, src/util/bwdiff.c,
	  src/util/bwfilter.c, src/util/bwrect.c, src/util/mac-pix.c,
	  src/util/pixborder.c, src/util/pixpaste.c, src/util/pixrot.c,
	  src/util/pl-X.c, src/util/plgetframe.c:
	  more verbose quellage, now cross-platform to newer gcc on linux
	  where we're catching lots of failures to check the return value
	  on fwrite/fread/scanf. add corresponding checks and failure
	  handling.

2010-12-01 04:13  brlcad

	* [r41489] src/util/pc_test.c, src/util/pix-bw.c,
	  src/util/pix-orle.c, src/util/pix-ps.c, src/util/pix-rle.c,
	  src/util/pix-sun.c, src/util/pix-yuv.c, src/util/pix3filter.c,
	  src/util/pixbackgnd.c, src/util/pixbgstrip.c,
	  src/util/pixblend.c, src/util/pixborder.c, src/util/pixcount.c,
	  src/util/pixcut.c, src/util/pixembed.c, src/util/pixfields.c,
	  src/util/pixfieldsep.c, src/util/pixfilter.c,
	  src/util/pixinterp2x.c, src/util/pixmerge.c, src/util/pixmorph.c,
	  src/util/pixpaste.c, src/util/pixrect.c, src/util/pixsaturate.c,
	  src/util/pixscale.c, src/util/pixtile.c, src/util/pixuntile.c,
	  src/util/pl-asc.c, src/util/pl-pl.c, src/util/pl-ps.c,
	  src/util/pl-tek.c, src/util/pldebug.c, src/util/plline2.c,
	  src/util/plrot.c, src/util/plstat.c, src/util/png-bw.c,
	  src/util/png-pix.c, src/util/png_info.c,
	  src/util/roots_example.c, src/util/sun-pix.c, src/util/terrain.c,
	  src/util/texturescale.c, src/util/ttcp.c, src/util/xyz-pl.c:
	  whoosh! quell the remainder of verbose warnings on the utility
	  tools. many issues including unused params, unused vars,
	  shadowings, missing headers, exact floating point comparisons,
	  etc.

2010-12-01 02:45  brlcad

	* [r41488] NEWS:
	  removed the obsolete pl-sgi plot-to-image utility.

2010-12-01 02:44  brlcad

	* [r41487] src/util/Makefile.am, src/util/pl-sgi.1,
	  src/util/pl-sgi.c:
	  remove the obsolete pl-sgi converter. SGI Iris 3D is no more.

2010-12-01 00:14  erikgreenwald

	* [r41486] TODO:
	  note that the example needs to be updated

2010-11-30 18:19  indianlarry

	* [r41485] include/opennurbs_ext.h, src/librt/opennurbs_ext.cpp:
	  Made some changes to our surface subdivision routines. Now the
	  first step in our surface subdivision is to divide on the surface
	  knots (subdivideSurfaceByKnots()). The idea here is that major
	  surface directional changes take place at the knots and that the
	  surface behavior between adjacent knots is fairly well behaved.
	  After subdividing at knots we further divide using flatness
	  criteria. Also loosened surface flatness criteria
	  BREP_SURFACE_FLATNESS to 0.80.

2010-11-30 16:08  indianlarry

	* [r41484] src/libged/get_type.c, src/libged/search.c,
	  src/libged/wdb_obj.c, src/librt/db5_types.c:
	  Added DB5_MINORTYPE_BRLCAD_BREP 'brep' type hooks to type_table[]
	  and 'db get_type' related functions.

2010-11-30 15:34  indianlarry

	* [r41483] include/brep.h, src/librt/primitives/brep/brep.cpp:
	  Try to iterate to a solution within
	  BREP_INTERSECTION_ROOT_EPSILON, if cannot get to that resolution
	  check result and accept if within BREP_INTERSECTION_ROOT_SETTLE.

2010-11-30 15:25  indianlarry

	* [r41482] src/librt/primitives/brep/brep_debug.cpp:
	  Added BREP knot plotting routing to 'brep' command for debugging.
	  Also modified some of the 'brep' command logging to build a
	  string and return to 'mged' through vls string(problems with
	  'mged' when dumping large amounts of blather to stderr)

2010-11-30 14:15  brlcad

	* [r41481] src/util/azel.c, src/util/buffer.c, src/util/bw-a.c,
	  src/util/bw-imp.c, src/util/bw-png.c, src/util/bw-ps.c,
	  src/util/bw-rle.c, src/util/bwcrop.c, src/util/bwfilter.c,
	  src/util/bwhisteq.c, src/util/bwscale.c, src/util/bwstat.c,
	  src/util/dbcp.c, src/util/decimate.c, src/util/dpix-pix.c,
	  src/util/dsp_add.c, src/util/dunncomm.c, src/util/dunnsnap.c,
	  src/util/fix_polysolids.c, src/util/imgdims.c, src/util/loop.c,
	  src/util/lowp.c, src/util/mac-pix.c, src/util/pl-X.c,
	  src/util/pl-dm.c:
	  quiet LOTS of verbose compilation warnings for various issues
	  including shadow vars, return from non-void, unused params,
	  unused vars, floating point comparisons, missing headers, and
	  signedness matching

2010-11-30 14:12  brlcad

	* [r41480] include/raytrace.h:
	  rt_g structure was using int for debug information making the
	  structure size variable and making the debug flags declarations
	  potentially not match the variable they are compared against.
	  make both debug vars (debug and NMG_debug) be uint32_t instead of
	  int.

2010-11-30 14:09  brlcad

	* [r41479] configure.ac:
	  fcntl.h seems to be safe, possibly others too so make a section
	  for headers that don't need to be tested for even if they aren't
	  c89

2010-11-30 14:04  starseeker

	* [r41478] src/libgcv/NOTES:
	  Add notes from SIGGRAPH about Blender and gamekit

2010-11-29 23:45  brlcad

	* [r41477] src/fb/Makefile.am:
	  enable strict compilation for the fb directory. running clean on
	  Mac and Linux with extra warnings enabled.

2010-11-29 23:06  brlcad

	* [r41476] autogen.sh:
	  grep the right Makefile.am file.

2010-11-29 22:57  brlcad

	* [r41475] TODO:
	  verified that nmg conversion is overall worse since 7.16.10
	  release, so need to test which commits are problematic.

2010-11-26 08:13  brlcad

	* [r41467] sh/conversion.sh:
	  add the completion date just as a double-sanity.

2010-11-25 05:48  brlcad

	* [r41466] sh/conversion.sh:
	  document the timer complexity a little bit explaining why things
	  are as complicated as they are. pushing the limits of shell
	  scripting.

2010-11-25 05:37  brlcad

	* [r41465] sh/conversion.sh:
	  no longer need the start and stop timers since our method
	  required inlining the timer and killing in the parent. forgot to
	  mention that r41464 MAXTIME limit was bumped back up to 5min
	  since orphaned sleep processes no longer accumulate.

2010-11-25 05:30  brlcad

	* [r41464] sh/conversion.sh:
	  more process trickery so that we can abort the limit timer that
	  kills facetize and reports without the dreaded killed process
	  'Terminated' messages. this is achieved by not invoking a
	  subshell, redirecting stderr through a pipe, and killing the
	  sleep children in the same parent shell. not pretty but gets the
	  job done. couldn't figure out how to get double-subshell (via
	  shell functions) to work so these have to be in inlined.

2010-11-25 02:07  r_weiss

	* [r41463] src/libbn/plane.c:
	  Made changes to functions bn_isect_line3_line3 and bn_coplanar.
	  Updated most of the tolerances in these functions using values
	  determined by capturing values during test runs and determining
	  where the values converge to 0, 1, -1 etc. These tolerances are
	  not perfect and I believe these values should be computed since
	  they can vary. These tolerance changes appear to improve the
	  results of the mged 'ev' command and 'facetize' command and fewer
	  error messages are reported.

2010-11-24 20:37  bob1961

	* [r41462] src/tclscripts/archer/CombEditFrame.tcl:
	  Added the ability to select one or more members of a combination
	  such that setting the edit parameters for one member will set
	  them for all selected members.

2010-11-24 18:08  brlcad

	* [r41461] NEWS:
	  cliff expanded the rtarea documentation with diagrams and
	  additional clarifying information.

2010-11-24 18:05  brlcad

	* [r41460] NEWS:
	  keith ups the anty and fixes a bug in opennurbs processing
	  surfaces with singularities. he removed the IsValid() check in
	  the curve Split() function. this was causing problems upstream in
	  the surface splitting routines when trying to split surface
	  containing singularities. This problem was reported to the
	  opennurbs folks who have identified this as a bug and should be
	  fix that should be in the next release of the open tool kit

2010-11-24 18:00  brlcad

	* [r41459] src/util/bombardier.c:
	  break up the massive tcl script into smaller portioned trunks
	  with dynamic memory in order to comply with portability warnings
	  about string literals longer than 509 characters.

2010-11-24 17:59  brlcad

	* [r41458] src/util/bombardier.h:
	  the bits array needs to be unsigned

2010-11-24 15:07  indianlarry

	* [r41457] src/librt/cut.c:
	  When building cut tree step to next axis(+1) for subdivision not
	  (axis+index).

2010-11-24 13:19  indianlarry

	* [r41456] src/other/openNURBS/opennurbs_nurbscurve.cpp:
	  Removed the IsValid() check in the curve Split() function. This
	  was causing problems upstream in the surface splitting routines
	  when trying to split surface containing singularities. This
	  problem was reported to the opennurbs folks who have identified
	  this as a bug and should be fix that should be in the next
	  release of the open tool kit.

2010-11-23 18:11  brlcad

	* [r41445] sh/conversion.sh:
	  back down to 30 until I figure out a better way to kill all of
	  the lingering sleep processes that build up

2010-11-23 16:01  brlcad

	* [r41441] sh/conversion.sh:
	  jack up the default MAXTIME to 5 minutes. if an object takes
	  longer than that, it'll probably take a LOT longer.

2010-11-23 15:57  brlcad

	* [r41439] sh/conversion.sh:
	  er, need elp before computing avg so reorder. sprinkle a few
	  comments too.

2010-11-23 15:36  brlcad

	* [r41435] sh/conversion.sh:
	  add summary of file and object counts along with the failure
	  counts so we don't have to subtract. also quiet the killing of
	  the timer because of the race condition where it finishes after
	  we get the pid but before the kill. lastly, specifying ksh was
	  just for testing, not required. set sh instead, but go ahead and
	  set posix mode too (just because we can).

2010-11-23 06:22  brlcad

	* [r41432] sh/conversion.sh:
	  put 'instructions' before 'help' so we can get to it without a .g
	  specified.

2010-11-23 04:05  brlcad

	* [r41431] sh/conversion.sh:
	  damn I'm good. implement some scary mad shell scripting here in
	  order to kill long-running conversions while still timing them
	  and capturing their output. to make this happen, we can no longer
	  just use a here document fed to the 'while read' loop because the
	  kill signals sent to the children processes jack it up good.
	  instead, temp override stdin with our object list so the loop
	  continues unabated. add in some timer cleanup for the instances
	  when we finish the conversion long within the time limit and we
	  have a done deal.

2010-11-23 02:35  brlcad

	* [r41430] sh/conversion.sh:
	  boo yah. add elapsed conversion times. this does even a better
	  job than the benchmark since it counts seconds from the beginning
	  of the century and should track time across days/weeks. it
	  reports both cumulative time elapsed, average per object
	  (including process startup overhead), and real time per nmg/bot
	  conversion.

2010-11-23 01:51  brlcad

	* [r41429] sh/conversion.sh:
	  ah, right. support VARIABLE=value arguments. also give more
	  informative failure if we can't find MGED.

2010-11-23 01:42  brlcad

	* [r41428] sh/conversion.sh:
	  add summary count statistics on what percentage and how many
	  objects successfully converted. this required a reworking of how
	  objects are iterated one line at a time (so objects with spaces
	  in their name are handled correctly) using a here document. also
	  add a GED parameter so you can specify which mged you want to use
	  instead of whatever is in your path.

2010-11-22 23:55  brlcad

	* [r41427] sh/conversion.sh:
	  use the same usage when no files are specified

2010-11-22 23:50  brlcad

	* [r41426] sh/conversion.sh:
	  wrap a slew of boilerplate infrastructure similar to the
	  benchmark suite so that we have nice argument process,
	  verbose/quiet options, help & instructions, and clean formatted
	  output. some basic adjustments made to use printf instead of echo

2010-11-22 23:44  brlcad

	* [r41425] bench/run.sh:
	  rename the benchmark log files by swapping benchmark and run so
	  that they're more easily identified as benchmark*.log files or
	  categorically as *run.log files so we can group outputs from
	  other scripts/tools together.

2010-11-22 23:29  davidloman

	* [r41424] src/proc-db:
	  Modify svn:ignore to now ignore ./terrain

2010-11-22 22:05  brlcad

	* [r41422] TODO:
	  merge tracking

2010-11-22 21:58  brlcad

	* [r41421] TODO:
	  solids_on_ray and ray pick menu option seems to be working just
	  fine after the refactor changes.

2010-11-22 20:48  starseeker

	* [r41420] doc/docbook/system/man1/en/rtarea.xml:
	  Thanks Keith - make some changes, better examples for area.

2010-11-22 20:26  starseeker

	* [r41419] doc/docbook/system/man1/en/rtarea.xml:
	  rtarea does indeed present cumulative presented area, but it does
	  not represent the presented area of a group.

2010-11-22 19:47  starseeker

	* [r41418] doc/docbook/system/man1/en/rtarea.xml:
	  Enhance the rtarea man page description of exposed and presented
	  area.

2010-11-22 13:44  brlcad

	* [r41415] include/pkg.h:
	  pks_title should be const. there's no intention to modify the
	  title string.

2010-11-21 14:44  brlcad

	* [r41410] src/libbu/fnmatch.c:
	  these should always be static since they have inline hinting in
	  order to make the clang compiler's c99 behavior mode happy. see
	  http://clang.llvm.org/compatibility.html#inline

2010-11-19 15:40  bob1961

	* [r41405] src/tclscripts/lib/Ged.tcl:
	  Updated Ged::end_data_move to work properly in quad view mode.

2010-11-18 22:16  bob1961

	* [r41403] src/tclscripts/archer/ArcherCore.tcl,
	  src/tclscripts/lib/Ged.tcl:
	  Mouse ray callbacks are now required to have pane as its first
	  argument.

2010-11-18 15:17  brlcad

	* [r41402] src/libbn/ulp.c:
	  check for c89 float.h constants and use those instead of
	  calculating epsilon if the constants are available. also added
	  method that does not assume ieee754 but it may find a smaller
	  epsilon than ieee specifies.

2010-11-17 23:10  brlcad

	* [r41401] src/fb/polar-fb.c, src/fb/rle-fb.c, src/fb/spm-fb.c:
	  woot woot, this makes all of the fb tools compile strict on Mac.
	  cleaned up all warnings, style, indent, ws, etc.

2010-11-17 22:58  brlcad

	* [r41400] src/fb/fblabel.c, src/fb/fbline.c,
	  src/fb/fbthreadtest.c, src/fb/fbzoom.c, src/fb/gif-fb.c,
	  src/fb/pixflip-fb.c, src/fb/pl-fb.c, src/fb/png-fb.c,
	  src/fb/polar-fb.c:
	  slew of additional cleanup for quieting verbose warnings.
	  cleaning up ws/indent/style/etc as we go.

2010-11-17 21:47  brlcad

	* [r41399] src/fb/fbstretch.c:
	  cleanup

2010-11-17 21:43  brlcad

	* [r41398] src/fb/ioutil.c:
	  VMessage() no longer needs to be extern.

2010-11-17 21:43  brlcad

	* [r41397] src/fb/fbstretch.c:
	  rewire so it's not calling VMessage() directly

2010-11-17 21:31  brlcad

	* [r41396] src/fb/ioutil.c:
	  use bu_log() instead of fprintf()

2010-11-17 21:22  brlcad

	* [r41395] src/fb/ioutil.c:
	  Simple() is really just basename()

2010-11-17 20:30  brlcad

	* [r41394] src/rt/hurt.c, src/rt/main.c, src/rt/rtshot.c:
	  don't refer to them as 'MGED' databases. they are BRL-CAD
	  geometry databases.

2010-11-17 19:38  brlcad

	* [r41393] src/fb/fb-bw.c, src/fb/fb-fb.c, src/fb/fb-pix.c,
	  src/fb/fb-png.c, src/fb/fb-rle.c, src/fb/fbcmap.c,
	  src/fb/fbfade.c:
	  quellage for non-return from functions (was calling bu_exit()).
	  clean up the files while we're in there for ws, style, indent.
	  restructure for no-decls, eliminate globals and reduce.

2010-11-17 18:25  brlcad

	* [r41392] src/fb/cmap-fb.c:
	  Restructure to avoid forward decls, indent and get consistency on
	  style and ws, quell index warning, remove authors, remove
	  globals.

2010-11-17 18:22  brlcad

	* [r41391] src/fb/cell-fb.c:
	  mass restructuring to avoid forward decls, ws/brace/style/indent
	  cleanup remove unnecessary defines.

2010-11-17 18:10  brlcad

	* [r41390] src/fb/cell-fb.c:
	  quell verbose warnings, replace c++ keywords with simpler forms,
	  don't perform exact ieee-assuming floating point comparisons.

2010-11-16 20:52  bob1961

	* [r41387] misc/win32-msvc8/asc2g/asc2g.vcproj:
	  Needed to double quote path to makensis for win32. Added similar
	  code that checks for the existence of makensis for win32 to x64.

2010-11-16 20:51  starseeker

	* [r41386] src/libbu/malloc.c:
	  If we're printing %ld, apparently need to case siz from size_t to
	  long int on BSD

2010-11-16 19:54  brlcad

	* [r41385] src/libged/solids_on_ray.c:
	  segp is marked as a bu_list at this point, so don't call
	  RT_CK_SEG(). just mark param unused.

2010-11-16 19:48  brlcad

	* [r41384] src/libged/rrt.c:
	  remove debug printing

2010-11-16 19:47  brlcad

	* [r41383] src/libged/preview.c:
	  use a vp pointer to be consistent with other similar code

2010-11-16 19:44  brlcad

	* [r41382] BUGS:
	  build reportedly fails on tcl if compiling in a path containing
	  spaces. unverified.

2010-11-16 19:39  brlcad

	* [r41381] src/libged/nirt.c, src/libged/rt.c:
	  ws

2010-11-16 19:38  brlcad

	* [r41380] src/libged/rrt.c:
	  fix a bug introduced into rrt, need to pass the pointer to the
	  end of the gd_rt_cmd arg list so it appends correctly.

2010-11-16 19:38  brlcad

	* [r41379] src/libged/preview.c:
	  iterate past the command name arg before appending displayed
	  objects

2010-11-16 19:10  brlcad

	* [r41378] src/libged/rrt.c:
	  somehow the build passed with this stray call to _ged_run_rt in
	  here. good thing, though, as this would have crashed without
	  allocating memory to gd_rt_cmd.

2010-11-16 03:55  brlcad

	* [r41376] TODO:
	  make sure 'preview' and 'solids_on_ray' commands work. those were
	  two of the more fragile/harder cases out of all of the MAXARGS
	  changes that should be given a quick validation check before
	  release.

2010-11-16 03:43  brlcad

	* [r41375] include/cmd.h, include/raytrace.h:
	  and with this should be the final stab into the heart of MAXARGS
	  and RT_MAXARGS, now no more a cheap hack to be relied upon. 'do
	  it right'

2010-11-16 03:41  brlcad

	* [r41374] src/libged/preview.c:
	  it's amazing that 'preview' even works at all given the mess in
	  here. attempt at undoing the MAXARGS and memory management
	  debacle going on in here. play it safe and just make our own
	  copies of the strings so we know that it'll be okay to free them
	  all. get rid of the cmd_storage static as part of that process,
	  mark unused params, and expand the number of command args
	  supported for more complex previews.

2010-11-16 02:44  brlcad

	* [r41373] src/libged/preview.c:
	  ws cleanup, drop rt_ prefix on static var

2010-11-16 02:40  brlcad

	* [r41372] src/libged/killtree.c, src/libged/solids_on_ray.c,
	  src/libged/wcodes.c:
	  even more NULLings. also seems unnecessary that solids_on_ray is
	  using static vars here.

2010-11-16 02:28  brlcad

	* [r41371] src/libged/dg_obj.c, src/libged/nirt.c,
	  src/libged/wdb_nirt.c:
	  more insanity setting to NULL

2010-11-16 02:18  brlcad

	* [r41370] src/libged/nirt.c, src/libged/rt.c, src/mged/cmd.c:
	  NULL the pointers after freeing them for sanity

2010-11-16 02:07  brlcad

	* [r41369] src/libged/rtcheck.c:
	  eliminate the MAXARGS fixed array size, replacing with dynamic
	  memory allocation exactly sized to the amount of memory we need.
	  clean up the _WIN32/non-_WIN32 sectioned logic too to reduce
	  duplication.

2010-11-16 01:55  brlcad

	* [r41368] NEWS:
	  improved the support for non-limited object lists in mged. there
	  were numerous commands in mged (e.g. 'killtree' and 'g') that
	  would choke up and die if you tried to process very large
	  collections of geometry (>50k). most of the commands would abort
	  quietly with a usage message but will now process the request as
	  expected.

2010-11-16 00:15  brlcad

	* [r41367] src/libged/killtree.c:
	  proper elimination of MAXARGS and 99999 by converting to
	  bu_realloc() as needed in large step increments. should allow for
	  practically unbounded killtree deletions now.

2010-11-16 00:00  brlcad

	* [r41366] src/libged/killtree.c:
	  reorder functions to avoid forward decls, cleanup ws, and
	  partially eliminate MAXARGS.

2010-11-15 22:35  brlcad

	* [r41364] src/libged/wcodes.c:
	  make 'path' directory array be dynamically allocated so we're not
	  using RT_MAXARGS. untested of course.

2010-11-15 22:17  brlcad

	* [r41363] src/libged/solids_on_ray.c:
	  check args to quell warnings, perform NEAR_ZERO test instead of
	  exactly testing for == 0 on a double.

2010-11-15 22:13  brlcad

	* [r41362] src/libged/solids_on_ray.c:
	  move the statics variables out of file scope and into the
	  function that uses them. reorder functions to avoid forward
	  declarations.

2010-11-15 22:09  brlcad

	* [r41361] src/libged/solids_on_ray.c:
	  style, comment, consistency cleanup

2010-11-15 22:07  brlcad

	* [r41360] src/libged/solids_on_ray.c:
	  rename rt_cmd_vec* to solids_on_ray_cmd_vec* and change the
	  static array into a dynamic one.

2010-11-15 21:30  starseeker

	* [r41359] src/librtserver/rtserver.c:
	  Rename routines in accordance with r41328

2010-11-15 19:45  starseeker

	* [r41356] include/cmd.h:
	  Not quite ready to remove MAXARGS yet.

2010-11-15 19:36  bob1961

	* [r41355] src/libged/combmem.c:
	  Modified combmem_vls_print_member_info by putting braces around
	  object member names to accommodate possible whitespace in the
	  member names.

2010-11-15 15:42  bob1961

	* [r41350] src/tclscripts/archer/CombEditFrame.tcl:
	  Fixed a typo in CombEditFrame::validateTableEntry.

2010-11-12 22:41  brlcad

	* [r41346] src/libged/dg_obj.c, src/libged/nirt.c, src/libged/rt.c,
	  src/libged/wdb_nirt.c, src/mged/mged.h, src/util/pl-dm.c:
	  more mass MAXARGS/RT_MAXARGS elimination.. only a few more to go
	  to convert to dynamic memory.

2010-11-12 22:39  brlcad

	* [r41345] include/cmd.h:
	  no more MAXARGS

2010-11-12 22:17  brlcad

	* [r41344] src/lgt/hmenu.c, src/lgt/hmenu.h:
	  get rid of MAXARGS and MAXLINE, managing dynamic memory sized
	  accordingly in leu of the MAXLINE buffer.

2010-11-12 22:11  brlcad

	* [r41343] src/conv/bot_dump.c, src/remrt/rtsrv.c:
	  remove several more instances of MAXARGS, replacing with calls to
	  allocate/free dynamic memory that is sized with reasonable
	  boundary limits

2010-11-12 21:58  brlcad

	* [r41342] src/libbu/malloc.c, src/libbu/tcl.c:
	  unbreak build due to type warnings. fixit.

2010-11-12 21:52  brlcad

	* [r41341] include/ged.h:
	  ack, gd_rt_cmd needs to be a char ** for this to work, not an
	  array.

2010-11-12 21:49  brlcad

	* [r41340] src/libged/rt.c:
	  quellage

2010-11-12 21:45  brlcad

	* [r41339] src/libtclcad/ged_obj.c:
	  alloc AND free.. and pass the right params.

2010-11-12 21:41  brlcad

	* [r41338] sh/conversion.sh:
	  accommodate the Using debug statement from mged/libtclcad with a
	  simple grep.

2010-11-12 21:39  brlcad

	* [r41337] src/libdm/dm-rtgl.c, src/mged/cmd.c:
	  use ged_count_tops() to get the size that we need to allocate so
	  MAXARGS can be eliminated and code can be simplified.

2010-11-12 21:38  brlcad

	* [r41336] src/libtclcad/ged_obj.c:
	  more MAXARGS elimination, use GO_UNLIMITED so we know when we
	  don't even need to check maxargs

2010-11-12 21:36  brlcad

	* [r41335] include/ged.h, src/libged/rt.c:
	  add a new ged_count_tops() routine that counts the number of
	  visibile (top-level) objects.

2010-11-12 21:04  brlcad

	* [r41333] NEWS:
	  bob fixed the erase_all command so that 'who' command and
	  subsequent rt calls yield the proper results.

2010-11-12 12:18  brlcad

	* [r41331] src/libbu/vlb.c:
	  in fact, remove the BU_ prefix so there's no confusion

2010-11-12 12:16  brlcad

	* [r41330] include/bu.h:
	  moved BU_VLB_BLOCK_SIZE into the header since it doesn't need to
	  be public api.

2010-11-12 12:15  brlcad

	* [r41329] src/librtserver/rtserver.c,
	  src/librtserver/rtserverTest.c:
	  update to rename calls of bu_vlb_getBuffer() and
	  bu_vlb_getBufferLength() to bu_vlb_addr() and bu_vlb_buflen()
	  respectively.

2010-11-12 12:11  brlcad

	* [r41328] doc/deprecation.txt, include/bu.h, src/libbu/vlb.c:
	  rename bu_vlb_getBuffer() and bu_vlb_getBufferLength() to
	  bu_vlb_addr() and bu_vlb_buflen() to be consistent with the
	  bu_vls routines. also make all sizes used by bu_vlb be size_t
	  instead of int.

2010-11-11 04:02  brlcad

	* [r41327] src/libbu/tcl.c:
	  random crash report showed a crash inside free() from
	  bu_tcl_get_value_by_keyword(), so add additional protections.
	  Call Tcl_Free() instead of free() directly since that's what the
	  Tcl doc's say should be called after Tcl_SplitList(). also init
	  listv to NULL for the case where listc is 0.

2010-11-11 02:53  brlcad

	* [r41326] src/libbu/malloc.c:
	  libbu memory management is not allowed to return NULL (by design)
	  so having bu_realloc() free memory then return NULL for the case
	  where the size is zero but the pointer is non-NULL would be
	  inconsistent with that design. FORTUNATELY, the standard allows
	  for the return of 'a unique pointer that can be successfully
	  passed to free()' so go ahead and return a new uninitialized
	  minimum-sized allocation. this is consistent with c99 and IEEE
	  Std 1003.1-2001.

2010-11-11 02:33  brlcad

	* [r41325] include/bu.h:
	  expand the documentation for bu_realloc() and how it relates to
	  the boundary cases where size in zero and/or the ptr is NULL with
	  particular clarity that NULL will still never be returned.
	  fortunately, the standard allows the return to be non-null even
	  for zero sizes.

2010-11-11 02:32  brlcad

	* [r41324] src/libbu/malloc.c:
	  rename cnt to siz to reflect that it's not a count ala calloc()
	  but that it's a size ala malloc(). also remove the doxygen
	  comment on bu_realloc() since public API comments for libbu are
	  all included in the public interface headers. implementation
	  files only include doxygen comments for significant
	  implementation details that are noteworthy.

2010-11-10 23:37  r_weiss

	* [r41323] src/libbu/malloc.c:
	  Updated function bu_realloc to function more line the standard
	  function realloc.

2010-11-10 22:37  bob1961

	* [r41322] src/tclscripts/archer/ArcherCore.tcl:
	  Update the getTreeMembers method to handle member names
	  containing spaces. There's still more work to do in other areas
	  of Archer for handling object names containing spaces.

2010-11-10 22:32  bob1961

	* [r41321] src/tclscripts/archer/CombEditFrame.tcl:
	  Added the validTableEntry method for validating CombEditFrame's
	  relative edit tables entries.

2010-11-10 21:16  brlcad

	* [r41320] src/mged/animedit.c, src/mged/cmd.c, src/mged/mged.h:
	  more MAXARGS elimination. use a -1 magic to imply unlimited args
	  for the funtab.

2010-11-10 21:09  brlcad

	* [r41319] include/dg.h, src/libged/dg_obj.c:
	  we don't actually need to keep track of the capacity because the
	  array ending is marked with a null and not resized

2010-11-10 21:07  brlcad

	* [r41318] include/dg.h, src/libged/dg_obj.c:
	  remove more instances of RT_MAXARGS and MAXARGS. this one is
	  technically a bug that would have been a crasher if the limit
	  were hit as the array was sized as RT_MAXARGS but being iterated
	  over as size MAXARGS (and those two don't actually match each
	  other). we allocate and free memory dynamically based on the
	  exact size that is needed now.

2010-11-10 20:19  brlcad

	* [r41317] src/libdm/dm-rtgl.c:
	  remove couple more instances of fixed-size RT_MAXARGS arrays.
	  make visibleTrees array size dynamic, exactly big enough to fix
	  the max number it might possibly store.

2010-11-10 19:57  brlcad

	* [r41316] src/libdm/dm-rtgl.c:
	  quell all verbose compilation warnings including unused params,
	  unused vars, validation checks, and some cleanup.

2010-11-10 19:24  brlcad

	* [r41315] src/libdm/dm-rtgl.c:
	  ws consistency cleanup

2010-11-10 19:23  brlcad

	* [r41314] include/dm-rtgl.h, src/libdm/dm-rtgl.c:
	  eliminate the use of RT_MAXARGS by making oldTrees be a
	  dynamically allocated array. adding a capacity parameter to keep
	  track of how many slots are available. renamed oldNumTrees to
	  just numTrees and used size_t for sizes.

2010-11-10 19:20  bob1961

	* [r41313] src/external/ProEngineer/proe-brl-notes.txt:
	  Minor update.

2010-11-10 18:25  bob1961

	* [r41312] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Added a way to bypass tree decoration (i.e. increase tree update
	  speed) by setting a no_tree_decorate variable in .archerrc.

2010-11-10 16:06  bob1961

	* [r41311] src/libged/erase.c:
	  This corrects behavior of the erase_all command (i.e. The who
	  command now yields the proper results and a subsequent raytrace
	  is also correct).

2010-11-09 21:50  starseeker

	* [r41310] NEWS:
	  Bob fixed bug in idents, solids and regions command where
	  counting was not functioning due to an improperly referenced
	  counter.

2010-11-09 21:45  bob1961

	* [r41309] src/libged/tables.c:
	  Need to dereference numreg and numsol before incrementing.

2010-11-09 20:54  starseeker

	* [r41308] misc/brlcad.spec.in:
	  Evidently Copyright is supposed to be License these days.

2010-11-09 20:46  bob1961

	* [r41307] src/libged/rt.c:
	  Modified ged_build_tops to use the full path name when building
	  up the command line vector.

2010-11-09 19:57  brlcad

	* [r41306] NEWS, src/librt/primitives/nmg/nmg_rt_isect.c:
	  undo code that is carelessly being too careful.
	  NMG_CK_HITMISS_LISTS() is a linear walk over the hit and miss
	  lists that was being called all over the place up and down the
	  call stack, often very redundantly. this is causing certain
	  objects that need to fire rays to evaluate the nmg surface to run
	  absurdly slower (order or more) than they need to. roll up the
	  NMG_CK_HITMISS_LISTS() calls up the stack to the top caller,
	  still checking before and after to make sure memory is clean, but
	  not during every little recursive processing step. performance
	  gains uncertain as there are still dominant O() problems
	  elsewhere too.

2010-11-09 16:10  bob1961

	* [r41305] src/tclscripts/mged/bindings.tcl:
	  Modified the default_mouse_bindings proc by replacing the
	  previous hack, related to bad mouse behavior on Mac OS 10.5, with
	  a similar hack that let's the user determine whether or not to
	  use the provided hack by setting a no_focus_hack variable in the
	  .mgedrc file.

2010-11-09 16:02  bob1961

	* [r41304] src/tclscripts/mged/mgedrc.tcl:
	  Fixed a typo in the dump_mged_state proc related to the
	  status_bar default.

2010-11-09 15:57  starseeker

	* [r41303] doc/README.Linux:
	  Mention the version file for Redhat and Fedora while we're at it.

2010-11-09 15:53  starseeker

	* [r41302] doc/README.MacOSX:
	  Toss in a note in case I need to remember how to query what
	  version of OSX I'm using from the command line.

2010-11-09 14:13  brlcad

	* [r41300] NEWS:
	  keith fixed a bug in the NURBS raytracing code where it was
	  crashing on a particular surface evaluation. the ray was grazing
	  a surface and the code was assuming only two hits were possible
	  (in/out) when the surface was flat. this particular crash case
	  involved three hits causing the fixed-size array bounds to be
	  exceeded. the fix was to extend the size of the ray for the max
	  possible (i.e., five) given how flat surfaces are presently
	  tested via four corners and a center.

2010-11-09 14:06  brlcad

	* [r41299] doc/deprecation.txt:
	  add a few more easy ones to include the list for deprecation.
	  remove need to distinguish between prims and combs (no 'o'
	  commands or options). deprecaters include: aproposlib
	  aproposdevel qvrot qorot sed oed ted red vdraw vnirt vquery_ray

2010-11-09 13:53  brlcad

	* [r41298] doc/deprecation.txt:
	  massive deprecation of various mged commands that are being
	  consolidated into a more consistent interface with fewer
	  commands. NO FUNCTIONALITY IS BEING REMOVED, they are being
	  merged in with other existing commands as options or subcommands
	  so common functionality is grouped together. this should
	  eliminate approximate 40 top-level commands. included are the
	  following: ?lib ?devel dbconcat dbupgrade dbfind dbupgrade
	  debugbu debugdir debuglib debugmem debugnmg comb_std comb_color
	  combmem killall killtree killrefs rotobj arot mrot orot vrot
	  oscale pscale otranslate ptranslate nmg_collapse nmg_fix_normals
	  nmg_simplify bot_condense bot_decimate bot_face_fuse
	  bot_vertex_fuse bot_face_sort bot_smooth erase_all query_ray
	  xpush

2010-11-09 12:25  brlcad

	* [r41297] NEWS, src/librt/primitives/nmg/nmg_fuse.c:
	  this fixes an infinite loop that was getting hit when fusing
	  vertices due to some faulty iteration logic. instead of
	  continuing if they are not equal, which was causing it to stay in
	  the same processing state, check if they are equal so we can fuse
	  and break. it was stuck endlessly fusing. affects most NMG and
	  BOT conversion tools and facetize.

2010-11-09 11:11  indianlarry

	* [r41296] src/librt/primitives/brep/brep.cpp:
	  Fixed under sized arrays used in reporting intersects in four
	  corner solver. This under size was causing stack corruption
	  issues when a subdivision surface was hit more than twice. Added
	  definition MAX_BREP_SUBDIVISION_INTERSECTS and currently set to
	  5, four corners and center are currently being tested for
	  possible intersects. The fact that we are getting more than two
	  intersects means that we need to check our near flat criteria for
	  the subdivision but arrays still need to be dimensioned to max
	  possible intersects.

2010-11-09 11:02  indianlarry

	* [r41295] src/librt/bundle.c:
	  removed unused static debug variable

2010-11-09 11:00  indianlarry

	* [r41294] src/librt/opennurbs_ext.cpp:
	  fixed delete statement for allocated array (delete knots ->
	  delete [] knots)

2010-11-09 00:33  brlcad

	* [r41293] configure.ac:
	  few more warnings to consider

2010-11-08 23:33  brlcad

	* [r41292] src/libged/bb.c, src/libged/cat.c, src/libged/comb.c,
	  src/libged/comb_std.c, src/libged/dg_obj.c, src/libged/edcodes.c,
	  src/libged/expand.c, src/libged/find.c, src/libged/group.c,
	  src/libged/keep.c, src/libged/kill.c, src/libged/killall.c,
	  src/libged/killrefs.c, src/libged/killtree.c, src/libged/list.c,
	  src/libged/ls.c, src/libged/make_bb.c, src/libged/match.c,
	  src/libged/nirt.c, src/libged/pathsum.c, src/libged/push.c,
	  src/libged/region.c, src/libged/remove.c, src/libged/rrt.c,
	  src/libged/rt.c, src/libged/title.c, src/libged/tree.c,
	  src/libged/wcodes.c, src/libged/wdb_comb_std.c,
	  src/libged/wdb_nirt.c, src/libged/wdb_obj.c, src/libged/which.c,
	  src/libtclcad/ged_obj.c, src/mged/rtif.c, src/util/pl-dm.c:
	  eliminate a slew of checks for exceeding MAXARGS bounds as part
	  of process of eliminating the static size limit.

2010-11-08 23:31  bob1961

	* [r41291] src/libbu/parse.c:
	  Minor mod to _bu_struct_lookup(). Apparently the 'i' is not
	  prepended with a '%' so using sp_fmt[0] when comparing with 'i'
	  is correct for this case only.

2010-11-08 23:21  bob1961

	* [r41290] src/libbu/parse.c:
	  Modified _bu_struct_lookup() to consider a sp_fmt[1] of 'p' when
	  deciding to move on to the next item in the bu_structparse array.
	  This fixes breaks in the rt family of applications when using any
	  of the view_parse variables.

2010-11-08 23:15  brlcad

	* [r41289] src/gtools/g_qa.c:
	  what's up with the fixed length array? eliminate MAXARGS and make
	  it dynamic

2010-11-08 23:12  r_weiss

	* [r41288] TODO:
	  Updated TODO list for next release to fix bu_realloc so passing
	  in size zero will perform a free instead of allocating the
	  minimum size to store a pointer.

2010-11-08 22:51  brlcad

	* [r41287] src/libtclcad/ged_obj.c:
	  eliminate lots of calls to MAXARGS (beginning of a process to
	  remove the array constant), replace with a -1 that implies
	  unlimited. mark the unused maxargs params. simplify
	  go_edit_redraw_func() to not match the signature of others since
	  it's doing something much simpler and isn't used in the command
	  table.

2010-11-08 22:14  bob1961

	* [r41286] src/rt/opt.c:
	  Undo previous revision.

2010-11-08 19:14  bob1961

	* [r41284] src/rt/opt.c:
	  rt_cmdtab does not have a background command so set the
	  background locally (i.e. don't call rt_do_cmd()).

2010-11-08 18:00  starseeker

	* [r41283] src/tclscripts/mged/botedit.tcl:
	  Whoops, how about adding the file.

2010-11-08 18:00  starseeker

	* [r41282] src/tclscripts/mged/Makefile.am,
	  src/tclscripts/mged/openw.tcl, src/tclscripts/mged/tclIndex:
	  Get a (very) basic menu based approach to getting the Bot Editor
	  going in MGED.

2010-11-08 16:57  brlcad

	* [r41281] src/librt/primitives/nmg/nmg_ck.c,
	  src/librt/primitives/nmg/nmg_class.c,
	  src/librt/primitives/nmg/nmg_inter.c,
	  src/librt/primitives/nmg/nmg_manif.c,
	  src/librt/primitives/nmg/nmg_mesh.c,
	  src/librt/primitives/nmg/nmg_misc.c,
	  src/librt/primitives/nmg/nmg_rt_isect.c,
	  src/librt/primitives/nmg/nmg_tri.c:
	  remove lots and lots of dead code. particularly for #if 0 and #if
	  1 code that has no else clause, but even for some of those that
	  do that are not relevant without revisiting the code.

2010-11-08 16:34  brlcad

	* [r41280] src/libbn/mat.c, src/libbn/plane.c:
	  ws and brace cleanup

2010-11-08 16:18  brlcad

	* [r41279] src/libbn/mat.c:
	  use vmath macros where equivalent for moving, scaling, and
	  transposing. V3ARGS for args. avoid bombing at all costs unless
	  if there is no sensible return possible, return a zero output if
	  input is zero.

2010-11-08 15:58  brlcad

	* [r41278] src/librt/primitives/nmg/nmg_mk.c:
	  richard made a change that fixed a problem and causes a problem,
	  so document it as a FIXME. the memory needs to be released
	  properly and/or the memory management expectations of nmg_je()
	  needs to be documented. just removing the free is a memory leak.

2010-11-08 15:54  brlcad

	* [r41277] TODO:
	  lots of updates. rename g_* tools. tess failures are out of date.
	  forum links fixed. parallel prep has a diff meaning. man pages
	  are exposed in mged (albeit not searchable). x3d is vrml,
	  importer needed. raytracers output multiple image formats. opengl
	  instead of gpgpu.

2010-11-08 15:46  brlcad

	* [r41276] NEWS:
	  bob added a call to RequestExecutionLevel to set the execution
	  level to user to get the failed CreateShortCut calls to work.
	  this (presumably) should get past an installation failure/error
	  about not being able to create shortcuts due to permission
	  failures. presumably also only creates shortcuts for the current
	  user now too.

2010-11-08 15:43  brlcad

	* [r41275] misc/nsis/brlcad.nsi:
	  don't comment out code without leaving a comment why it's
	  commented out but needs to stay. remove dead code.

2010-11-08 15:37  brlcad

	* [r41274] TODO:
	  dbopen needs some tlc, particularly on windows due to a change
	  bob make in db_open.c in librt. we need to keep track of the
	  initial PWD in the dbip. stashing the full path into dbi_filename
	  is inadequate as we then lose information about how the file was
	  opened (which is important for output, printing, usability)

2010-11-08 15:32  brlcad

	* [r41273] NEWS:
	  bob fixed a bug people were running into in mged where the
	  various external commands (rt, rtedge, gqa, nirt, etc) were
	  failing to be found if you changed your directory or ran dbopen
	  with a relative path. mged would invoke 'rt
	  relative/path/to/file.g' and get a file-not-found error if the
	  cwd was not the same as that during dbopen. problem was masked
	  for files opened with the tcl file dialog because that recorded a
	  full path for dbi_filename.

2010-11-08 15:21  brlcad

	* [r41272] NEWS:
	  richard fixed a bug in the point cloud primitive where my "don't
	  bother dequeing" message was apparently a "bad thing" to do. when
	  freeing the point cloud's bu_list, the forward pointer was being
	  referenced after it was freed (presumably causing a crash or
	  valgrind failure). fix calls BU_LIST_DEQUE (like I documented in
	  bu.h as being necessary).

2010-11-08 15:05  brlcad

	* [r41271] NEWS:
	  hm! there is already a minor-update-worthy feature included. nick
	  reed implemented a new bot editing interface for mged and archer
	  that greatly simplifies bot processing.

2010-11-08 14:55  brlcad

	* [r41270] NEWS:
	  nick fixed a bug on 28AUG2010 in bot_decimate where the
	  bookkeeping in decimate_edge() was missing an edge case while
	  updating the edge list and that sometimes caused the routine to
	  access a freed structure (which caused a bus error). this fixes
	  an mged crash bug as well as any other decimation routines/tools
	  that called the same librt interface.

2010-11-08 12:40  brlcad

	* [r41268] src/libged/erase.c:
	  remove dead code. clean up usage. needs updating to bu_getopt().

2010-11-05 17:47  brlcad

	* [r41253] HACKING:
	  that first step should really also include notifying the
	  brlcad-devel mailing list with a simple message letting others
	  know that someone has begun release steps so that others know to
	  keep the commits at ease for a couple days

2010-11-05 14:08  starseeker

	* [r41252] Makefile.am, bench/Makefile.am, db/Makefile.am,
	  include/conf/Makefile.am,
	  src/other/step/include/conf/Makefile.am:
	  Try replacing $(ECHO) with echo in the Makefile.am files - the
	  newest libtool is using a printf expression for $(ECHO) that is
	  resulting in extra n characters at the end of lines.

2010-11-05 12:36  starseeker

	* [r41251] src/other/boost/algorithm/string/case_conv.hpp,
	  src/other/boost/algorithm/string/detail/case_conv.hpp,
	  src/other/boost/algorithm/string/detail/find_format.hpp,
	  src/other/boost/algorithm/string/detail/find_format_all.hpp,
	  src/other/boost/algorithm/string/detail/find_format_store.hpp,
	  src/other/boost/algorithm/string/detail/finder.hpp,
	  src/other/boost/algorithm/string/detail/replace_storage.hpp,
	  src/other/boost/algorithm/string/detail/sequence.hpp,
	  src/other/boost/algorithm/string/find_format.hpp,
	  src/other/boost/algorithm/string/finder.hpp,
	  src/other/boost/algorithm/string/formatter.hpp,
	  src/other/boost/algorithm/string/replace.hpp,
	  src/other/boost/aligned_storage.hpp, src/other/boost/any.hpp,
	  src/other/boost/archive/archive_exception.hpp,
	  src/other/boost/bind.hpp, src/other/boost/bind/bind_mf2_cc.hpp,
	  src/other/boost/bind/mem_fn_template.hpp,
	  src/other/boost/bind/placeholders.hpp, src/other/boost/blank.hpp,
	  src/other/boost/concept/detail/backward_compatibility.hpp,
	  src/other/boost/concept/detail/borland.hpp,
	  src/other/boost/concept/detail/general.hpp,
	  src/other/boost/concept/detail/has_constraints.hpp,
	  src/other/boost/concept/detail/msvc.hpp,
	  src/other/boost/concept/usage.hpp,
	  src/other/boost/concept_check.hpp,
	  src/other/boost/config/abi/borland_prefix.hpp,
	  src/other/boost/config/auto_link.hpp,
	  src/other/boost/config/compiler/borland.hpp,
	  src/other/boost/config/compiler/codegear.hpp,
	  src/other/boost/config/compiler/common_edg.hpp,
	  src/other/boost/config/compiler/digitalmars.hpp,
	  src/other/boost/config/compiler/gcc.hpp,
	  src/other/boost/config/compiler/gcc_xml.hpp,
	  src/other/boost/config/compiler/hp_acc.hpp,
	  src/other/boost/config/compiler/intel.hpp,
	  src/other/boost/config/compiler/kai.hpp,
	  src/other/boost/config/compiler/metrowerks.hpp,
	  src/other/boost/config/compiler/mpw.hpp,
	  src/other/boost/config/compiler/pgi.hpp,
	  src/other/boost/config/compiler/sgi_mipspro.hpp,
	  src/other/boost/config/compiler/sunpro_cc.hpp,
	  src/other/boost/config/compiler/vacpp.hpp,
	  src/other/boost/config/compiler/visualc.hpp,
	  src/other/boost/config/platform/cygwin.hpp,
	  src/other/boost/config/platform/win32.hpp,
	  src/other/boost/config/select_compiler_config.hpp,
	  src/other/boost/config/select_platform_config.hpp,
	  src/other/boost/config/select_stdlib_config.hpp,
	  src/other/boost/config/stdlib/dinkumware.hpp,
	  src/other/boost/config/stdlib/libcomo.hpp,
	  src/other/boost/config/stdlib/libstdcpp3.hpp,
	  src/other/boost/config/stdlib/modena.hpp,
	  src/other/boost/config/stdlib/msl.hpp,
	  src/other/boost/config/stdlib/roguewave.hpp,
	  src/other/boost/config/stdlib/sgi.hpp,
	  src/other/boost/config/stdlib/stlport.hpp,
	  src/other/boost/config/stdlib/vacpp.hpp,
	  src/other/boost/config/suffix.hpp, src/other/boost/cstdint.hpp,
	  src/other/boost/date_time/adjust_functors.hpp,
	  src/other/boost/date_time/c_time.hpp,
	  src/other/boost/date_time/compiler_config.hpp,
	  src/other/boost/date_time/constrained_value.hpp,
	  src/other/boost/date_time/date.hpp,
	  src/other/boost/date_time/date_clock_device.hpp,
	  src/other/boost/date_time/date_defs.hpp,
	  src/other/boost/date_time/date_duration.hpp,
	  src/other/boost/date_time/date_duration_types.hpp,
	  src/other/boost/date_time/date_facet.hpp,
	  src/other/boost/date_time/date_format_simple.hpp,
	  src/other/boost/date_time/date_formatting.hpp,
	  src/other/boost/date_time/date_formatting_limited.hpp,
	  src/other/boost/date_time/date_formatting_locales.hpp,
	  src/other/boost/date_time/date_generator_formatter.hpp,
	  src/other/boost/date_time/date_generator_parser.hpp,
	  src/other/boost/date_time/date_generators.hpp,
	  src/other/boost/date_time/date_iterator.hpp,
	  src/other/boost/date_time/date_names_put.hpp,
	  src/other/boost/date_time/date_parsing.hpp,
	  src/other/boost/date_time/dst_rules.hpp,
	  src/other/boost/date_time/filetime_functions.hpp,
	  src/other/boost/date_time/format_date_parser.hpp,
	  src/other/boost/date_time/gregorian/conversion.hpp,
	  src/other/boost/date_time/gregorian/formatters.hpp,
	  src/other/boost/date_time/gregorian/formatters_limited.hpp,
	  src/other/boost/date_time/gregorian/greg_calendar.hpp,
	  src/other/boost/date_time/gregorian/greg_date.hpp,
	  src/other/boost/date_time/gregorian/greg_day.hpp,
	  src/other/boost/date_time/gregorian/greg_day_of_year.hpp,
	  src/other/boost/date_time/gregorian/greg_duration.hpp,
	  src/other/boost/date_time/gregorian/greg_duration_types.hpp,
	  src/other/boost/date_time/gregorian/greg_facet.hpp,
	  src/other/boost/date_time/gregorian/greg_month.hpp,
	  src/other/boost/date_time/gregorian/greg_weekday.hpp,
	  src/other/boost/date_time/gregorian/greg_year.hpp,
	  src/other/boost/date_time/gregorian/greg_ymd.hpp,
	  src/other/boost/date_time/gregorian/gregorian_io.hpp,
	  src/other/boost/date_time/gregorian/gregorian_types.hpp,
	  src/other/boost/date_time/gregorian/parsers.hpp,
	  src/other/boost/date_time/gregorian_calendar.hpp,
	  src/other/boost/date_time/int_adapter.hpp,
	  src/other/boost/date_time/iso_format.hpp,
	  src/other/boost/date_time/locale_config.hpp,
	  src/other/boost/date_time/microsec_time_clock.hpp,
	  src/other/boost/date_time/parse_format_base.hpp,
	  src/other/boost/date_time/period.hpp,
	  src/other/boost/date_time/period_formatter.hpp,
	  src/other/boost/date_time/period_parser.hpp,
	  src/other/boost/date_time/posix_time/conversion.hpp,
	  src/other/boost/date_time/posix_time/date_duration_operators.hpp,
	  src/other/boost/date_time/posix_time/posix_time_config.hpp,
	  src/other/boost/date_time/posix_time/posix_time_duration.hpp,
	  src/other/boost/date_time/posix_time/posix_time_system.hpp,
	  src/other/boost/date_time/posix_time/ptime.hpp,
	  src/other/boost/date_time/posix_time/time_period.hpp,
	  src/other/boost/date_time/special_defs.hpp,
	  src/other/boost/date_time/special_values_formatter.hpp,
	  src/other/boost/date_time/string_convert.hpp,
	  src/other/boost/date_time/string_parse_tree.hpp,
	  src/other/boost/date_time/strings_from_facet.hpp,
	  src/other/boost/date_time/time.hpp,
	  src/other/boost/date_time/time_clock.hpp,
	  src/other/boost/date_time/time_defs.hpp,
	  src/other/boost/date_time/time_duration.hpp,
	  src/other/boost/date_time/time_iterator.hpp,
	  src/other/boost/date_time/time_resolution_traits.hpp,
	  src/other/boost/date_time/time_system_counted.hpp,
	  src/other/boost/date_time/time_system_split.hpp,
	  src/other/boost/date_time/wrapping_int.hpp,
	  src/other/boost/date_time/year_month_day.hpp,
	  src/other/boost/detail/allocator_utilities.hpp,
	  src/other/boost/detail/atomic_count.hpp,
	  src/other/boost/detail/atomic_count_gcc.hpp,
	  src/other/boost/detail/atomic_count_gcc_x86.hpp,
	  src/other/boost/detail/atomic_count_pthreads.hpp,
	  src/other/boost/detail/atomic_count_sync.hpp,
	  src/other/boost/detail/atomic_count_win32.hpp,
	  src/other/boost/detail/bad_weak_ptr.hpp,
	  src/other/boost/detail/container_fwd.hpp,
	  src/other/boost/detail/endian.hpp,
	  src/other/boost/detail/extended_integer.hpp,
	  src/other/boost/detail/interlocked.hpp,
	  src/other/boost/detail/lcast_precision.hpp,
	  src/other/boost/detail/lwm_nop.hpp,
	  src/other/boost/detail/lwm_pthreads.hpp,
	  src/other/boost/detail/lwm_win32_cs.hpp,
	  src/other/boost/detail/quick_allocator.hpp,
	  src/other/boost/detail/shared_count.hpp,
	  src/other/boost/detail/shared_ptr_nmt.hpp,
	  src/other/boost/detail/sp_convertible.hpp,
	  src/other/boost/detail/sp_counted_base.hpp,
	  src/other/boost/detail/sp_counted_base_acc_ia64.hpp,
	  src/other/boost/detail/sp_counted_base_cw_ppc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_ia64.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_ppc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_sparc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_x86.hpp,
	  src/other/boost/detail/sp_counted_base_nt.hpp,
	  src/other/boost/detail/sp_counted_base_pt.hpp,
	  src/other/boost/detail/sp_counted_base_spin.hpp,
	  src/other/boost/detail/sp_counted_base_sync.hpp,
	  src/other/boost/detail/sp_counted_base_w32.hpp,
	  src/other/boost/detail/sp_counted_impl.hpp,
	  src/other/boost/detail/sp_typeinfo.hpp,
	  src/other/boost/detail/spinlock.hpp,
	  src/other/boost/detail/spinlock_gcc_arm.hpp,
	  src/other/boost/detail/spinlock_nt.hpp,
	  src/other/boost/detail/spinlock_pool.hpp,
	  src/other/boost/detail/spinlock_pt.hpp,
	  src/other/boost/detail/spinlock_sync.hpp,
	  src/other/boost/detail/spinlock_w32.hpp,
	  src/other/boost/detail/workaround.hpp,
	  src/other/boost/detail/yield_k.hpp,
	  src/other/boost/dynamic_property_map.hpp,
	  src/other/boost/enable_shared_from_this.hpp,
	  src/other/boost/exception/detail/attribute_noreturn.hpp,
	  src/other/boost/exception/detail/cloning_base.hpp,
	  src/other/boost/exception/detail/counted_base.hpp,
	  src/other/boost/exception/enable_current_exception.hpp,
	  src/other/boost/exception/enable_error_info.hpp,
	  src/other/boost/exception/exception.hpp,
	  src/other/boost/function/function_base.hpp,
	  src/other/boost/function/function_template.hpp,
	  src/other/boost/functional/hash/detail/float_functions.hpp,
	  src/other/boost/functional/hash/detail/hash_float.hpp,
	  src/other/boost/functional/hash/extensions.hpp,
	  src/other/boost/functional/hash/hash.hpp,
	  src/other/boost/fusion/adapted/mpl/mpl_iterator.hpp,
	  src/other/boost/fusion/algorithm/iteration/detail/fold.hpp,
	  src/other/boost/fusion/algorithm/iteration/fold.hpp,
	  src/other/boost/fusion/algorithm/query/detail/assoc_find.hpp,
	  src/other/boost/fusion/algorithm/transformation/erase_key.hpp,
	  src/other/boost/fusion/container/map/map_fwd.hpp,
	  src/other/boost/fusion/container/set/set_fwd.hpp,
	  src/other/boost/fusion/container/vector/detail/as_vector.hpp,
	  src/other/boost/fusion/container/vector/detail/at_impl.hpp,
	  src/other/boost/fusion/container/vector/detail/vector_n.hpp,
	  src/other/boost/fusion/container/vector/detail/vector_n_chooser.hpp,
	  src/other/boost/fusion/container/vector/vector.hpp,
	  src/other/boost/fusion/container/vector/vector10.hpp,
	  src/other/boost/fusion/container/vector/vector_iterator.hpp,
	  src/other/boost/fusion/iterator/advance.hpp,
	  src/other/boost/fusion/iterator/deref.hpp,
	  src/other/boost/fusion/iterator/distance.hpp,
	  src/other/boost/fusion/iterator/equal_to.hpp,
	  src/other/boost/fusion/iterator/iterator_facade.hpp,
	  src/other/boost/fusion/iterator/mpl/convert_iterator.hpp,
	  src/other/boost/fusion/iterator/mpl/fusion_iterator.hpp,
	  src/other/boost/fusion/iterator/next.hpp,
	  src/other/boost/fusion/iterator/prior.hpp,
	  src/other/boost/fusion/iterator/value_of.hpp,
	  src/other/boost/fusion/sequence/intrinsic/at.hpp,
	  src/other/boost/fusion/sequence/intrinsic/begin.hpp,
	  src/other/boost/fusion/sequence/intrinsic/end.hpp,
	  src/other/boost/fusion/sequence/intrinsic/has_key.hpp,
	  src/other/boost/fusion/sequence/intrinsic/size.hpp,
	  src/other/boost/fusion/sequence/intrinsic/value_at.hpp,
	  src/other/boost/fusion/support/category_of.hpp,
	  src/other/boost/fusion/support/detail/access.hpp,
	  src/other/boost/fusion/support/is_sequence.hpp,
	  src/other/boost/fusion/support/is_view.hpp,
	  src/other/boost/fusion/support/tag_of.hpp,
	  src/other/boost/fusion/view/detail/strictest_traversal.hpp,
	  src/other/boost/fusion/view/iterator_range/iterator_range.hpp,
	  src/other/boost/fusion/view/joint_view/detail/begin_impl.hpp,
	  src/other/boost/fusion/view/joint_view/detail/next_impl.hpp,
	  src/other/boost/fusion/view/joint_view/joint_view.hpp,
	  src/other/boost/fusion/view/joint_view/joint_view_iterator.hpp,
	  src/other/boost/fusion/view/single_view/single_view.hpp,
	  src/other/boost/fusion/view/single_view/single_view_iterator.hpp,
	  src/other/boost/fusion/view/transform_view/transform_view.hpp,
	  src/other/boost/fusion/view/transform_view/transform_view_iterator.hpp,
	  src/other/boost/get_pointer.hpp,
	  src/other/boost/graph/adjacency_list.hpp,
	  src/other/boost/graph/detail/adjacency_list.hpp,
	  src/other/boost/graph/detail/read_graphviz_spirit.hpp,
	  src/other/boost/graph/graph_concepts.hpp,
	  src/other/boost/graph/graph_traits.hpp,
	  src/other/boost/graph/graphml.hpp,
	  src/other/boost/graph/graphviz.hpp,
	  src/other/boost/graph/named_graph.hpp,
	  src/other/boost/graph/numeric_values.hpp,
	  src/other/boost/graph/properties.hpp,
	  src/other/boost/graph/subgraph.hpp,
	  src/other/boost/integer/static_log2.hpp,
	  src/other/boost/integer_traits.hpp,
	  src/other/boost/intrusive_ptr.hpp,
	  src/other/boost/io/ios_state.hpp,
	  src/other/boost/iterator/transform_iterator.hpp,
	  src/other/boost/lexical_cast.hpp, src/other/boost/limits.hpp,
	  src/other/boost/memory_order.hpp,
	  src/other/boost/mpl/O1_size.hpp,
	  src/other/boost/mpl/O1_size_fwd.hpp,
	  src/other/boost/mpl/advance.hpp,
	  src/other/boost/mpl/advance_fwd.hpp,
	  src/other/boost/mpl/always.hpp, src/other/boost/mpl/and.hpp,
	  src/other/boost/mpl/apply.hpp, src/other/boost/mpl/apply_fwd.hpp,
	  src/other/boost/mpl/apply_wrap.hpp, src/other/boost/mpl/arg.hpp,
	  src/other/boost/mpl/arg_fwd.hpp, src/other/boost/mpl/assert.hpp,
	  src/other/boost/mpl/at.hpp, src/other/boost/mpl/at_fwd.hpp,
	  src/other/boost/mpl/aux_/O1_size_impl.hpp,
	  src/other/boost/mpl/aux_/adl_barrier.hpp,
	  src/other/boost/mpl/aux_/advance_backward.hpp,
	  src/other/boost/mpl/aux_/advance_forward.hpp,
	  src/other/boost/mpl/aux_/arg_typedef.hpp,
	  src/other/boost/mpl/aux_/arithmetic_op.hpp,
	  src/other/boost/mpl/aux_/arity.hpp,
	  src/other/boost/mpl/aux_/arity_spec.hpp,
	  src/other/boost/mpl/aux_/at_impl.hpp,
	  src/other/boost/mpl/aux_/back_impl.hpp,
	  src/other/boost/mpl/aux_/begin_end_impl.hpp,
	  src/other/boost/mpl/aux_/clear_impl.hpp,
	  src/other/boost/mpl/aux_/common_name_wknd.hpp,
	  src/other/boost/mpl/aux_/comparison_op.hpp,
	  src/other/boost/mpl/aux_/config/adl.hpp,
	  src/other/boost/mpl/aux_/config/arrays.hpp,
	  src/other/boost/mpl/aux_/config/bcc.hpp,
	  src/other/boost/mpl/aux_/config/bind.hpp,
	  src/other/boost/mpl/aux_/config/compiler.hpp,
	  src/other/boost/mpl/aux_/config/ctps.hpp,
	  src/other/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp,
	  src/other/boost/mpl/aux_/config/dtp.hpp,
	  src/other/boost/mpl/aux_/config/eti.hpp,
	  src/other/boost/mpl/aux_/config/forwarding.hpp,
	  src/other/boost/mpl/aux_/config/gcc.hpp,
	  src/other/boost/mpl/aux_/config/has_apply.hpp,
	  src/other/boost/mpl/aux_/config/has_xxx.hpp,
	  src/other/boost/mpl/aux_/config/integral.hpp,
	  src/other/boost/mpl/aux_/config/intel.hpp,
	  src/other/boost/mpl/aux_/config/lambda.hpp,
	  src/other/boost/mpl/aux_/config/msvc.hpp,
	  src/other/boost/mpl/aux_/config/msvc_typename.hpp,
	  src/other/boost/mpl/aux_/config/nttp.hpp,
	  src/other/boost/mpl/aux_/config/operators.hpp,
	  src/other/boost/mpl/aux_/config/overload_resolution.hpp,
	  src/other/boost/mpl/aux_/config/pp_counter.hpp,
	  src/other/boost/mpl/aux_/config/preprocessor.hpp,
	  src/other/boost/mpl/aux_/config/static_constant.hpp,
	  src/other/boost/mpl/aux_/config/ttp.hpp,
	  src/other/boost/mpl/aux_/config/typeof.hpp,
	  src/other/boost/mpl/aux_/config/use_preprocessed.hpp,
	  src/other/boost/mpl/aux_/config/workaround.hpp,
	  src/other/boost/mpl/aux_/contains_impl.hpp,
	  src/other/boost/mpl/aux_/count_args.hpp,
	  src/other/boost/mpl/aux_/empty_impl.hpp,
	  src/other/boost/mpl/aux_/erase_impl.hpp,
	  src/other/boost/mpl/aux_/erase_key_impl.hpp,
	  src/other/boost/mpl/aux_/fold_impl.hpp,
	  src/other/boost/mpl/aux_/fold_impl_body.hpp,
	  src/other/boost/mpl/aux_/front_impl.hpp,
	  src/other/boost/mpl/aux_/full_lambda.hpp,
	  src/other/boost/mpl/aux_/has_apply.hpp,
	  src/other/boost/mpl/aux_/has_begin.hpp,
	  src/other/boost/mpl/aux_/has_key_impl.hpp,
	  src/other/boost/mpl/aux_/has_rebind.hpp,
	  src/other/boost/mpl/aux_/has_size.hpp,
	  src/other/boost/mpl/aux_/has_tag.hpp,
	  src/other/boost/mpl/aux_/has_type.hpp,
	  src/other/boost/mpl/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/aux_/insert_impl.hpp,
	  src/other/boost/mpl/aux_/insert_range_impl.hpp,
	  src/other/boost/mpl/aux_/inserter_algorithm.hpp,
	  src/other/boost/mpl/aux_/integral_wrapper.hpp,
	  src/other/boost/mpl/aux_/is_msvc_eti_arg.hpp,
	  src/other/boost/mpl/aux_/iter_apply.hpp,
	  src/other/boost/mpl/aux_/iter_fold_if_impl.hpp,
	  src/other/boost/mpl/aux_/iter_fold_impl.hpp,
	  src/other/boost/mpl/aux_/iter_push_front.hpp,
	  src/other/boost/mpl/aux_/joint_iter.hpp,
	  src/other/boost/mpl/aux_/lambda_arity_param.hpp,
	  src/other/boost/mpl/aux_/lambda_no_ctps.hpp,
	  src/other/boost/mpl/aux_/lambda_spec.hpp,
	  src/other/boost/mpl/aux_/lambda_support.hpp,
	  src/other/boost/mpl/aux_/largest_int.hpp,
	  src/other/boost/mpl/aux_/logical_op.hpp,
	  src/other/boost/mpl/aux_/msvc_dtw.hpp,
	  src/other/boost/mpl/aux_/msvc_eti_base.hpp,
	  src/other/boost/mpl/aux_/msvc_is_class.hpp,
	  src/other/boost/mpl/aux_/msvc_never_true.hpp,
	  src/other/boost/mpl/aux_/msvc_type.hpp,
	  src/other/boost/mpl/aux_/na.hpp,
	  src/other/boost/mpl/aux_/na_assert.hpp,
	  src/other/boost/mpl/aux_/na_fwd.hpp,
	  src/other/boost/mpl/aux_/na_spec.hpp,
	  src/other/boost/mpl/aux_/nested_type_wknd.hpp,
	  src/other/boost/mpl/aux_/nttp_decl.hpp,
	  src/other/boost/mpl/aux_/numeric_cast_utils.hpp,
	  src/other/boost/mpl/aux_/numeric_op.hpp,
	  src/other/boost/mpl/aux_/overload_names.hpp,
	  src/other/boost/mpl/aux_/pop_back_impl.hpp,
	  src/other/boost/mpl/aux_/pop_front_impl.hpp,
	  src/other/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp,
	  src/other/boost/mpl/aux_/preprocessor/add.hpp,
	  src/other/boost/mpl/aux_/preprocessor/def_params_tail.hpp,
	  src/other/boost/mpl/aux_/preprocessor/default_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/enum.hpp,
	  src/other/boost/mpl/aux_/preprocessor/ext_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/filter_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/partial_spec_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/range.hpp,
	  src/other/boost/mpl/aux_/preprocessor/repeat.hpp,
	  src/other/boost/mpl/aux_/preprocessor/sub.hpp,
	  src/other/boost/mpl/aux_/preprocessor/tuple.hpp,
	  src/other/boost/mpl/aux_/ptr_to_ref.hpp,
	  src/other/boost/mpl/aux_/push_back_impl.hpp,
	  src/other/boost/mpl/aux_/push_front_impl.hpp,
	  src/other/boost/mpl/aux_/reverse_fold_impl.hpp,
	  src/other/boost/mpl/aux_/reverse_fold_impl_body.hpp,
	  src/other/boost/mpl/aux_/reverse_iter_fold_impl.hpp,
	  src/other/boost/mpl/aux_/sequence_wrapper.hpp,
	  src/other/boost/mpl/aux_/size_impl.hpp,
	  src/other/boost/mpl/aux_/static_cast.hpp,
	  src/other/boost/mpl/aux_/template_arity.hpp,
	  src/other/boost/mpl/aux_/template_arity_fwd.hpp,
	  src/other/boost/mpl/aux_/traits_lambda_spec.hpp,
	  src/other/boost/mpl/aux_/type_wrapper.hpp,
	  src/other/boost/mpl/aux_/unwrap.hpp,
	  src/other/boost/mpl/aux_/value_wknd.hpp,
	  src/other/boost/mpl/aux_/yes_no.hpp,
	  src/other/boost/mpl/back.hpp, src/other/boost/mpl/back_fwd.hpp,
	  src/other/boost/mpl/back_inserter.hpp,
	  src/other/boost/mpl/base.hpp, src/other/boost/mpl/begin.hpp,
	  src/other/boost/mpl/begin_end.hpp,
	  src/other/boost/mpl/begin_end_fwd.hpp,
	  src/other/boost/mpl/bind.hpp, src/other/boost/mpl/bind_fwd.hpp,
	  src/other/boost/mpl/bool.hpp, src/other/boost/mpl/bool_fwd.hpp,
	  src/other/boost/mpl/clear.hpp, src/other/boost/mpl/clear_fwd.hpp,
	  src/other/boost/mpl/contains.hpp,
	  src/other/boost/mpl/contains_fwd.hpp,
	  src/other/boost/mpl/copy.hpp, src/other/boost/mpl/deref.hpp,
	  src/other/boost/mpl/distance.hpp,
	  src/other/boost/mpl/distance_fwd.hpp,
	  src/other/boost/mpl/empty.hpp, src/other/boost/mpl/empty_fwd.hpp,
	  src/other/boost/mpl/end.hpp, src/other/boost/mpl/equal_to.hpp,
	  src/other/boost/mpl/erase.hpp, src/other/boost/mpl/erase_fwd.hpp,
	  src/other/boost/mpl/erase_key.hpp,
	  src/other/boost/mpl/erase_key_fwd.hpp,
	  src/other/boost/mpl/eval_if.hpp, src/other/boost/mpl/find.hpp,
	  src/other/boost/mpl/find_if.hpp, src/other/boost/mpl/fold.hpp,
	  src/other/boost/mpl/for_each.hpp, src/other/boost/mpl/front.hpp,
	  src/other/boost/mpl/front_fwd.hpp,
	  src/other/boost/mpl/front_inserter.hpp,
	  src/other/boost/mpl/greater.hpp, src/other/boost/mpl/has_key.hpp,
	  src/other/boost/mpl/has_key_fwd.hpp,
	  src/other/boost/mpl/has_xxx.hpp,
	  src/other/boost/mpl/identity.hpp, src/other/boost/mpl/if.hpp,
	  src/other/boost/mpl/insert.hpp,
	  src/other/boost/mpl/insert_fwd.hpp,
	  src/other/boost/mpl/insert_range.hpp,
	  src/other/boost/mpl/insert_range_fwd.hpp,
	  src/other/boost/mpl/inserter.hpp, src/other/boost/mpl/int.hpp,
	  src/other/boost/mpl/int_fwd.hpp,
	  src/other/boost/mpl/integral_c.hpp,
	  src/other/boost/mpl/integral_c_fwd.hpp,
	  src/other/boost/mpl/integral_c_tag.hpp,
	  src/other/boost/mpl/is_placeholder.hpp,
	  src/other/boost/mpl/is_sequence.hpp,
	  src/other/boost/mpl/iter_fold.hpp,
	  src/other/boost/mpl/iter_fold_if.hpp,
	  src/other/boost/mpl/iterator_category.hpp,
	  src/other/boost/mpl/iterator_range.hpp,
	  src/other/boost/mpl/iterator_tags.hpp,
	  src/other/boost/mpl/joint_view.hpp,
	  src/other/boost/mpl/key_type_fwd.hpp,
	  src/other/boost/mpl/lambda.hpp,
	  src/other/boost/mpl/lambda_fwd.hpp, src/other/boost/mpl/less.hpp,
	  src/other/boost/mpl/limits/arity.hpp,
	  src/other/boost/mpl/limits/list.hpp,
	  src/other/boost/mpl/limits/unrolling.hpp,
	  src/other/boost/mpl/limits/vector.hpp,
	  src/other/boost/mpl/list.hpp,
	  src/other/boost/mpl/list/aux_/O1_size.hpp,
	  src/other/boost/mpl/list/aux_/begin_end.hpp,
	  src/other/boost/mpl/list/aux_/clear.hpp,
	  src/other/boost/mpl/list/aux_/empty.hpp,
	  src/other/boost/mpl/list/aux_/front.hpp,
	  src/other/boost/mpl/list/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/list/aux_/item.hpp,
	  src/other/boost/mpl/list/aux_/iterator.hpp,
	  src/other/boost/mpl/list/aux_/numbered.hpp,
	  src/other/boost/mpl/list/aux_/numbered_c.hpp,
	  src/other/boost/mpl/list/aux_/pop_front.hpp,
	  src/other/boost/mpl/list/aux_/push_back.hpp,
	  src/other/boost/mpl/list/aux_/push_front.hpp,
	  src/other/boost/mpl/list/aux_/size.hpp,
	  src/other/boost/mpl/list/aux_/tag.hpp,
	  src/other/boost/mpl/list/list0.hpp,
	  src/other/boost/mpl/list/list0_c.hpp,
	  src/other/boost/mpl/list/list10.hpp,
	  src/other/boost/mpl/list/list10_c.hpp,
	  src/other/boost/mpl/list/list20.hpp,
	  src/other/boost/mpl/list/list20_c.hpp,
	  src/other/boost/mpl/list/list30.hpp,
	  src/other/boost/mpl/list/list30_c.hpp,
	  src/other/boost/mpl/list/list40.hpp,
	  src/other/boost/mpl/list/list40_c.hpp,
	  src/other/boost/mpl/list/list50.hpp,
	  src/other/boost/mpl/list/list50_c.hpp,
	  src/other/boost/mpl/logical.hpp, src/other/boost/mpl/long.hpp,
	  src/other/boost/mpl/long_fwd.hpp,
	  src/other/boost/mpl/max_element.hpp, src/other/boost/mpl/min.hpp,
	  src/other/boost/mpl/min_max.hpp, src/other/boost/mpl/minus.hpp,
	  src/other/boost/mpl/multiplies.hpp,
	  src/other/boost/mpl/negate.hpp, src/other/boost/mpl/next.hpp,
	  src/other/boost/mpl/next_prior.hpp, src/other/boost/mpl/not.hpp,
	  src/other/boost/mpl/numeric_cast.hpp, src/other/boost/mpl/or.hpp,
	  src/other/boost/mpl/pair.hpp, src/other/boost/mpl/pair_view.hpp,
	  src/other/boost/mpl/placeholders.hpp,
	  src/other/boost/mpl/plus.hpp, src/other/boost/mpl/pop_back.hpp,
	  src/other/boost/mpl/pop_back_fwd.hpp,
	  src/other/boost/mpl/pop_front.hpp,
	  src/other/boost/mpl/pop_front_fwd.hpp,
	  src/other/boost/mpl/prior.hpp, src/other/boost/mpl/protect.hpp,
	  src/other/boost/mpl/push_back.hpp,
	  src/other/boost/mpl/push_back_fwd.hpp,
	  src/other/boost/mpl/push_front.hpp,
	  src/other/boost/mpl/push_front_fwd.hpp,
	  src/other/boost/mpl/quote.hpp, src/other/boost/mpl/remove.hpp,
	  src/other/boost/mpl/remove_if.hpp,
	  src/other/boost/mpl/reverse_fold.hpp,
	  src/other/boost/mpl/reverse_iter_fold.hpp,
	  src/other/boost/mpl/same_as.hpp,
	  src/other/boost/mpl/sequence_tag.hpp,
	  src/other/boost/mpl/sequence_tag_fwd.hpp,
	  src/other/boost/mpl/set/aux_/at_impl.hpp,
	  src/other/boost/mpl/set/aux_/begin_end_impl.hpp,
	  src/other/boost/mpl/set/aux_/clear_impl.hpp,
	  src/other/boost/mpl/set/aux_/empty_impl.hpp,
	  src/other/boost/mpl/set/aux_/erase_impl.hpp,
	  src/other/boost/mpl/set/aux_/erase_key_impl.hpp,
	  src/other/boost/mpl/set/aux_/has_key_impl.hpp,
	  src/other/boost/mpl/set/aux_/insert_impl.hpp,
	  src/other/boost/mpl/set/aux_/item.hpp,
	  src/other/boost/mpl/set/aux_/iterator.hpp,
	  src/other/boost/mpl/set/aux_/key_type_impl.hpp,
	  src/other/boost/mpl/set/aux_/set0.hpp,
	  src/other/boost/mpl/set/aux_/size_impl.hpp,
	  src/other/boost/mpl/set/aux_/tag.hpp,
	  src/other/boost/mpl/set/aux_/value_type_impl.hpp,
	  src/other/boost/mpl/set/set0.hpp, src/other/boost/mpl/size.hpp,
	  src/other/boost/mpl/size_fwd.hpp, src/other/boost/mpl/size_t.hpp,
	  src/other/boost/mpl/size_t_fwd.hpp,
	  src/other/boost/mpl/sizeof.hpp, src/other/boost/mpl/tag.hpp,
	  src/other/boost/mpl/times.hpp, src/other/boost/mpl/transform.hpp,
	  src/other/boost/mpl/value_type_fwd.hpp,
	  src/other/boost/mpl/vector.hpp,
	  src/other/boost/mpl/vector/aux_/O1_size.hpp,
	  src/other/boost/mpl/vector/aux_/at.hpp,
	  src/other/boost/mpl/vector/aux_/back.hpp,
	  src/other/boost/mpl/vector/aux_/begin_end.hpp,
	  src/other/boost/mpl/vector/aux_/clear.hpp,
	  src/other/boost/mpl/vector/aux_/empty.hpp,
	  src/other/boost/mpl/vector/aux_/front.hpp,
	  src/other/boost/mpl/vector/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/vector/aux_/item.hpp,
	  src/other/boost/mpl/vector/aux_/iterator.hpp,
	  src/other/boost/mpl/vector/aux_/numbered.hpp,
	  src/other/boost/mpl/vector/aux_/numbered_c.hpp,
	  src/other/boost/mpl/vector/aux_/pop_back.hpp,
	  src/other/boost/mpl/vector/aux_/pop_front.hpp,
	  src/other/boost/mpl/vector/aux_/push_back.hpp,
	  src/other/boost/mpl/vector/aux_/push_front.hpp,
	  src/other/boost/mpl/vector/aux_/size.hpp,
	  src/other/boost/mpl/vector/aux_/tag.hpp,
	  src/other/boost/mpl/vector/aux_/vector0.hpp,
	  src/other/boost/mpl/vector/vector0.hpp,
	  src/other/boost/mpl/vector/vector0_c.hpp,
	  src/other/boost/mpl/vector/vector10.hpp,
	  src/other/boost/mpl/vector/vector10_c.hpp,
	  src/other/boost/mpl/vector/vector20.hpp,
	  src/other/boost/mpl/vector/vector20_c.hpp,
	  src/other/boost/mpl/vector/vector30.hpp,
	  src/other/boost/mpl/vector/vector30_c.hpp,
	  src/other/boost/mpl/vector/vector40.hpp,
	  src/other/boost/mpl/vector/vector40_c.hpp,
	  src/other/boost/mpl/vector/vector50.hpp,
	  src/other/boost/mpl/vector/vector50_c.hpp,
	  src/other/boost/mpl/void.hpp, src/other/boost/mpl/void_fwd.hpp,
	  src/other/boost/multi_index/detail/safe_mode.hpp,
	  src/other/boost/multi_index/hashed_index.hpp,
	  src/other/boost/multi_index_container.hpp,
	  src/other/boost/optional/optional.hpp,
	  src/other/boost/optional/optional_fwd.hpp,
	  src/other/boost/pending/container_traits.hpp,
	  src/other/boost/pending/ct_if.hpp,
	  src/other/boost/pending/property.hpp,
	  src/other/boost/property_map.hpp,
	  src/other/boost/range/as_literal.hpp,
	  src/other/boost/range/const_iterator.hpp,
	  src/other/boost/range/detail/implementation_help.hpp,
	  src/other/boost/range/iterator.hpp,
	  src/other/boost/range/iterator_range.hpp,
	  src/other/boost/range/mutable_iterator.hpp,
	  src/other/boost/range/size.hpp,
	  src/other/boost/range/size_type.hpp,
	  src/other/boost/serialization/access.hpp,
	  src/other/boost/serialization/base_object.hpp,
	  src/other/boost/serialization/force_include.hpp,
	  src/other/boost/serialization/level.hpp,
	  src/other/boost/serialization/nvp.hpp,
	  src/other/boost/serialization/serialization.hpp,
	  src/other/boost/serialization/throw_exception.hpp,
	  src/other/boost/serialization/tracking.hpp,
	  src/other/boost/serialization/wrapper.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_gcc.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_pthreads.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_sync.hpp,
	  src/other/boost/smart_ptr/detail/lwm_pthreads.hpp,
	  src/other/boost/smart_ptr/detail/quick_allocator.hpp,
	  src/other/boost/smart_ptr/detail/shared_count.hpp,
	  src/other/boost/smart_ptr/detail/sp_convertible.hpp,
	  src/other/boost/smart_ptr/detail/sp_counted_base.hpp,
	  src/other/boost/smart_ptr/detail/sp_counted_base_gcc_sparc.hpp,
	  src/other/boost/smart_ptr/detail/sp_has_sync.hpp,
	  src/other/boost/smart_ptr/detail/yield_k.hpp,
	  src/other/boost/smart_ptr/shared_ptr.hpp,
	  src/other/boost/smart_ptr/weak_ptr.hpp,
	  src/other/boost/spirit.hpp, src/other/boost/spirit/actor,
	  src/other/boost/spirit/attribute/closure_context.hpp,
	  src/other/boost/spirit/attribute/closure_fwd.hpp,
	  src/other/boost/spirit/attribute/parametric.hpp,
	  src/other/boost/spirit/attribute/typeof.hpp,
	  src/other/boost/spirit/core/assert.hpp,
	  src/other/boost/spirit/core/composite,
	  src/other/boost/spirit/core/config.hpp,
	  src/other/boost/spirit/core/match.hpp,
	  src/other/boost/spirit/core/nil.hpp,
	  src/other/boost/spirit/core/non_terminal,
	  src/other/boost/spirit/core/parser.hpp,
	  src/other/boost/spirit/core/primitives,
	  src/other/boost/spirit/core/safe_bool.hpp,
	  src/other/boost/spirit/core/scanner,
	  src/other/boost/spirit/core/typeof.hpp,
	  src/other/boost/spirit/debug, src/other/boost/spirit/debug.hpp,
	  src/other/boost/spirit/dynamic/for.hpp,
	  src/other/boost/spirit/dynamic/lazy.hpp,
	  src/other/boost/spirit/dynamic/rule_alias.hpp,
	  src/other/boost/spirit/dynamic/select.hpp,
	  src/other/boost/spirit/dynamic/stored_rule.hpp,
	  src/other/boost/spirit/dynamic/stored_rule_fwd.hpp,
	  src/other/boost/spirit/dynamic/switch.hpp,
	  src/other/boost/spirit/dynamic/typeof.hpp,
	  src/other/boost/spirit/dynamic/while.hpp,
	  src/other/boost/spirit/error_handling,
	  src/other/boost/spirit/error_handling.hpp,
	  src/other/boost/spirit/home/classic/actor/ref_value_actor.hpp,
	  src/other/boost/spirit/home/classic/actor/typeof.hpp,
	  src/other/boost/spirit/home/classic/attribute/closure.hpp,
	  src/other/boost/spirit/home/classic/attribute/closure_fwd.hpp,
	  src/other/boost/spirit/home/classic/attribute/typeof.hpp,
	  src/other/boost/spirit/home/classic/core/composite/actions.hpp,
	  src/other/boost/spirit/home/classic/core/composite/alternative.hpp,
	  src/other/boost/spirit/home/classic/core/composite/composite.hpp,
	  src/other/boost/spirit/home/classic/core/composite/difference.hpp,
	  src/other/boost/spirit/home/classic/core/composite/kleene_star.hpp,
	  src/other/boost/spirit/home/classic/core/composite/positive.hpp,
	  src/other/boost/spirit/home/classic/core/composite/sequence.hpp,
	  src/other/boost/spirit/home/classic/core/impl/match.ipp,
	  src/other/boost/spirit/home/classic/core/non_terminal/impl/rule.ipp,
	  src/other/boost/spirit/home/classic/core/non_terminal/parser_id.hpp,
	  src/other/boost/spirit/home/classic/core/non_terminal/rule.hpp,
	  src/other/boost/spirit/home/classic/core/non_terminal/subrule.hpp,
	  src/other/boost/spirit/home/classic/core/primitives/impl/numerics.ipp,
	  src/other/boost/spirit/home/classic/core/typeof.hpp,
	  src/other/boost/spirit/home/classic/debug/typeof.hpp,
	  src/other/boost/spirit/home/classic/dynamic.hpp,
	  src/other/boost/spirit/home/classic/dynamic/impl/select.ipp,
	  src/other/boost/spirit/home/classic/dynamic/impl/switch.ipp,
	  src/other/boost/spirit/home/classic/dynamic/lazy.hpp,
	  src/other/boost/spirit/home/classic/dynamic/select.hpp,
	  src/other/boost/spirit/home/classic/dynamic/switch.hpp,
	  src/other/boost/spirit/home/classic/dynamic/typeof.hpp,
	  src/other/boost/spirit/home/classic/error_handling/exceptions.hpp,
	  src/other/boost/spirit/home/classic/error_handling/typeof.hpp,
	  src/other/boost/spirit/home/classic/iterator/typeof.hpp,
	  src/other/boost/spirit/home/classic/meta/refactoring.hpp,
	  src/other/boost/spirit/home/classic/phoenix/actor.hpp,
	  src/other/boost/spirit/home/classic/phoenix/closures.hpp,
	  src/other/boost/spirit/home/classic/phoenix/composite.hpp,
	  src/other/boost/spirit/home/classic/phoenix/primitives.hpp,
	  src/other/boost/spirit/home/classic/phoenix/tuples.hpp,
	  src/other/boost/spirit/home/classic/symbols/typeof.hpp,
	  src/other/boost/spirit/home/classic/tree,
	  src/other/boost/spirit/home/classic/utility/confix.hpp,
	  src/other/boost/spirit/home/classic/utility/grammar_def.hpp,
	  src/other/boost/spirit/home/classic/utility/grammar_def_fwd.hpp,
	  src/other/boost/spirit/home/classic/utility/impl/regex.ipp,
	  src/other/boost/spirit/home/classic/utility/regex.hpp,
	  src/other/boost/spirit/home/classic/utility/rule_parser.hpp,
	  src/other/boost/spirit/home/classic/utility/typeof.hpp,
	  src/other/boost/spirit/home/karma,
	  src/other/boost/spirit/home/karma.hpp,
	  src/other/boost/spirit/home/lex,
	  src/other/boost/spirit/home/lex.hpp,
	  src/other/boost/spirit/home/phoenix/core/actor.hpp,
	  src/other/boost/spirit/home/phoenix/core/argument.hpp,
	  src/other/boost/spirit/home/phoenix/core/basic_environment.hpp,
	  src/other/boost/spirit/home/phoenix/core/composite.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/actor.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/composite_eval.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/composite_info.hpp,
	  src/other/boost/spirit/home/phoenix/core/limits.hpp,
	  src/other/boost/spirit/home/phoenix/core/reference.hpp,
	  src/other/boost/spirit/home/phoenix/detail/type_deduction.hpp,
	  src/other/boost/spirit/home/phoenix/object/new.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/io.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/mem_fun_ptr_eval.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/mem_fun_ptr_gen.hpp,
	  src/other/boost/spirit/home/phoenix/operator/member.hpp,
	  src/other/boost/spirit/home/phoenix/scope/detail/local_variable.hpp,
	  src/other/boost/spirit/home/phoenix/scope/dynamic.hpp,
	  src/other/boost/spirit/home/phoenix/scope/lambda.hpp,
	  src/other/boost/spirit/home/phoenix/scope/let.hpp,
	  src/other/boost/spirit/home/phoenix/scope/local_variable.hpp,
	  src/other/boost/spirit/home/phoenix/scope/scoped_environment.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/catch_all_eval.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/catch_eval.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/switch.hpp,
	  src/other/boost/spirit/home/phoenix/statement/if.hpp,
	  src/other/boost/spirit/home/phoenix/statement/switch.hpp,
	  src/other/boost/spirit/home/phoenix/statement/try_catch.hpp,
	  src/other/boost/spirit/home/phoenix/stl.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_hash_map.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_hash_set.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_list.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_map.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_set.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_hash_map_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_hash_set_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_list_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_map_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_set_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/container/container.hpp,
	  src/other/boost/spirit/home/qi,
	  src/other/boost/spirit/home/qi.hpp,
	  src/other/boost/spirit/home/support,
	  src/other/boost/spirit/home/support.hpp,
	  src/other/boost/spirit/include/classic_actions.hpp,
	  src/other/boost/spirit/include/classic_alternative.hpp,
	  src/other/boost/spirit/include/classic_as_parser.hpp,
	  src/other/boost/spirit/include/classic_assert.hpp,
	  src/other/boost/spirit/include/classic_assign_actor.hpp,
	  src/other/boost/spirit/include/classic_assign_key_actor.hpp,
	  src/other/boost/spirit/include/classic_ast.hpp,
	  src/other/boost/spirit/include/classic_ast_fwd.hpp,
	  src/other/boost/spirit/include/classic_basic_chset.hpp,
	  src/other/boost/spirit/include/classic_chset.hpp,
	  src/other/boost/spirit/include/classic_chset_operators.hpp,
	  src/other/boost/spirit/include/classic_clear_actor.hpp,
	  src/other/boost/spirit/include/classic_closure_context.hpp,
	  src/other/boost/spirit/include/classic_closure_fwd.hpp,
	  src/other/boost/spirit/include/classic_common.hpp,
	  src/other/boost/spirit/include/classic_common_fwd.hpp,
	  src/other/boost/spirit/include/classic_composite.hpp,
	  src/other/boost/spirit/include/classic_config.hpp,
	  src/other/boost/spirit/include/classic_confix_fwd.hpp,
	  src/other/boost/spirit/include/classic_debug.hpp,
	  src/other/boost/spirit/include/classic_debug_node.hpp,
	  src/other/boost/spirit/include/classic_decrement_actor.hpp,
	  src/other/boost/spirit/include/classic_difference.hpp,
	  src/other/boost/spirit/include/classic_directives.hpp,
	  src/other/boost/spirit/include/classic_distinct_fwd.hpp,
	  src/other/boost/spirit/include/classic_epsilon.hpp,
	  src/other/boost/spirit/include/classic_erase_actor.hpp,
	  src/other/boost/spirit/include/classic_error_handling.hpp,
	  src/other/boost/spirit/include/classic_escape_char_fwd.hpp,
	  src/other/boost/spirit/include/classic_exceptions.hpp,
	  src/other/boost/spirit/include/classic_exceptions_fwd.hpp,
	  src/other/boost/spirit/include/classic_exclusive_or.hpp,
	  src/other/boost/spirit/include/classic_file_iterator.hpp,
	  src/other/boost/spirit/include/classic_file_iterator_fwd.hpp,
	  src/other/boost/spirit/include/classic_fixed_size_queue.hpp,
	  src/other/boost/spirit/include/classic_flush_multi_pass.hpp,
	  src/other/boost/spirit/include/classic_for.hpp,
	  src/other/boost/spirit/include/classic_fundamental.hpp,
	  src/other/boost/spirit/include/classic_grammar.hpp,
	  src/other/boost/spirit/include/classic_grammar_def.hpp,
	  src/other/boost/spirit/include/classic_grammar_def_fwd.hpp,
	  src/other/boost/spirit/include/classic_increment_actor.hpp,
	  src/other/boost/spirit/include/classic_insert_at_actor.hpp,
	  src/other/boost/spirit/include/classic_insert_key_actor.hpp,
	  src/other/boost/spirit/include/classic_intersection.hpp,
	  src/other/boost/spirit/include/classic_iterator.hpp,
	  src/other/boost/spirit/include/classic_kleene_star.hpp,
	  src/other/boost/spirit/include/classic_lazy.hpp,
	  src/other/boost/spirit/include/classic_list.hpp,
	  src/other/boost/spirit/include/classic_lists_fwd.hpp,
	  src/other/boost/spirit/include/classic_loops.hpp,
	  src/other/boost/spirit/include/classic_match.hpp,
	  src/other/boost/spirit/include/classic_meta.hpp,
	  src/other/boost/spirit/include/classic_minimal.hpp,
	  src/other/boost/spirit/include/classic_multi_pass_fwd.hpp,
	  src/other/boost/spirit/include/classic_nil.hpp,
	  src/other/boost/spirit/include/classic_no_actions.hpp,
	  src/other/boost/spirit/include/classic_numerics.hpp,
	  src/other/boost/spirit/include/classic_numerics_fwd.hpp,
	  src/other/boost/spirit/include/classic_operators.hpp,
	  src/other/boost/spirit/include/classic_optional.hpp,
	  src/other/boost/spirit/include/classic_parametric.hpp,
	  src/other/boost/spirit/include/classic_parse_tree.hpp,
	  src/other/boost/spirit/include/classic_parse_tree_fwd.hpp,
	  src/other/boost/spirit/include/classic_parse_tree_utils.hpp,
	  src/other/boost/spirit/include/classic_parser.hpp,
	  src/other/boost/spirit/include/classic_parser_context.hpp,
	  src/other/boost/spirit/include/classic_parser_id.hpp,
	  src/other/boost/spirit/include/classic_parser_names.hpp,
	  src/other/boost/spirit/include/classic_parser_traits.hpp,
	  src/other/boost/spirit/include/classic_position_iterator.hpp,
	  src/other/boost/spirit/include/classic_position_iterator_fwd.hpp,
	  src/other/boost/spirit/include/classic_positive.hpp,
	  src/other/boost/spirit/include/classic_primitives.hpp,
	  src/other/boost/spirit/include/classic_push_back_actor.hpp,
	  src/other/boost/spirit/include/classic_push_front_actor.hpp,
	  src/other/boost/spirit/include/classic_range_run.hpp,
	  src/other/boost/spirit/include/classic_ref_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_const_ref_a.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_value_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_value_actor.hpp,
	  src/other/boost/spirit/include/classic_refactoring.hpp,
	  src/other/boost/spirit/include/classic_regex.hpp,
	  src/other/boost/spirit/include/classic_rule.hpp,
	  src/other/boost/spirit/include/classic_rule_alias.hpp,
	  src/other/boost/spirit/include/classic_rule_parser.hpp,
	  src/other/boost/spirit/include/classic_safe_bool.hpp,
	  src/other/boost/spirit/include/classic_scanner.hpp,
	  src/other/boost/spirit/include/classic_scanner_fwd.hpp,
	  src/other/boost/spirit/include/classic_scoped_lock.hpp,
	  src/other/boost/spirit/include/classic_select.hpp,
	  src/other/boost/spirit/include/classic_sequence.hpp,
	  src/other/boost/spirit/include/classic_sequential_and.hpp,
	  src/other/boost/spirit/include/classic_sequential_or.hpp,
	  src/other/boost/spirit/include/classic_skipper.hpp,
	  src/other/boost/spirit/include/classic_skipper_fwd.hpp,
	  src/other/boost/spirit/include/classic_spirit.hpp,
	  src/other/boost/spirit/include/classic_static.hpp,
	  src/other/boost/spirit/include/classic_stored_rule.hpp,
	  src/other/boost/spirit/include/classic_stored_rule_fwd.hpp,
	  src/other/boost/spirit/include/classic_subrule.hpp,
	  src/other/boost/spirit/include/classic_subrule_fwd.hpp,
	  src/other/boost/spirit/include/classic_swap_actor.hpp,
	  src/other/boost/spirit/include/classic_switch.hpp,
	  src/other/boost/spirit/include/classic_symbols_fwd.hpp,
	  src/other/boost/spirit/include/classic_traverse.hpp,
	  src/other/boost/spirit/include/classic_tree_to_xml.hpp,
	  src/other/boost/spirit/include/classic_typeof.hpp,
	  src/other/boost/spirit/include/classic_utility.hpp,
	  src/other/boost/spirit/include/classic_version.hpp,
	  src/other/boost/spirit/include/classic_while.hpp,
	  src/other/boost/spirit/include/karma.hpp,
	  src/other/boost/spirit/include/karma_action.hpp,
	  src/other/boost/spirit/include/karma_alternative.hpp,
	  src/other/boost/spirit/include/karma_and_predicate.hpp,
	  src/other/boost/spirit/include/karma_attr_cast.hpp,
	  src/other/boost/spirit/include/karma_auto.hpp,
	  src/other/boost/spirit/include/karma_auxiliary.hpp,
	  src/other/boost/spirit/include/karma_binary.hpp,
	  src/other/boost/spirit/include/karma_bool.hpp,
	  src/other/boost/spirit/include/karma_buffer.hpp,
	  src/other/boost/spirit/include/karma_center_alignment.hpp,
	  src/other/boost/spirit/include/karma_char.hpp,
	  src/other/boost/spirit/include/karma_char_.hpp,
	  src/other/boost/spirit/include/karma_char_class.hpp,
	  src/other/boost/spirit/include/karma_columns.hpp,
	  src/other/boost/spirit/include/karma_delimit.hpp,
	  src/other/boost/spirit/include/karma_directive.hpp,
	  src/other/boost/spirit/include/karma_domain.hpp,
	  src/other/boost/spirit/include/karma_duplicate.hpp,
	  src/other/boost/spirit/include/karma_eol.hpp,
	  src/other/boost/spirit/include/karma_eps.hpp,
	  src/other/boost/spirit/include/karma_format.hpp,
	  src/other/boost/spirit/include/karma_format_attr.hpp,
	  src/other/boost/spirit/include/karma_format_auto.hpp,
	  src/other/boost/spirit/include/karma_generate.hpp,
	  src/other/boost/spirit/include/karma_generate_attr.hpp,
	  src/other/boost/spirit/include/karma_generate_auto.hpp,
	  src/other/boost/spirit/include/karma_grammar.hpp,
	  src/other/boost/spirit/include/karma_int.hpp,
	  src/other/boost/spirit/include/karma_kleene.hpp,
	  src/other/boost/spirit/include/karma_lazy.hpp,
	  src/other/boost/spirit/include/karma_left_alignment.hpp,
	  src/other/boost/spirit/include/karma_list.hpp,
	  src/other/boost/spirit/include/karma_maxwidth.hpp,
	  src/other/boost/spirit/include/karma_no_delimit.hpp,
	  src/other/boost/spirit/include/karma_nonterminal.hpp,
	  src/other/boost/spirit/include/karma_not_predicate.hpp,
	  src/other/boost/spirit/include/karma_numeric.hpp,
	  src/other/boost/spirit/include/karma_omit.hpp,
	  src/other/boost/spirit/include/karma_operator.hpp,
	  src/other/boost/spirit/include/karma_optional.hpp,
	  src/other/boost/spirit/include/karma_phoenix_attributes.hpp,
	  src/other/boost/spirit/include/karma_plus.hpp,
	  src/other/boost/spirit/include/karma_real.hpp,
	  src/other/boost/spirit/include/karma_repeat.hpp,
	  src/other/boost/spirit/include/karma_right_alignment.hpp,
	  src/other/boost/spirit/include/karma_rule.hpp,
	  src/other/boost/spirit/include/karma_sequence.hpp,
	  src/other/boost/spirit/include/karma_stream.hpp,
	  src/other/boost/spirit/include/karma_strict_relaxed.hpp,
	  src/other/boost/spirit/include/karma_string.hpp,
	  src/other/boost/spirit/include/karma_symbols.hpp,
	  src/other/boost/spirit/include/karma_uint.hpp,
	  src/other/boost/spirit/include/karma_upper_lower_case.hpp,
	  src/other/boost/spirit/include/karma_verbatim.hpp,
	  src/other/boost/spirit/include/karma_what.hpp,
	  src/other/boost/spirit/include/lex.hpp,
	  src/other/boost/spirit/include/lex_char_token_def.hpp,
	  src/other/boost/spirit/include/lex_domain.hpp,
	  src/other/boost/spirit/include/lex_generate_static_lexertl.hpp,
	  src/other/boost/spirit/include/lex_lexer.hpp,
	  src/other/boost/spirit/include/lex_lexertl.hpp,
	  src/other/boost/spirit/include/lex_primitives.hpp,
	  src/other/boost/spirit/include/lex_static_lexertl.hpp,
	  src/other/boost/spirit/include/lex_tokenize_and_parse.hpp,
	  src/other/boost/spirit/include/lex_tokenize_and_parse_attr.hpp,
	  src/other/boost/spirit/include/phoenix.hpp,
	  src/other/boost/spirit/include/phoenix1.hpp,
	  src/other/boost/spirit/include/phoenix1_actor.hpp,
	  src/other/boost/spirit/include/phoenix1_casts.hpp,
	  src/other/boost/spirit/include/phoenix1_closures.hpp,
	  src/other/boost/spirit/include/phoenix1_composite.hpp,
	  src/other/boost/spirit/include/phoenix1_new.hpp,
	  src/other/boost/spirit/include/phoenix1_operators.hpp,
	  src/other/boost/spirit/include/phoenix1_primitives.hpp,
	  src/other/boost/spirit/include/phoenix1_special_ops.hpp,
	  src/other/boost/spirit/include/phoenix1_statements.hpp,
	  src/other/boost/spirit/include/phoenix1_tuple_helpers.hpp,
	  src/other/boost/spirit/include/phoenix1_tuples.hpp,
	  src/other/boost/spirit/include/phoenix_algorithm.hpp,
	  src/other/boost/spirit/include/phoenix_bind.hpp,
	  src/other/boost/spirit/include/phoenix_container.hpp,
	  src/other/boost/spirit/include/phoenix_core.hpp,
	  src/other/boost/spirit/include/phoenix_function.hpp,
	  src/other/boost/spirit/include/phoenix_fusion.hpp,
	  src/other/boost/spirit/include/phoenix_object.hpp,
	  src/other/boost/spirit/include/phoenix_operator.hpp,
	  src/other/boost/spirit/include/phoenix_scope.hpp,
	  src/other/boost/spirit/include/phoenix_statement.hpp,
	  src/other/boost/spirit/include/phoenix_stl.hpp,
	  src/other/boost/spirit/include/phoenix_version.hpp,
	  src/other/boost/spirit/include/qi.hpp,
	  src/other/boost/spirit/include/qi_action.hpp,
	  src/other/boost/spirit/include/qi_alternative.hpp,
	  src/other/boost/spirit/include/qi_and_predicate.hpp,
	  src/other/boost/spirit/include/qi_attr.hpp,
	  src/other/boost/spirit/include/qi_attr_cast.hpp,
	  src/other/boost/spirit/include/qi_auto.hpp,
	  src/other/boost/spirit/include/qi_auxiliary.hpp,
	  src/other/boost/spirit/include/qi_binary.hpp,
	  src/other/boost/spirit/include/qi_bool.hpp,
	  src/other/boost/spirit/include/qi_char.hpp,
	  src/other/boost/spirit/include/qi_char_.hpp,
	  src/other/boost/spirit/include/qi_char_class.hpp,
	  src/other/boost/spirit/include/qi_core.hpp,
	  src/other/boost/spirit/include/qi_difference.hpp,
	  src/other/boost/spirit/include/qi_directive.hpp,
	  src/other/boost/spirit/include/qi_domain.hpp,
	  src/other/boost/spirit/include/qi_eoi.hpp,
	  src/other/boost/spirit/include/qi_eol.hpp,
	  src/other/boost/spirit/include/qi_eps.hpp,
	  src/other/boost/spirit/include/qi_expect.hpp,
	  src/other/boost/spirit/include/qi_grammar.hpp,
	  src/other/boost/spirit/include/qi_int.hpp,
	  src/other/boost/spirit/include/qi_kleene.hpp,
	  src/other/boost/spirit/include/qi_lazy.hpp,
	  src/other/boost/spirit/include/qi_lexeme.hpp,
	  src/other/boost/spirit/include/qi_list.hpp,
	  src/other/boost/spirit/include/qi_lit.hpp,
	  src/other/boost/spirit/include/qi_match.hpp,
	  src/other/boost/spirit/include/qi_match_attr.hpp,
	  src/other/boost/spirit/include/qi_match_auto.hpp,
	  src/other/boost/spirit/include/qi_matches.hpp,
	  src/other/boost/spirit/include/qi_no_case.hpp,
	  src/other/boost/spirit/include/qi_no_skip.hpp,
	  src/other/boost/spirit/include/qi_nonterminal.hpp,
	  src/other/boost/spirit/include/qi_not_predicate.hpp,
	  src/other/boost/spirit/include/qi_numeric.hpp,
	  src/other/boost/spirit/include/qi_omit.hpp,
	  src/other/boost/spirit/include/qi_operator.hpp,
	  src/other/boost/spirit/include/qi_optional.hpp,
	  src/other/boost/spirit/include/qi_parse.hpp,
	  src/other/boost/spirit/include/qi_parse_attr.hpp,
	  src/other/boost/spirit/include/qi_parse_auto.hpp,
	  src/other/boost/spirit/include/qi_permutation.hpp,
	  src/other/boost/spirit/include/qi_plus.hpp,
	  src/other/boost/spirit/include/qi_raw.hpp,
	  src/other/boost/spirit/include/qi_real.hpp,
	  src/other/boost/spirit/include/qi_repeat.hpp,
	  src/other/boost/spirit/include/qi_rule.hpp,
	  src/other/boost/spirit/include/qi_sequence.hpp,
	  src/other/boost/spirit/include/qi_sequential_or.hpp,
	  src/other/boost/spirit/include/qi_skip.hpp,
	  src/other/boost/spirit/include/qi_stream.hpp,
	  src/other/boost/spirit/include/qi_string.hpp,
	  src/other/boost/spirit/include/qi_symbols.hpp,
	  src/other/boost/spirit/include/qi_uint.hpp,
	  src/other/boost/spirit/include/qi_what.hpp,
	  src/other/boost/spirit/include/support.hpp,
	  src/other/boost/spirit/include/support_adapt_class_attributes.hpp,
	  src/other/boost/spirit/include/support_any.hpp,
	  src/other/boost/spirit/include/support_any_if.hpp,
	  src/other/boost/spirit/include/support_any_if_ns.hpp,
	  src/other/boost/spirit/include/support_any_ns.hpp,
	  src/other/boost/spirit/include/support_argument.hpp,
	  src/other/boost/spirit/include/support_ascii.hpp,
	  src/other/boost/spirit/include/support_attributes.hpp,
	  src/other/boost/spirit/include/support_attributes_fwd.hpp,
	  src/other/boost/spirit/include/support_char_class.hpp,
	  src/other/boost/spirit/include/support_iso8859_1.hpp,
	  src/other/boost/spirit/include/support_istream_iterator.hpp,
	  src/other/boost/spirit/include/support_locals.hpp,
	  src/other/boost/spirit/include/support_look_ahead.hpp,
	  src/other/boost/spirit/include/support_modify.hpp,
	  src/other/boost/spirit/include/support_multi_pass.hpp,
	  src/other/boost/spirit/include/support_multi_pass_fwd.hpp,
	  src/other/boost/spirit/include/support_ostream_iterator.hpp,
	  src/other/boost/spirit/include/support_standard.hpp,
	  src/other/boost/spirit/include/support_standard_wide.hpp,
	  src/other/boost/spirit/include/support_string_traits.hpp,
	  src/other/boost/spirit/include/support_unused.hpp,
	  src/other/boost/spirit/include/version.hpp,
	  src/other/boost/spirit/iterator.hpp,
	  src/other/boost/spirit/iterator/file_iterator.hpp,
	  src/other/boost/spirit/iterator/file_iterator_fwd.hpp,
	  src/other/boost/spirit/iterator/fixed_size_queue.hpp,
	  src/other/boost/spirit/iterator/multi_pass_fwd.hpp,
	  src/other/boost/spirit/iterator/position_iterator.hpp,
	  src/other/boost/spirit/iterator/position_iterator_fwd.hpp,
	  src/other/boost/spirit/iterator/typeof.hpp,
	  src/other/boost/spirit/meta, src/other/boost/spirit/meta.hpp,
	  src/other/boost/spirit/phoenix/actor.hpp,
	  src/other/boost/spirit/phoenix/casts.hpp,
	  src/other/boost/spirit/phoenix/closures.hpp,
	  src/other/boost/spirit/phoenix/composite.hpp,
	  src/other/boost/spirit/phoenix/new.hpp,
	  src/other/boost/spirit/phoenix/operators.hpp,
	  src/other/boost/spirit/phoenix/primitives.hpp,
	  src/other/boost/spirit/phoenix/special_ops.hpp,
	  src/other/boost/spirit/phoenix/statements.hpp,
	  src/other/boost/spirit/phoenix/tuple_helpers.hpp,
	  src/other/boost/spirit/phoenix/tuples.hpp,
	  src/other/boost/spirit/repository,
	  src/other/boost/spirit/symbols.hpp,
	  src/other/boost/spirit/symbols/symbols_fwd.hpp,
	  src/other/boost/spirit/symbols/typeof.hpp,
	  src/other/boost/spirit/tree, src/other/boost/spirit/utility.hpp,
	  src/other/boost/spirit/utility/chset.hpp,
	  src/other/boost/spirit/utility/chset_operators.hpp,
	  src/other/boost/spirit/utility/confix_fwd.hpp,
	  src/other/boost/spirit/utility/distinct_fwd.hpp,
	  src/other/boost/spirit/utility/escape_char_fwd.hpp,
	  src/other/boost/spirit/utility/flush_multi_pass.hpp,
	  src/other/boost/spirit/utility/grammar_def.hpp,
	  src/other/boost/spirit/utility/grammar_def_fwd.hpp,
	  src/other/boost/spirit/utility/lists_fwd.hpp,
	  src/other/boost/spirit/utility/loops.hpp,
	  src/other/boost/spirit/utility/regex.hpp,
	  src/other/boost/spirit/utility/rule_parser.hpp,
	  src/other/boost/spirit/utility/scoped_lock.hpp,
	  src/other/boost/spirit/utility/typeof.hpp,
	  src/other/boost/spirit/version.hpp,
	  src/other/boost/thread/detail/config.hpp,
	  src/other/boost/thread/detail/move.hpp,
	  src/other/boost/thread/detail/platform.hpp,
	  src/other/boost/thread/detail/thread.hpp,
	  src/other/boost/thread/detail/tss_hooks.hpp,
	  src/other/boost/thread/exceptions.hpp,
	  src/other/boost/thread/locks.hpp,
	  src/other/boost/thread/pthread/condition_variable.hpp,
	  src/other/boost/thread/pthread/condition_variable_fwd.hpp,
	  src/other/boost/thread/pthread/mutex.hpp,
	  src/other/boost/thread/pthread/once.hpp,
	  src/other/boost/thread/pthread/thread_data.hpp,
	  src/other/boost/thread/pthread/thread_heap_alloc.hpp,
	  src/other/boost/thread/thread.hpp,
	  src/other/boost/thread/tss.hpp,
	  src/other/boost/thread/win32/basic_timed_mutex.hpp,
	  src/other/boost/thread/win32/mutex.hpp,
	  src/other/boost/thread/win32/once.hpp,
	  src/other/boost/thread/win32/thread_data.hpp,
	  src/other/boost/thread/win32/thread_heap_alloc.hpp,
	  src/other/boost/thread/win32/thread_primitives.hpp,
	  src/other/boost/throw_exception.hpp,
	  src/other/boost/token_functions.hpp,
	  src/other/boost/tuple/detail/tuple_basic.hpp,
	  src/other/boost/type_traits.hpp,
	  src/other/boost/type_traits/add_reference.hpp,
	  src/other/boost/type_traits/alignment_of.hpp,
	  src/other/boost/type_traits/detail/bool_trait_def.hpp,
	  src/other/boost/type_traits/detail/bool_trait_undef.hpp,
	  src/other/boost/type_traits/detail/size_t_trait_def.hpp,
	  src/other/boost/type_traits/detail/size_t_trait_undef.hpp,
	  src/other/boost/type_traits/detail/type_trait_def.hpp,
	  src/other/boost/type_traits/detail/type_trait_undef.hpp,
	  src/other/boost/type_traits/function_traits.hpp,
	  src/other/boost/type_traits/intrinsics.hpp,
	  src/other/boost/type_traits/is_abstract.hpp,
	  src/other/boost/type_traits/is_base_and_derived.hpp,
	  src/other/boost/type_traits/is_base_of.hpp,
	  src/other/boost/type_traits/is_complex.hpp,
	  src/other/boost/type_traits/is_const.hpp,
	  src/other/boost/type_traits/is_convertible.hpp,
	  src/other/boost/type_traits/is_empty.hpp,
	  src/other/boost/type_traits/is_function.hpp,
	  src/other/boost/type_traits/is_lvalue_reference.hpp,
	  src/other/boost/type_traits/is_member_function_pointer.hpp,
	  src/other/boost/type_traits/is_member_pointer.hpp,
	  src/other/boost/type_traits/is_reference.hpp,
	  src/other/boost/type_traits/is_rvalue_reference.hpp,
	  src/other/boost/type_traits/is_same.hpp,
	  src/other/boost/type_traits/is_signed.hpp,
	  src/other/boost/type_traits/is_unsigned.hpp,
	  src/other/boost/type_traits/is_volatile.hpp,
	  src/other/boost/type_traits/msvc/remove_all_extents.hpp,
	  src/other/boost/type_traits/msvc/remove_bounds.hpp,
	  src/other/boost/type_traits/msvc/remove_const.hpp,
	  src/other/boost/type_traits/msvc/remove_cv.hpp,
	  src/other/boost/type_traits/msvc/remove_extent.hpp,
	  src/other/boost/type_traits/msvc/remove_pointer.hpp,
	  src/other/boost/type_traits/msvc/remove_reference.hpp,
	  src/other/boost/type_traits/msvc/remove_volatile.hpp,
	  src/other/boost/type_traits/remove_const.hpp,
	  src/other/boost/type_traits/remove_cv.hpp,
	  src/other/boost/type_traits/remove_reference.hpp,
	  src/other/boost/type_traits/remove_volatile.hpp,
	  src/other/boost/type_traits/type_with_alignment.hpp,
	  src/other/boost/utility/addressof.hpp,
	  src/other/boost/utility/compare_pointees.hpp,
	  src/other/boost/utility/detail/in_place_factory_prefix.hpp,
	  src/other/boost/utility/detail/in_place_factory_suffix.hpp,
	  src/other/boost/utility/detail/result_of_iterate.hpp,
	  src/other/boost/utility/in_place_factory.hpp,
	  src/other/boost/utility/result_of.hpp,
	  src/other/boost/utility/value_init.hpp,
	  src/other/boost/variant/detail/apply_visitor_binary.hpp,
	  src/other/boost/variant/detail/apply_visitor_delayed.hpp,
	  src/other/boost/variant/detail/apply_visitor_unary.hpp,
	  src/other/boost/variant/detail/variant_io.hpp,
	  src/other/boost/variant/detail/visitation_impl.hpp,
	  src/other/boost/variant/variant.hpp, src/other/boost/version.hpp:
	  Revert the boost upgrade - resulting in filenames too long for
	  tar. Will deal with this after the release.

2010-11-04 22:35  starseeker

	* [r41250] src/other/boost/algorithm/string/case_conv.hpp,
	  src/other/boost/algorithm/string/detail/case_conv.hpp,
	  src/other/boost/algorithm/string/detail/find_format.hpp,
	  src/other/boost/algorithm/string/detail/find_format_all.hpp,
	  src/other/boost/algorithm/string/detail/find_format_store.hpp,
	  src/other/boost/algorithm/string/detail/finder.hpp,
	  src/other/boost/algorithm/string/detail/replace_storage.hpp,
	  src/other/boost/algorithm/string/detail/sequence.hpp,
	  src/other/boost/algorithm/string/find_format.hpp,
	  src/other/boost/algorithm/string/finder.hpp,
	  src/other/boost/algorithm/string/formatter.hpp,
	  src/other/boost/algorithm/string/replace.hpp,
	  src/other/boost/aligned_storage.hpp, src/other/boost/any.hpp,
	  src/other/boost/archive/archive_exception.hpp,
	  src/other/boost/bind.hpp, src/other/boost/bind/bind_mf2_cc.hpp,
	  src/other/boost/bind/mem_fn_template.hpp,
	  src/other/boost/bind/placeholders.hpp, src/other/boost/blank.hpp,
	  src/other/boost/concept/detail/backward_compatibility.hpp,
	  src/other/boost/concept/detail/borland.hpp,
	  src/other/boost/concept/detail/general.hpp,
	  src/other/boost/concept/detail/has_constraints.hpp,
	  src/other/boost/concept/detail/msvc.hpp,
	  src/other/boost/concept/usage.hpp,
	  src/other/boost/concept_check.hpp,
	  src/other/boost/config/abi/borland_prefix.hpp,
	  src/other/boost/config/auto_link.hpp,
	  src/other/boost/config/compiler/borland.hpp,
	  src/other/boost/config/compiler/codegear.hpp,
	  src/other/boost/config/compiler/common_edg.hpp,
	  src/other/boost/config/compiler/digitalmars.hpp,
	  src/other/boost/config/compiler/gcc.hpp,
	  src/other/boost/config/compiler/gcc_xml.hpp,
	  src/other/boost/config/compiler/hp_acc.hpp,
	  src/other/boost/config/compiler/intel.hpp,
	  src/other/boost/config/compiler/kai.hpp,
	  src/other/boost/config/compiler/metrowerks.hpp,
	  src/other/boost/config/compiler/mpw.hpp,
	  src/other/boost/config/compiler/pgi.hpp,
	  src/other/boost/config/compiler/sgi_mipspro.hpp,
	  src/other/boost/config/compiler/sunpro_cc.hpp,
	  src/other/boost/config/compiler/vacpp.hpp,
	  src/other/boost/config/compiler/visualc.hpp,
	  src/other/boost/config/platform/cygwin.hpp,
	  src/other/boost/config/platform/win32.hpp,
	  src/other/boost/config/select_compiler_config.hpp,
	  src/other/boost/config/select_platform_config.hpp,
	  src/other/boost/config/select_stdlib_config.hpp,
	  src/other/boost/config/stdlib/dinkumware.hpp,
	  src/other/boost/config/stdlib/libcomo.hpp,
	  src/other/boost/config/stdlib/libstdcpp3.hpp,
	  src/other/boost/config/stdlib/modena.hpp,
	  src/other/boost/config/stdlib/msl.hpp,
	  src/other/boost/config/stdlib/roguewave.hpp,
	  src/other/boost/config/stdlib/sgi.hpp,
	  src/other/boost/config/stdlib/stlport.hpp,
	  src/other/boost/config/stdlib/vacpp.hpp,
	  src/other/boost/config/suffix.hpp, src/other/boost/cstdint.hpp,
	  src/other/boost/date_time/adjust_functors.hpp,
	  src/other/boost/date_time/c_time.hpp,
	  src/other/boost/date_time/compiler_config.hpp,
	  src/other/boost/date_time/constrained_value.hpp,
	  src/other/boost/date_time/date.hpp,
	  src/other/boost/date_time/date_clock_device.hpp,
	  src/other/boost/date_time/date_defs.hpp,
	  src/other/boost/date_time/date_duration.hpp,
	  src/other/boost/date_time/date_duration_types.hpp,
	  src/other/boost/date_time/date_facet.hpp,
	  src/other/boost/date_time/date_format_simple.hpp,
	  src/other/boost/date_time/date_formatting.hpp,
	  src/other/boost/date_time/date_formatting_limited.hpp,
	  src/other/boost/date_time/date_formatting_locales.hpp,
	  src/other/boost/date_time/date_generator_formatter.hpp,
	  src/other/boost/date_time/date_generator_parser.hpp,
	  src/other/boost/date_time/date_generators.hpp,
	  src/other/boost/date_time/date_iterator.hpp,
	  src/other/boost/date_time/date_names_put.hpp,
	  src/other/boost/date_time/date_parsing.hpp,
	  src/other/boost/date_time/dst_rules.hpp,
	  src/other/boost/date_time/filetime_functions.hpp,
	  src/other/boost/date_time/format_date_parser.hpp,
	  src/other/boost/date_time/gregorian/conversion.hpp,
	  src/other/boost/date_time/gregorian/formatters.hpp,
	  src/other/boost/date_time/gregorian/formatters_limited.hpp,
	  src/other/boost/date_time/gregorian/greg_calendar.hpp,
	  src/other/boost/date_time/gregorian/greg_date.hpp,
	  src/other/boost/date_time/gregorian/greg_day.hpp,
	  src/other/boost/date_time/gregorian/greg_day_of_year.hpp,
	  src/other/boost/date_time/gregorian/greg_duration.hpp,
	  src/other/boost/date_time/gregorian/greg_duration_types.hpp,
	  src/other/boost/date_time/gregorian/greg_facet.hpp,
	  src/other/boost/date_time/gregorian/greg_month.hpp,
	  src/other/boost/date_time/gregorian/greg_weekday.hpp,
	  src/other/boost/date_time/gregorian/greg_year.hpp,
	  src/other/boost/date_time/gregorian/greg_ymd.hpp,
	  src/other/boost/date_time/gregorian/gregorian_io.hpp,
	  src/other/boost/date_time/gregorian/gregorian_types.hpp,
	  src/other/boost/date_time/gregorian/parsers.hpp,
	  src/other/boost/date_time/gregorian_calendar.hpp,
	  src/other/boost/date_time/int_adapter.hpp,
	  src/other/boost/date_time/iso_format.hpp,
	  src/other/boost/date_time/locale_config.hpp,
	  src/other/boost/date_time/microsec_time_clock.hpp,
	  src/other/boost/date_time/parse_format_base.hpp,
	  src/other/boost/date_time/period.hpp,
	  src/other/boost/date_time/period_formatter.hpp,
	  src/other/boost/date_time/period_parser.hpp,
	  src/other/boost/date_time/posix_time/conversion.hpp,
	  src/other/boost/date_time/posix_time/date_duration_operators.hpp,
	  src/other/boost/date_time/posix_time/posix_time_config.hpp,
	  src/other/boost/date_time/posix_time/posix_time_duration.hpp,
	  src/other/boost/date_time/posix_time/posix_time_system.hpp,
	  src/other/boost/date_time/posix_time/ptime.hpp,
	  src/other/boost/date_time/posix_time/time_period.hpp,
	  src/other/boost/date_time/special_defs.hpp,
	  src/other/boost/date_time/special_values_formatter.hpp,
	  src/other/boost/date_time/string_convert.hpp,
	  src/other/boost/date_time/string_parse_tree.hpp,
	  src/other/boost/date_time/strings_from_facet.hpp,
	  src/other/boost/date_time/time.hpp,
	  src/other/boost/date_time/time_clock.hpp,
	  src/other/boost/date_time/time_defs.hpp,
	  src/other/boost/date_time/time_duration.hpp,
	  src/other/boost/date_time/time_iterator.hpp,
	  src/other/boost/date_time/time_resolution_traits.hpp,
	  src/other/boost/date_time/time_system_counted.hpp,
	  src/other/boost/date_time/time_system_split.hpp,
	  src/other/boost/date_time/wrapping_int.hpp,
	  src/other/boost/date_time/year_month_day.hpp,
	  src/other/boost/detail/allocator_utilities.hpp,
	  src/other/boost/detail/atomic_count.hpp,
	  src/other/boost/detail/atomic_count_gcc.hpp,
	  src/other/boost/detail/atomic_count_gcc_x86.hpp,
	  src/other/boost/detail/atomic_count_pthreads.hpp,
	  src/other/boost/detail/atomic_count_sync.hpp,
	  src/other/boost/detail/atomic_count_win32.hpp,
	  src/other/boost/detail/bad_weak_ptr.hpp,
	  src/other/boost/detail/container_fwd.hpp,
	  src/other/boost/detail/endian.hpp,
	  src/other/boost/detail/extended_integer.hpp,
	  src/other/boost/detail/interlocked.hpp,
	  src/other/boost/detail/lcast_precision.hpp,
	  src/other/boost/detail/lwm_nop.hpp,
	  src/other/boost/detail/lwm_pthreads.hpp,
	  src/other/boost/detail/lwm_win32_cs.hpp,
	  src/other/boost/detail/quick_allocator.hpp,
	  src/other/boost/detail/shared_count.hpp,
	  src/other/boost/detail/shared_ptr_nmt.hpp,
	  src/other/boost/detail/sp_convertible.hpp,
	  src/other/boost/detail/sp_counted_base.hpp,
	  src/other/boost/detail/sp_counted_base_acc_ia64.hpp,
	  src/other/boost/detail/sp_counted_base_cw_ppc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_ia64.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_ppc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_sparc.hpp,
	  src/other/boost/detail/sp_counted_base_gcc_x86.hpp,
	  src/other/boost/detail/sp_counted_base_nt.hpp,
	  src/other/boost/detail/sp_counted_base_pt.hpp,
	  src/other/boost/detail/sp_counted_base_spin.hpp,
	  src/other/boost/detail/sp_counted_base_sync.hpp,
	  src/other/boost/detail/sp_counted_base_w32.hpp,
	  src/other/boost/detail/sp_counted_impl.hpp,
	  src/other/boost/detail/sp_typeinfo.hpp,
	  src/other/boost/detail/spinlock.hpp,
	  src/other/boost/detail/spinlock_gcc_arm.hpp,
	  src/other/boost/detail/spinlock_nt.hpp,
	  src/other/boost/detail/spinlock_pool.hpp,
	  src/other/boost/detail/spinlock_pt.hpp,
	  src/other/boost/detail/spinlock_sync.hpp,
	  src/other/boost/detail/spinlock_w32.hpp,
	  src/other/boost/detail/workaround.hpp,
	  src/other/boost/detail/yield_k.hpp,
	  src/other/boost/dynamic_property_map.hpp,
	  src/other/boost/enable_shared_from_this.hpp,
	  src/other/boost/exception/detail/attribute_noreturn.hpp,
	  src/other/boost/exception/detail/cloning_base.hpp,
	  src/other/boost/exception/detail/counted_base.hpp,
	  src/other/boost/exception/enable_current_exception.hpp,
	  src/other/boost/exception/enable_error_info.hpp,
	  src/other/boost/exception/exception.hpp,
	  src/other/boost/function/function_base.hpp,
	  src/other/boost/function/function_template.hpp,
	  src/other/boost/functional/hash/detail/float_functions.hpp,
	  src/other/boost/functional/hash/detail/hash_float.hpp,
	  src/other/boost/functional/hash/extensions.hpp,
	  src/other/boost/functional/hash/hash.hpp,
	  src/other/boost/fusion/adapted/mpl/mpl_iterator.hpp,
	  src/other/boost/fusion/algorithm/iteration/detail/fold.hpp,
	  src/other/boost/fusion/algorithm/iteration/fold.hpp,
	  src/other/boost/fusion/algorithm/query/detail/assoc_find.hpp,
	  src/other/boost/fusion/algorithm/transformation/erase_key.hpp,
	  src/other/boost/fusion/container/map/map_fwd.hpp,
	  src/other/boost/fusion/container/set/set_fwd.hpp,
	  src/other/boost/fusion/container/vector/detail/as_vector.hpp,
	  src/other/boost/fusion/container/vector/detail/at_impl.hpp,
	  src/other/boost/fusion/container/vector/detail/vector_n.hpp,
	  src/other/boost/fusion/container/vector/detail/vector_n_chooser.hpp,
	  src/other/boost/fusion/container/vector/vector.hpp,
	  src/other/boost/fusion/container/vector/vector10.hpp,
	  src/other/boost/fusion/container/vector/vector_iterator.hpp,
	  src/other/boost/fusion/iterator/advance.hpp,
	  src/other/boost/fusion/iterator/deref.hpp,
	  src/other/boost/fusion/iterator/distance.hpp,
	  src/other/boost/fusion/iterator/equal_to.hpp,
	  src/other/boost/fusion/iterator/iterator_facade.hpp,
	  src/other/boost/fusion/iterator/mpl/convert_iterator.hpp,
	  src/other/boost/fusion/iterator/mpl/fusion_iterator.hpp,
	  src/other/boost/fusion/iterator/next.hpp,
	  src/other/boost/fusion/iterator/prior.hpp,
	  src/other/boost/fusion/iterator/value_of.hpp,
	  src/other/boost/fusion/sequence/intrinsic/at.hpp,
	  src/other/boost/fusion/sequence/intrinsic/begin.hpp,
	  src/other/boost/fusion/sequence/intrinsic/end.hpp,
	  src/other/boost/fusion/sequence/intrinsic/has_key.hpp,
	  src/other/boost/fusion/sequence/intrinsic/size.hpp,
	  src/other/boost/fusion/sequence/intrinsic/value_at.hpp,
	  src/other/boost/fusion/support/category_of.hpp,
	  src/other/boost/fusion/support/detail/access.hpp,
	  src/other/boost/fusion/support/is_sequence.hpp,
	  src/other/boost/fusion/support/is_view.hpp,
	  src/other/boost/fusion/support/tag_of.hpp,
	  src/other/boost/fusion/view/detail/strictest_traversal.hpp,
	  src/other/boost/fusion/view/iterator_range/iterator_range.hpp,
	  src/other/boost/fusion/view/joint_view/detail/begin_impl.hpp,
	  src/other/boost/fusion/view/joint_view/detail/next_impl.hpp,
	  src/other/boost/fusion/view/joint_view/joint_view.hpp,
	  src/other/boost/fusion/view/joint_view/joint_view_iterator.hpp,
	  src/other/boost/fusion/view/single_view/single_view.hpp,
	  src/other/boost/fusion/view/single_view/single_view_iterator.hpp,
	  src/other/boost/fusion/view/transform_view/transform_view.hpp,
	  src/other/boost/fusion/view/transform_view/transform_view_iterator.hpp,
	  src/other/boost/get_pointer.hpp,
	  src/other/boost/graph/adjacency_list.hpp,
	  src/other/boost/graph/detail/adjacency_list.hpp,
	  src/other/boost/graph/detail/read_graphviz_spirit.hpp,
	  src/other/boost/graph/graph_concepts.hpp,
	  src/other/boost/graph/graph_traits.hpp,
	  src/other/boost/graph/graphml.hpp,
	  src/other/boost/graph/graphviz.hpp,
	  src/other/boost/graph/named_graph.hpp,
	  src/other/boost/graph/numeric_values.hpp,
	  src/other/boost/graph/properties.hpp,
	  src/other/boost/graph/subgraph.hpp,
	  src/other/boost/integer/static_log2.hpp,
	  src/other/boost/integer_traits.hpp,
	  src/other/boost/intrusive_ptr.hpp,
	  src/other/boost/io/ios_state.hpp,
	  src/other/boost/iterator/transform_iterator.hpp,
	  src/other/boost/lexical_cast.hpp, src/other/boost/limits.hpp,
	  src/other/boost/memory_order.hpp,
	  src/other/boost/mpl/O1_size.hpp,
	  src/other/boost/mpl/O1_size_fwd.hpp,
	  src/other/boost/mpl/advance.hpp,
	  src/other/boost/mpl/advance_fwd.hpp,
	  src/other/boost/mpl/always.hpp, src/other/boost/mpl/and.hpp,
	  src/other/boost/mpl/apply.hpp, src/other/boost/mpl/apply_fwd.hpp,
	  src/other/boost/mpl/apply_wrap.hpp, src/other/boost/mpl/arg.hpp,
	  src/other/boost/mpl/arg_fwd.hpp, src/other/boost/mpl/assert.hpp,
	  src/other/boost/mpl/at.hpp, src/other/boost/mpl/at_fwd.hpp,
	  src/other/boost/mpl/aux_/O1_size_impl.hpp,
	  src/other/boost/mpl/aux_/adl_barrier.hpp,
	  src/other/boost/mpl/aux_/advance_backward.hpp,
	  src/other/boost/mpl/aux_/advance_forward.hpp,
	  src/other/boost/mpl/aux_/arg_typedef.hpp,
	  src/other/boost/mpl/aux_/arithmetic_op.hpp,
	  src/other/boost/mpl/aux_/arity.hpp,
	  src/other/boost/mpl/aux_/arity_spec.hpp,
	  src/other/boost/mpl/aux_/at_impl.hpp,
	  src/other/boost/mpl/aux_/back_impl.hpp,
	  src/other/boost/mpl/aux_/begin_end_impl.hpp,
	  src/other/boost/mpl/aux_/clear_impl.hpp,
	  src/other/boost/mpl/aux_/common_name_wknd.hpp,
	  src/other/boost/mpl/aux_/comparison_op.hpp,
	  src/other/boost/mpl/aux_/config/adl.hpp,
	  src/other/boost/mpl/aux_/config/arrays.hpp,
	  src/other/boost/mpl/aux_/config/bcc.hpp,
	  src/other/boost/mpl/aux_/config/bind.hpp,
	  src/other/boost/mpl/aux_/config/compiler.hpp,
	  src/other/boost/mpl/aux_/config/ctps.hpp,
	  src/other/boost/mpl/aux_/config/dmc_ambiguous_ctps.hpp,
	  src/other/boost/mpl/aux_/config/dtp.hpp,
	  src/other/boost/mpl/aux_/config/eti.hpp,
	  src/other/boost/mpl/aux_/config/forwarding.hpp,
	  src/other/boost/mpl/aux_/config/gcc.hpp,
	  src/other/boost/mpl/aux_/config/has_apply.hpp,
	  src/other/boost/mpl/aux_/config/has_xxx.hpp,
	  src/other/boost/mpl/aux_/config/integral.hpp,
	  src/other/boost/mpl/aux_/config/intel.hpp,
	  src/other/boost/mpl/aux_/config/lambda.hpp,
	  src/other/boost/mpl/aux_/config/msvc.hpp,
	  src/other/boost/mpl/aux_/config/msvc_typename.hpp,
	  src/other/boost/mpl/aux_/config/nttp.hpp,
	  src/other/boost/mpl/aux_/config/operators.hpp,
	  src/other/boost/mpl/aux_/config/overload_resolution.hpp,
	  src/other/boost/mpl/aux_/config/pp_counter.hpp,
	  src/other/boost/mpl/aux_/config/preprocessor.hpp,
	  src/other/boost/mpl/aux_/config/static_constant.hpp,
	  src/other/boost/mpl/aux_/config/ttp.hpp,
	  src/other/boost/mpl/aux_/config/typeof.hpp,
	  src/other/boost/mpl/aux_/config/use_preprocessed.hpp,
	  src/other/boost/mpl/aux_/config/workaround.hpp,
	  src/other/boost/mpl/aux_/contains_impl.hpp,
	  src/other/boost/mpl/aux_/count_args.hpp,
	  src/other/boost/mpl/aux_/empty_impl.hpp,
	  src/other/boost/mpl/aux_/erase_impl.hpp,
	  src/other/boost/mpl/aux_/erase_key_impl.hpp,
	  src/other/boost/mpl/aux_/fold_impl.hpp,
	  src/other/boost/mpl/aux_/fold_impl_body.hpp,
	  src/other/boost/mpl/aux_/front_impl.hpp,
	  src/other/boost/mpl/aux_/full_lambda.hpp,
	  src/other/boost/mpl/aux_/has_apply.hpp,
	  src/other/boost/mpl/aux_/has_begin.hpp,
	  src/other/boost/mpl/aux_/has_key_impl.hpp,
	  src/other/boost/mpl/aux_/has_rebind.hpp,
	  src/other/boost/mpl/aux_/has_size.hpp,
	  src/other/boost/mpl/aux_/has_tag.hpp,
	  src/other/boost/mpl/aux_/has_type.hpp,
	  src/other/boost/mpl/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/aux_/insert_impl.hpp,
	  src/other/boost/mpl/aux_/insert_range_impl.hpp,
	  src/other/boost/mpl/aux_/inserter_algorithm.hpp,
	  src/other/boost/mpl/aux_/integral_wrapper.hpp,
	  src/other/boost/mpl/aux_/is_msvc_eti_arg.hpp,
	  src/other/boost/mpl/aux_/iter_apply.hpp,
	  src/other/boost/mpl/aux_/iter_fold_if_impl.hpp,
	  src/other/boost/mpl/aux_/iter_fold_impl.hpp,
	  src/other/boost/mpl/aux_/iter_push_front.hpp,
	  src/other/boost/mpl/aux_/joint_iter.hpp,
	  src/other/boost/mpl/aux_/lambda_arity_param.hpp,
	  src/other/boost/mpl/aux_/lambda_no_ctps.hpp,
	  src/other/boost/mpl/aux_/lambda_spec.hpp,
	  src/other/boost/mpl/aux_/lambda_support.hpp,
	  src/other/boost/mpl/aux_/largest_int.hpp,
	  src/other/boost/mpl/aux_/logical_op.hpp,
	  src/other/boost/mpl/aux_/msvc_dtw.hpp,
	  src/other/boost/mpl/aux_/msvc_eti_base.hpp,
	  src/other/boost/mpl/aux_/msvc_is_class.hpp,
	  src/other/boost/mpl/aux_/msvc_never_true.hpp,
	  src/other/boost/mpl/aux_/msvc_type.hpp,
	  src/other/boost/mpl/aux_/na.hpp,
	  src/other/boost/mpl/aux_/na_assert.hpp,
	  src/other/boost/mpl/aux_/na_fwd.hpp,
	  src/other/boost/mpl/aux_/na_spec.hpp,
	  src/other/boost/mpl/aux_/nested_type_wknd.hpp,
	  src/other/boost/mpl/aux_/nttp_decl.hpp,
	  src/other/boost/mpl/aux_/numeric_cast_utils.hpp,
	  src/other/boost/mpl/aux_/numeric_op.hpp,
	  src/other/boost/mpl/aux_/overload_names.hpp,
	  src/other/boost/mpl/aux_/pop_back_impl.hpp,
	  src/other/boost/mpl/aux_/pop_front_impl.hpp,
	  src/other/boost/mpl/aux_/preprocessed/gcc/template_arity.hpp,
	  src/other/boost/mpl/aux_/preprocessor/add.hpp,
	  src/other/boost/mpl/aux_/preprocessor/def_params_tail.hpp,
	  src/other/boost/mpl/aux_/preprocessor/default_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/enum.hpp,
	  src/other/boost/mpl/aux_/preprocessor/ext_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/filter_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/partial_spec_params.hpp,
	  src/other/boost/mpl/aux_/preprocessor/range.hpp,
	  src/other/boost/mpl/aux_/preprocessor/repeat.hpp,
	  src/other/boost/mpl/aux_/preprocessor/sub.hpp,
	  src/other/boost/mpl/aux_/preprocessor/tuple.hpp,
	  src/other/boost/mpl/aux_/ptr_to_ref.hpp,
	  src/other/boost/mpl/aux_/push_back_impl.hpp,
	  src/other/boost/mpl/aux_/push_front_impl.hpp,
	  src/other/boost/mpl/aux_/reverse_fold_impl.hpp,
	  src/other/boost/mpl/aux_/reverse_fold_impl_body.hpp,
	  src/other/boost/mpl/aux_/reverse_iter_fold_impl.hpp,
	  src/other/boost/mpl/aux_/sequence_wrapper.hpp,
	  src/other/boost/mpl/aux_/size_impl.hpp,
	  src/other/boost/mpl/aux_/static_cast.hpp,
	  src/other/boost/mpl/aux_/template_arity.hpp,
	  src/other/boost/mpl/aux_/template_arity_fwd.hpp,
	  src/other/boost/mpl/aux_/traits_lambda_spec.hpp,
	  src/other/boost/mpl/aux_/type_wrapper.hpp,
	  src/other/boost/mpl/aux_/unwrap.hpp,
	  src/other/boost/mpl/aux_/value_wknd.hpp,
	  src/other/boost/mpl/aux_/yes_no.hpp,
	  src/other/boost/mpl/back.hpp, src/other/boost/mpl/back_fwd.hpp,
	  src/other/boost/mpl/back_inserter.hpp,
	  src/other/boost/mpl/base.hpp, src/other/boost/mpl/begin.hpp,
	  src/other/boost/mpl/begin_end.hpp,
	  src/other/boost/mpl/begin_end_fwd.hpp,
	  src/other/boost/mpl/bind.hpp, src/other/boost/mpl/bind_fwd.hpp,
	  src/other/boost/mpl/bool.hpp, src/other/boost/mpl/bool_fwd.hpp,
	  src/other/boost/mpl/clear.hpp, src/other/boost/mpl/clear_fwd.hpp,
	  src/other/boost/mpl/contains.hpp,
	  src/other/boost/mpl/contains_fwd.hpp,
	  src/other/boost/mpl/copy.hpp, src/other/boost/mpl/deref.hpp,
	  src/other/boost/mpl/distance.hpp,
	  src/other/boost/mpl/distance_fwd.hpp,
	  src/other/boost/mpl/empty.hpp, src/other/boost/mpl/empty_fwd.hpp,
	  src/other/boost/mpl/end.hpp, src/other/boost/mpl/equal_to.hpp,
	  src/other/boost/mpl/erase.hpp, src/other/boost/mpl/erase_fwd.hpp,
	  src/other/boost/mpl/erase_key.hpp,
	  src/other/boost/mpl/erase_key_fwd.hpp,
	  src/other/boost/mpl/eval_if.hpp, src/other/boost/mpl/find.hpp,
	  src/other/boost/mpl/find_if.hpp, src/other/boost/mpl/fold.hpp,
	  src/other/boost/mpl/for_each.hpp, src/other/boost/mpl/front.hpp,
	  src/other/boost/mpl/front_fwd.hpp,
	  src/other/boost/mpl/front_inserter.hpp,
	  src/other/boost/mpl/greater.hpp, src/other/boost/mpl/has_key.hpp,
	  src/other/boost/mpl/has_key_fwd.hpp,
	  src/other/boost/mpl/has_xxx.hpp,
	  src/other/boost/mpl/identity.hpp, src/other/boost/mpl/if.hpp,
	  src/other/boost/mpl/insert.hpp,
	  src/other/boost/mpl/insert_fwd.hpp,
	  src/other/boost/mpl/insert_range.hpp,
	  src/other/boost/mpl/insert_range_fwd.hpp,
	  src/other/boost/mpl/inserter.hpp, src/other/boost/mpl/int.hpp,
	  src/other/boost/mpl/int_fwd.hpp,
	  src/other/boost/mpl/integral_c.hpp,
	  src/other/boost/mpl/integral_c_fwd.hpp,
	  src/other/boost/mpl/integral_c_tag.hpp,
	  src/other/boost/mpl/is_placeholder.hpp,
	  src/other/boost/mpl/is_sequence.hpp,
	  src/other/boost/mpl/iter_fold.hpp,
	  src/other/boost/mpl/iter_fold_if.hpp,
	  src/other/boost/mpl/iterator_category.hpp,
	  src/other/boost/mpl/iterator_range.hpp,
	  src/other/boost/mpl/iterator_tags.hpp,
	  src/other/boost/mpl/joint_view.hpp,
	  src/other/boost/mpl/key_type_fwd.hpp,
	  src/other/boost/mpl/lambda.hpp,
	  src/other/boost/mpl/lambda_fwd.hpp, src/other/boost/mpl/less.hpp,
	  src/other/boost/mpl/limits/arity.hpp,
	  src/other/boost/mpl/limits/list.hpp,
	  src/other/boost/mpl/limits/unrolling.hpp,
	  src/other/boost/mpl/limits/vector.hpp,
	  src/other/boost/mpl/list.hpp,
	  src/other/boost/mpl/list/aux_/O1_size.hpp,
	  src/other/boost/mpl/list/aux_/begin_end.hpp,
	  src/other/boost/mpl/list/aux_/clear.hpp,
	  src/other/boost/mpl/list/aux_/empty.hpp,
	  src/other/boost/mpl/list/aux_/front.hpp,
	  src/other/boost/mpl/list/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/list/aux_/item.hpp,
	  src/other/boost/mpl/list/aux_/iterator.hpp,
	  src/other/boost/mpl/list/aux_/numbered.hpp,
	  src/other/boost/mpl/list/aux_/numbered_c.hpp,
	  src/other/boost/mpl/list/aux_/pop_front.hpp,
	  src/other/boost/mpl/list/aux_/push_back.hpp,
	  src/other/boost/mpl/list/aux_/push_front.hpp,
	  src/other/boost/mpl/list/aux_/size.hpp,
	  src/other/boost/mpl/list/aux_/tag.hpp,
	  src/other/boost/mpl/list/list0.hpp,
	  src/other/boost/mpl/list/list0_c.hpp,
	  src/other/boost/mpl/list/list10.hpp,
	  src/other/boost/mpl/list/list10_c.hpp,
	  src/other/boost/mpl/list/list20.hpp,
	  src/other/boost/mpl/list/list20_c.hpp,
	  src/other/boost/mpl/list/list30.hpp,
	  src/other/boost/mpl/list/list30_c.hpp,
	  src/other/boost/mpl/list/list40.hpp,
	  src/other/boost/mpl/list/list40_c.hpp,
	  src/other/boost/mpl/list/list50.hpp,
	  src/other/boost/mpl/list/list50_c.hpp,
	  src/other/boost/mpl/logical.hpp, src/other/boost/mpl/long.hpp,
	  src/other/boost/mpl/long_fwd.hpp,
	  src/other/boost/mpl/max_element.hpp, src/other/boost/mpl/min.hpp,
	  src/other/boost/mpl/min_max.hpp, src/other/boost/mpl/minus.hpp,
	  src/other/boost/mpl/multiplies.hpp,
	  src/other/boost/mpl/negate.hpp, src/other/boost/mpl/next.hpp,
	  src/other/boost/mpl/next_prior.hpp, src/other/boost/mpl/not.hpp,
	  src/other/boost/mpl/numeric_cast.hpp, src/other/boost/mpl/or.hpp,
	  src/other/boost/mpl/pair.hpp, src/other/boost/mpl/pair_view.hpp,
	  src/other/boost/mpl/placeholders.hpp,
	  src/other/boost/mpl/plus.hpp, src/other/boost/mpl/pop_back.hpp,
	  src/other/boost/mpl/pop_back_fwd.hpp,
	  src/other/boost/mpl/pop_front.hpp,
	  src/other/boost/mpl/pop_front_fwd.hpp,
	  src/other/boost/mpl/prior.hpp, src/other/boost/mpl/protect.hpp,
	  src/other/boost/mpl/push_back.hpp,
	  src/other/boost/mpl/push_back_fwd.hpp,
	  src/other/boost/mpl/push_front.hpp,
	  src/other/boost/mpl/push_front_fwd.hpp,
	  src/other/boost/mpl/quote.hpp, src/other/boost/mpl/remove.hpp,
	  src/other/boost/mpl/remove_if.hpp,
	  src/other/boost/mpl/reverse_fold.hpp,
	  src/other/boost/mpl/reverse_iter_fold.hpp,
	  src/other/boost/mpl/same_as.hpp,
	  src/other/boost/mpl/sequence_tag.hpp,
	  src/other/boost/mpl/sequence_tag_fwd.hpp,
	  src/other/boost/mpl/set/aux_/at_impl.hpp,
	  src/other/boost/mpl/set/aux_/begin_end_impl.hpp,
	  src/other/boost/mpl/set/aux_/clear_impl.hpp,
	  src/other/boost/mpl/set/aux_/empty_impl.hpp,
	  src/other/boost/mpl/set/aux_/erase_impl.hpp,
	  src/other/boost/mpl/set/aux_/erase_key_impl.hpp,
	  src/other/boost/mpl/set/aux_/has_key_impl.hpp,
	  src/other/boost/mpl/set/aux_/insert_impl.hpp,
	  src/other/boost/mpl/set/aux_/item.hpp,
	  src/other/boost/mpl/set/aux_/iterator.hpp,
	  src/other/boost/mpl/set/aux_/key_type_impl.hpp,
	  src/other/boost/mpl/set/aux_/set0.hpp,
	  src/other/boost/mpl/set/aux_/size_impl.hpp,
	  src/other/boost/mpl/set/aux_/tag.hpp,
	  src/other/boost/mpl/set/aux_/value_type_impl.hpp,
	  src/other/boost/mpl/set/set0.hpp, src/other/boost/mpl/size.hpp,
	  src/other/boost/mpl/size_fwd.hpp, src/other/boost/mpl/size_t.hpp,
	  src/other/boost/mpl/size_t_fwd.hpp,
	  src/other/boost/mpl/sizeof.hpp, src/other/boost/mpl/tag.hpp,
	  src/other/boost/mpl/times.hpp, src/other/boost/mpl/transform.hpp,
	  src/other/boost/mpl/value_type_fwd.hpp,
	  src/other/boost/mpl/vector.hpp,
	  src/other/boost/mpl/vector/aux_/O1_size.hpp,
	  src/other/boost/mpl/vector/aux_/at.hpp,
	  src/other/boost/mpl/vector/aux_/back.hpp,
	  src/other/boost/mpl/vector/aux_/begin_end.hpp,
	  src/other/boost/mpl/vector/aux_/clear.hpp,
	  src/other/boost/mpl/vector/aux_/empty.hpp,
	  src/other/boost/mpl/vector/aux_/front.hpp,
	  src/other/boost/mpl/vector/aux_/include_preprocessed.hpp,
	  src/other/boost/mpl/vector/aux_/item.hpp,
	  src/other/boost/mpl/vector/aux_/iterator.hpp,
	  src/other/boost/mpl/vector/aux_/numbered.hpp,
	  src/other/boost/mpl/vector/aux_/numbered_c.hpp,
	  src/other/boost/mpl/vector/aux_/pop_back.hpp,
	  src/other/boost/mpl/vector/aux_/pop_front.hpp,
	  src/other/boost/mpl/vector/aux_/push_back.hpp,
	  src/other/boost/mpl/vector/aux_/push_front.hpp,
	  src/other/boost/mpl/vector/aux_/size.hpp,
	  src/other/boost/mpl/vector/aux_/tag.hpp,
	  src/other/boost/mpl/vector/aux_/vector0.hpp,
	  src/other/boost/mpl/vector/vector0.hpp,
	  src/other/boost/mpl/vector/vector0_c.hpp,
	  src/other/boost/mpl/vector/vector10.hpp,
	  src/other/boost/mpl/vector/vector10_c.hpp,
	  src/other/boost/mpl/vector/vector20.hpp,
	  src/other/boost/mpl/vector/vector20_c.hpp,
	  src/other/boost/mpl/vector/vector30.hpp,
	  src/other/boost/mpl/vector/vector30_c.hpp,
	  src/other/boost/mpl/vector/vector40.hpp,
	  src/other/boost/mpl/vector/vector40_c.hpp,
	  src/other/boost/mpl/vector/vector50.hpp,
	  src/other/boost/mpl/vector/vector50_c.hpp,
	  src/other/boost/mpl/void.hpp, src/other/boost/mpl/void_fwd.hpp,
	  src/other/boost/multi_index/detail/safe_mode.hpp,
	  src/other/boost/multi_index/hashed_index.hpp,
	  src/other/boost/multi_index_container.hpp,
	  src/other/boost/optional/optional.hpp,
	  src/other/boost/optional/optional_fwd.hpp,
	  src/other/boost/pending/container_traits.hpp,
	  src/other/boost/pending/ct_if.hpp,
	  src/other/boost/pending/property.hpp,
	  src/other/boost/property_map.hpp,
	  src/other/boost/range/as_literal.hpp,
	  src/other/boost/range/const_iterator.hpp,
	  src/other/boost/range/detail/implementation_help.hpp,
	  src/other/boost/range/iterator.hpp,
	  src/other/boost/range/iterator_range.hpp,
	  src/other/boost/range/mutable_iterator.hpp,
	  src/other/boost/range/size.hpp,
	  src/other/boost/range/size_type.hpp,
	  src/other/boost/serialization/access.hpp,
	  src/other/boost/serialization/base_object.hpp,
	  src/other/boost/serialization/force_include.hpp,
	  src/other/boost/serialization/level.hpp,
	  src/other/boost/serialization/nvp.hpp,
	  src/other/boost/serialization/serialization.hpp,
	  src/other/boost/serialization/throw_exception.hpp,
	  src/other/boost/serialization/tracking.hpp,
	  src/other/boost/serialization/wrapper.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_gcc.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_pthreads.hpp,
	  src/other/boost/smart_ptr/detail/atomic_count_sync.hpp,
	  src/other/boost/smart_ptr/detail/lwm_pthreads.hpp,
	  src/other/boost/smart_ptr/detail/quick_allocator.hpp,
	  src/other/boost/smart_ptr/detail/shared_count.hpp,
	  src/other/boost/smart_ptr/detail/sp_convertible.hpp,
	  src/other/boost/smart_ptr/detail/sp_counted_base.hpp,
	  src/other/boost/smart_ptr/detail/sp_counted_base_gcc_sparc.hpp,
	  src/other/boost/smart_ptr/detail/sp_has_sync.hpp,
	  src/other/boost/smart_ptr/detail/yield_k.hpp,
	  src/other/boost/smart_ptr/shared_ptr.hpp,
	  src/other/boost/smart_ptr/weak_ptr.hpp,
	  src/other/boost/spirit.hpp, src/other/boost/spirit/actor,
	  src/other/boost/spirit/actor/assign_actor.hpp,
	  src/other/boost/spirit/actor/assign_key_actor.hpp,
	  src/other/boost/spirit/actor/clear_actor.hpp,
	  src/other/boost/spirit/actor/decrement_actor.hpp,
	  src/other/boost/spirit/actor/erase_actor.hpp,
	  src/other/boost/spirit/actor/increment_actor.hpp,
	  src/other/boost/spirit/actor/insert_at_actor.hpp,
	  src/other/boost/spirit/actor/insert_key_actor.hpp,
	  src/other/boost/spirit/actor/push_back_actor.hpp,
	  src/other/boost/spirit/actor/push_front_actor.hpp,
	  src/other/boost/spirit/actor/ref_actor.hpp,
	  src/other/boost/spirit/actor/ref_const_ref_actor.hpp,
	  src/other/boost/spirit/actor/ref_const_ref_const_ref_a.hpp,
	  src/other/boost/spirit/actor/ref_const_ref_value_actor.hpp,
	  src/other/boost/spirit/actor/ref_value_actor.hpp,
	  src/other/boost/spirit/actor/swap_actor.hpp,
	  src/other/boost/spirit/actor/typeof.hpp,
	  src/other/boost/spirit/attribute/closure_context.hpp,
	  src/other/boost/spirit/attribute/closure_fwd.hpp,
	  src/other/boost/spirit/attribute/parametric.hpp,
	  src/other/boost/spirit/attribute/typeof.hpp,
	  src/other/boost/spirit/core/assert.hpp,
	  src/other/boost/spirit/core/composite,
	  src/other/boost/spirit/core/composite/actions.hpp,
	  src/other/boost/spirit/core/composite/alternative.hpp,
	  src/other/boost/spirit/core/composite/composite.hpp,
	  src/other/boost/spirit/core/composite/difference.hpp,
	  src/other/boost/spirit/core/composite/directives.hpp,
	  src/other/boost/spirit/core/composite/epsilon.hpp,
	  src/other/boost/spirit/core/composite/exclusive_or.hpp,
	  src/other/boost/spirit/core/composite/intersection.hpp,
	  src/other/boost/spirit/core/composite/kleene_star.hpp,
	  src/other/boost/spirit/core/composite/list.hpp,
	  src/other/boost/spirit/core/composite/no_actions.hpp,
	  src/other/boost/spirit/core/composite/operators.hpp,
	  src/other/boost/spirit/core/composite/optional.hpp,
	  src/other/boost/spirit/core/composite/positive.hpp,
	  src/other/boost/spirit/core/composite/sequence.hpp,
	  src/other/boost/spirit/core/composite/sequential_and.hpp,
	  src/other/boost/spirit/core/composite/sequential_or.hpp,
	  src/other/boost/spirit/core/config.hpp,
	  src/other/boost/spirit/core/match.hpp,
	  src/other/boost/spirit/core/nil.hpp,
	  src/other/boost/spirit/core/non_terminal,
	  src/other/boost/spirit/core/non_terminal/grammar.hpp,
	  src/other/boost/spirit/core/non_terminal/parser_context.hpp,
	  src/other/boost/spirit/core/non_terminal/parser_id.hpp,
	  src/other/boost/spirit/core/non_terminal/rule.hpp,
	  src/other/boost/spirit/core/non_terminal/subrule.hpp,
	  src/other/boost/spirit/core/non_terminal/subrule_fwd.hpp,
	  src/other/boost/spirit/core/parser.hpp,
	  src/other/boost/spirit/core/primitives,
	  src/other/boost/spirit/core/primitives/numerics.hpp,
	  src/other/boost/spirit/core/primitives/numerics_fwd.hpp,
	  src/other/boost/spirit/core/primitives/primitives.hpp,
	  src/other/boost/spirit/core/safe_bool.hpp,
	  src/other/boost/spirit/core/scanner,
	  src/other/boost/spirit/core/scanner/scanner.hpp,
	  src/other/boost/spirit/core/scanner/scanner_fwd.hpp,
	  src/other/boost/spirit/core/scanner/skipper.hpp,
	  src/other/boost/spirit/core/scanner/skipper_fwd.hpp,
	  src/other/boost/spirit/core/typeof.hpp,
	  src/other/boost/spirit/debug, src/other/boost/spirit/debug.hpp,
	  src/other/boost/spirit/debug/debug_node.hpp,
	  src/other/boost/spirit/debug/minimal.hpp,
	  src/other/boost/spirit/debug/parser_names.hpp,
	  src/other/boost/spirit/debug/typeof.hpp,
	  src/other/boost/spirit/dynamic/for.hpp,
	  src/other/boost/spirit/dynamic/lazy.hpp,
	  src/other/boost/spirit/dynamic/rule_alias.hpp,
	  src/other/boost/spirit/dynamic/select.hpp,
	  src/other/boost/spirit/dynamic/stored_rule.hpp,
	  src/other/boost/spirit/dynamic/stored_rule_fwd.hpp,
	  src/other/boost/spirit/dynamic/switch.hpp,
	  src/other/boost/spirit/dynamic/typeof.hpp,
	  src/other/boost/spirit/dynamic/while.hpp,
	  src/other/boost/spirit/error_handling,
	  src/other/boost/spirit/error_handling.hpp,
	  src/other/boost/spirit/error_handling/exceptions.hpp,
	  src/other/boost/spirit/error_handling/exceptions_fwd.hpp,
	  src/other/boost/spirit/error_handling/typeof.hpp,
	  src/other/boost/spirit/home/classic/actor/ref_value_actor.hpp,
	  src/other/boost/spirit/home/classic/actor/typeof.hpp,
	  src/other/boost/spirit/home/classic/attribute/closure.hpp,
	  src/other/boost/spirit/home/classic/attribute/closure_fwd.hpp,
	  src/other/boost/spirit/home/classic/attribute/typeof.hpp,
	  src/other/boost/spirit/home/classic/core/composite/actions.hpp,
	  src/other/boost/spirit/home/classic/core/composite/alternative.hpp,
	  src/other/boost/spirit/home/classic/core/composite/composite.hpp,
	  src/other/boost/spirit/home/classic/core/composite/difference.hpp,
	  src/other/boost/spirit/home/classic/core/composite/kleene_star.hpp,
	  src/other/boost/spirit/home/classic/core/composite/positive.hpp,
	  src/other/boost/spirit/home/classic/core/composite/sequence.hpp,
	  src/other/boost/spirit/home/classic/core/impl/match.ipp,
	  src/other/boost/spirit/home/classic/core/non_terminal/impl/rule.ipp,
	  src/other/boost/spirit/home/classic/core/non_terminal/parser_id.hpp,
	  src/other/boost/spirit/home/classic/core/non_terminal/rule.hpp,
	  src/other/boost/spirit/home/classic/core/non_terminal/subrule.hpp,
	  src/other/boost/spirit/home/classic/core/primitives/impl/numerics.ipp,
	  src/other/boost/spirit/home/classic/core/typeof.hpp,
	  src/other/boost/spirit/home/classic/debug/typeof.hpp,
	  src/other/boost/spirit/home/classic/dynamic.hpp,
	  src/other/boost/spirit/home/classic/dynamic/impl/select.ipp,
	  src/other/boost/spirit/home/classic/dynamic/impl/switch.ipp,
	  src/other/boost/spirit/home/classic/dynamic/lazy.hpp,
	  src/other/boost/spirit/home/classic/dynamic/select.hpp,
	  src/other/boost/spirit/home/classic/dynamic/switch.hpp,
	  src/other/boost/spirit/home/classic/dynamic/typeof.hpp,
	  src/other/boost/spirit/home/classic/error_handling/exceptions.hpp,
	  src/other/boost/spirit/home/classic/error_handling/typeof.hpp,
	  src/other/boost/spirit/home/classic/iterator/typeof.hpp,
	  src/other/boost/spirit/home/classic/meta/refactoring.hpp,
	  src/other/boost/spirit/home/classic/phoenix/actor.hpp,
	  src/other/boost/spirit/home/classic/phoenix/closures.hpp,
	  src/other/boost/spirit/home/classic/phoenix/composite.hpp,
	  src/other/boost/spirit/home/classic/phoenix/primitives.hpp,
	  src/other/boost/spirit/home/classic/phoenix/tuples.hpp,
	  src/other/boost/spirit/home/classic/symbols/typeof.hpp,
	  src/other/boost/spirit/home/classic/tree,
	  src/other/boost/spirit/home/classic/tree/ast.hpp,
	  src/other/boost/spirit/home/classic/tree/ast_fwd.hpp,
	  src/other/boost/spirit/home/classic/tree/common.hpp,
	  src/other/boost/spirit/home/classic/tree/common_fwd.hpp,
	  src/other/boost/spirit/home/classic/tree/impl,
	  src/other/boost/spirit/home/classic/tree/impl/parse_tree_utils.ipp,
	  src/other/boost/spirit/home/classic/tree/impl/tree_to_xml.ipp,
	  src/other/boost/spirit/home/classic/tree/parse_tree.hpp,
	  src/other/boost/spirit/home/classic/tree/parse_tree_fwd.hpp,
	  src/other/boost/spirit/home/classic/tree/parse_tree_utils.hpp,
	  src/other/boost/spirit/home/classic/tree/parsetree.dtd,
	  src/other/boost/spirit/home/classic/tree/tree_to_xml.hpp,
	  src/other/boost/spirit/home/classic/tree/typeof.hpp,
	  src/other/boost/spirit/home/classic/utility/confix.hpp,
	  src/other/boost/spirit/home/classic/utility/grammar_def.hpp,
	  src/other/boost/spirit/home/classic/utility/grammar_def_fwd.hpp,
	  src/other/boost/spirit/home/classic/utility/impl/regex.ipp,
	  src/other/boost/spirit/home/classic/utility/regex.hpp,
	  src/other/boost/spirit/home/classic/utility/rule_parser.hpp,
	  src/other/boost/spirit/home/classic/utility/typeof.hpp,
	  src/other/boost/spirit/home/karma,
	  src/other/boost/spirit/home/karma.hpp,
	  src/other/boost/spirit/home/karma/action,
	  src/other/boost/spirit/home/karma/action.hpp,
	  src/other/boost/spirit/home/karma/action/action.hpp,
	  src/other/boost/spirit/home/karma/auto,
	  src/other/boost/spirit/home/karma/auto.hpp,
	  src/other/boost/spirit/home/karma/auto/auto.hpp,
	  src/other/boost/spirit/home/karma/auto/create_generator.hpp,
	  src/other/boost/spirit/home/karma/auto/meta_create.hpp,
	  src/other/boost/spirit/home/karma/auxiliary,
	  src/other/boost/spirit/home/karma/auxiliary.hpp,
	  src/other/boost/spirit/home/karma/auxiliary/attr_cast.hpp,
	  src/other/boost/spirit/home/karma/auxiliary/eol.hpp,
	  src/other/boost/spirit/home/karma/auxiliary/eps.hpp,
	  src/other/boost/spirit/home/karma/auxiliary/lazy.hpp,
	  src/other/boost/spirit/home/karma/binary,
	  src/other/boost/spirit/home/karma/binary.hpp,
	  src/other/boost/spirit/home/karma/binary/binary.hpp,
	  src/other/boost/spirit/home/karma/binary/padding.hpp,
	  src/other/boost/spirit/home/karma/char,
	  src/other/boost/spirit/home/karma/char.hpp,
	  src/other/boost/spirit/home/karma/char/char.hpp,
	  src/other/boost/spirit/home/karma/char/char_class.hpp,
	  src/other/boost/spirit/home/karma/char/char_generator.hpp,
	  src/other/boost/spirit/home/karma/delimit_flag.hpp,
	  src/other/boost/spirit/home/karma/delimit_out.hpp,
	  src/other/boost/spirit/home/karma/detail,
	  src/other/boost/spirit/home/karma/detail/alternative_function.hpp,
	  src/other/boost/spirit/home/karma/detail/attributes.hpp,
	  src/other/boost/spirit/home/karma/detail/default_width.hpp,
	  src/other/boost/spirit/home/karma/detail/extract_from.hpp,
	  src/other/boost/spirit/home/karma/detail/fail_function.hpp,
	  src/other/boost/spirit/home/karma/detail/generate.hpp,
	  src/other/boost/spirit/home/karma/detail/generate_auto.hpp,
	  src/other/boost/spirit/home/karma/detail/generate_to.hpp,
	  src/other/boost/spirit/home/karma/detail/get_casetag.hpp,
	  src/other/boost/spirit/home/karma/detail/get_stricttag.hpp,
	  src/other/boost/spirit/home/karma/detail/output_iterator.hpp,
	  src/other/boost/spirit/home/karma/detail/pass_container.hpp,
	  src/other/boost/spirit/home/karma/detail/string_compare.hpp,
	  src/other/boost/spirit/home/karma/detail/string_generate.hpp,
	  src/other/boost/spirit/home/karma/detail/unused_delimiter.hpp,
	  src/other/boost/spirit/home/karma/directive,
	  src/other/boost/spirit/home/karma/directive.hpp,
	  src/other/boost/spirit/home/karma/directive/buffer.hpp,
	  src/other/boost/spirit/home/karma/directive/center_alignment.hpp,
	  src/other/boost/spirit/home/karma/directive/columns.hpp,
	  src/other/boost/spirit/home/karma/directive/delimit.hpp,
	  src/other/boost/spirit/home/karma/directive/duplicate.hpp,
	  src/other/boost/spirit/home/karma/directive/encoding.hpp,
	  src/other/boost/spirit/home/karma/directive/left_alignment.hpp,
	  src/other/boost/spirit/home/karma/directive/maxwidth.hpp,
	  src/other/boost/spirit/home/karma/directive/no_delimit.hpp,
	  src/other/boost/spirit/home/karma/directive/omit.hpp,
	  src/other/boost/spirit/home/karma/directive/repeat.hpp,
	  src/other/boost/spirit/home/karma/directive/right_alignment.hpp,
	  src/other/boost/spirit/home/karma/directive/strict_relaxed.hpp,
	  src/other/boost/spirit/home/karma/directive/upper_lower_case.hpp,
	  src/other/boost/spirit/home/karma/directive/verbatim.hpp,
	  src/other/boost/spirit/home/karma/domain.hpp,
	  src/other/boost/spirit/home/karma/format.hpp,
	  src/other/boost/spirit/home/karma/format_auto.hpp,
	  src/other/boost/spirit/home/karma/generate.hpp,
	  src/other/boost/spirit/home/karma/generate_attr.hpp,
	  src/other/boost/spirit/home/karma/generator.hpp,
	  src/other/boost/spirit/home/karma/meta_compiler.hpp,
	  src/other/boost/spirit/home/karma/nonterminal,
	  src/other/boost/spirit/home/karma/nonterminal.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/debug_handler.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/debug_handler_state.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/detail,
	  src/other/boost/spirit/home/karma/nonterminal/detail/fcall.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/detail/generator_binder.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/detail/parameterized.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/grammar.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/rule.hpp,
	  src/other/boost/spirit/home/karma/nonterminal/simple_trace.hpp,
	  src/other/boost/spirit/home/karma/numeric,
	  src/other/boost/spirit/home/karma/numeric.hpp,
	  src/other/boost/spirit/home/karma/numeric/bool.hpp,
	  src/other/boost/spirit/home/karma/numeric/bool_policies.hpp,
	  src/other/boost/spirit/home/karma/numeric/detail,
	  src/other/boost/spirit/home/karma/numeric/detail/bool_utils.hpp,
	  src/other/boost/spirit/home/karma/numeric/detail/numeric_utils.hpp,
	  src/other/boost/spirit/home/karma/numeric/detail/real_utils.hpp,
	  src/other/boost/spirit/home/karma/numeric/int.hpp,
	  src/other/boost/spirit/home/karma/numeric/real.hpp,
	  src/other/boost/spirit/home/karma/numeric/real_policies.hpp,
	  src/other/boost/spirit/home/karma/numeric/uint.hpp,
	  src/other/boost/spirit/home/karma/operator,
	  src/other/boost/spirit/home/karma/operator.hpp,
	  src/other/boost/spirit/home/karma/operator/alternative.hpp,
	  src/other/boost/spirit/home/karma/operator/and_predicate.hpp,
	  src/other/boost/spirit/home/karma/operator/kleene.hpp,
	  src/other/boost/spirit/home/karma/operator/list.hpp,
	  src/other/boost/spirit/home/karma/operator/not_predicate.hpp,
	  src/other/boost/spirit/home/karma/operator/optional.hpp,
	  src/other/boost/spirit/home/karma/operator/plus.hpp,
	  src/other/boost/spirit/home/karma/operator/sequence.hpp,
	  src/other/boost/spirit/home/karma/phoenix_attributes.hpp,
	  src/other/boost/spirit/home/karma/reference.hpp,
	  src/other/boost/spirit/home/karma/stream,
	  src/other/boost/spirit/home/karma/stream.hpp,
	  src/other/boost/spirit/home/karma/stream/detail,
	  src/other/boost/spirit/home/karma/stream/detail/format_manip.hpp,
	  src/other/boost/spirit/home/karma/stream/detail/format_manip_auto.hpp,
	  src/other/boost/spirit/home/karma/stream/detail/iterator_sink.hpp,
	  src/other/boost/spirit/home/karma/stream/format_manip.hpp,
	  src/other/boost/spirit/home/karma/stream/format_manip_attr.hpp,
	  src/other/boost/spirit/home/karma/stream/ostream_iterator.hpp,
	  src/other/boost/spirit/home/karma/stream/stream.hpp,
	  src/other/boost/spirit/home/karma/string,
	  src/other/boost/spirit/home/karma/string.hpp,
	  src/other/boost/spirit/home/karma/string/lit.hpp,
	  src/other/boost/spirit/home/karma/string/symbols.hpp,
	  src/other/boost/spirit/home/karma/what.hpp,
	  src/other/boost/spirit/home/lex,
	  src/other/boost/spirit/home/lex.hpp,
	  src/other/boost/spirit/home/lex/argument.hpp,
	  src/other/boost/spirit/home/lex/detail,
	  src/other/boost/spirit/home/lex/detail/sequence_function.hpp,
	  src/other/boost/spirit/home/lex/domain.hpp,
	  src/other/boost/spirit/home/lex/lexer,
	  src/other/boost/spirit/home/lex/lexer.hpp,
	  src/other/boost/spirit/home/lex/lexer/action.hpp,
	  src/other/boost/spirit/home/lex/lexer/char_token_def.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexer.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl,
	  src/other/boost/spirit/home/lex/lexer/lexertl/functor.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/functor_data.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/generate_static.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/iterator.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/iterator_tokenizer.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/lexer.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/semantic_action_data.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/static_functor_data.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/static_lexer.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/static_version.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/token.hpp,
	  src/other/boost/spirit/home/lex/lexer/lexertl/wrap_action.hpp,
	  src/other/boost/spirit/home/lex/lexer/pass_flags.hpp,
	  src/other/boost/spirit/home/lex/lexer/sequence.hpp,
	  src/other/boost/spirit/home/lex/lexer/string_token_def.hpp,
	  src/other/boost/spirit/home/lex/lexer/support_functions.hpp,
	  src/other/boost/spirit/home/lex/lexer/terminals.hpp,
	  src/other/boost/spirit/home/lex/lexer/token_def.hpp,
	  src/other/boost/spirit/home/lex/lexer_lexertl.hpp,
	  src/other/boost/spirit/home/lex/lexer_static_lexertl.hpp,
	  src/other/boost/spirit/home/lex/lexer_type.hpp,
	  src/other/boost/spirit/home/lex/meta_compiler.hpp,
	  src/other/boost/spirit/home/lex/primitives.hpp,
	  src/other/boost/spirit/home/lex/qi,
	  src/other/boost/spirit/home/lex/qi.hpp,
	  src/other/boost/spirit/home/lex/qi/in_state.hpp,
	  src/other/boost/spirit/home/lex/qi/plain_token.hpp,
	  src/other/boost/spirit/home/lex/qi/state_switcher.hpp,
	  src/other/boost/spirit/home/lex/reference.hpp,
	  src/other/boost/spirit/home/lex/tokenize_and_parse.hpp,
	  src/other/boost/spirit/home/lex/tokenize_and_parse_attr.hpp,
	  src/other/boost/spirit/home/phoenix/core/actor.hpp,
	  src/other/boost/spirit/home/phoenix/core/argument.hpp,
	  src/other/boost/spirit/home/phoenix/core/basic_environment.hpp,
	  src/other/boost/spirit/home/phoenix/core/composite.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/actor.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/composite_eval.hpp,
	  src/other/boost/spirit/home/phoenix/core/detail/composite_info.hpp,
	  src/other/boost/spirit/home/phoenix/core/limits.hpp,
	  src/other/boost/spirit/home/phoenix/core/reference.hpp,
	  src/other/boost/spirit/home/phoenix/detail/type_deduction.hpp,
	  src/other/boost/spirit/home/phoenix/object/new.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/io.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/mem_fun_ptr_eval.hpp,
	  src/other/boost/spirit/home/phoenix/operator/detail/mem_fun_ptr_gen.hpp,
	  src/other/boost/spirit/home/phoenix/operator/member.hpp,
	  src/other/boost/spirit/home/phoenix/scope/detail/local_variable.hpp,
	  src/other/boost/spirit/home/phoenix/scope/dynamic.hpp,
	  src/other/boost/spirit/home/phoenix/scope/lambda.hpp,
	  src/other/boost/spirit/home/phoenix/scope/let.hpp,
	  src/other/boost/spirit/home/phoenix/scope/local_variable.hpp,
	  src/other/boost/spirit/home/phoenix/scope/scoped_environment.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/catch_all_eval.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/catch_eval.hpp,
	  src/other/boost/spirit/home/phoenix/statement/detail/switch.hpp,
	  src/other/boost/spirit/home/phoenix/statement/if.hpp,
	  src/other/boost/spirit/home/phoenix/statement/switch.hpp,
	  src/other/boost/spirit/home/phoenix/statement/try_catch.hpp,
	  src/other/boost/spirit/home/phoenix/stl.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_hash_map.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_hash_set.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_list.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_map.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/is_std_set.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_hash_map_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_hash_set_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_list_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_map_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/algorithm/detail/std_set_fwd.hpp,
	  src/other/boost/spirit/home/phoenix/stl/container/container.hpp,
	  src/other/boost/spirit/home/qi,
	  src/other/boost/spirit/home/qi.hpp,
	  src/other/boost/spirit/home/qi/action,
	  src/other/boost/spirit/home/qi/action.hpp,
	  src/other/boost/spirit/home/qi/action/action.hpp,
	  src/other/boost/spirit/home/qi/auto,
	  src/other/boost/spirit/home/qi/auto.hpp,
	  src/other/boost/spirit/home/qi/auto/auto.hpp,
	  src/other/boost/spirit/home/qi/auto/create_parser.hpp,
	  src/other/boost/spirit/home/qi/auto/meta_create.hpp,
	  src/other/boost/spirit/home/qi/auxiliary,
	  src/other/boost/spirit/home/qi/auxiliary.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/attr.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/attr_cast.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/eoi.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/eol.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/eps.hpp,
	  src/other/boost/spirit/home/qi/auxiliary/lazy.hpp,
	  src/other/boost/spirit/home/qi/binary,
	  src/other/boost/spirit/home/qi/binary.hpp,
	  src/other/boost/spirit/home/qi/binary/binary.hpp,
	  src/other/boost/spirit/home/qi/char,
	  src/other/boost/spirit/home/qi/char.hpp,
	  src/other/boost/spirit/home/qi/char/char.hpp,
	  src/other/boost/spirit/home/qi/char/char_class.hpp,
	  src/other/boost/spirit/home/qi/char/char_parser.hpp,
	  src/other/boost/spirit/home/qi/detail,
	  src/other/boost/spirit/home/qi/detail/alternative_function.hpp,
	  src/other/boost/spirit/home/qi/detail/assign_to.hpp,
	  src/other/boost/spirit/home/qi/detail/attributes.hpp,
	  src/other/boost/spirit/home/qi/detail/construct.hpp,
	  src/other/boost/spirit/home/qi/detail/expect_function.hpp,
	  src/other/boost/spirit/home/qi/detail/fail_function.hpp,
	  src/other/boost/spirit/home/qi/detail/parse.hpp,
	  src/other/boost/spirit/home/qi/detail/parse_auto.hpp,
	  src/other/boost/spirit/home/qi/detail/pass_container.hpp,
	  src/other/boost/spirit/home/qi/detail/pass_function.hpp,
	  src/other/boost/spirit/home/qi/detail/permute_function.hpp,
	  src/other/boost/spirit/home/qi/detail/string_parse.hpp,
	  src/other/boost/spirit/home/qi/detail/unused_skipper.hpp,
	  src/other/boost/spirit/home/qi/directive,
	  src/other/boost/spirit/home/qi/directive.hpp,
	  src/other/boost/spirit/home/qi/directive/encoding.hpp,
	  src/other/boost/spirit/home/qi/directive/hold.hpp,
	  src/other/boost/spirit/home/qi/directive/lexeme.hpp,
	  src/other/boost/spirit/home/qi/directive/matches.hpp,
	  src/other/boost/spirit/home/qi/directive/no_case.hpp,
	  src/other/boost/spirit/home/qi/directive/no_skip.hpp,
	  src/other/boost/spirit/home/qi/directive/omit.hpp,
	  src/other/boost/spirit/home/qi/directive/raw.hpp,
	  src/other/boost/spirit/home/qi/directive/repeat.hpp,
	  src/other/boost/spirit/home/qi/directive/skip.hpp,
	  src/other/boost/spirit/home/qi/domain.hpp,
	  src/other/boost/spirit/home/qi/match.hpp,
	  src/other/boost/spirit/home/qi/match_auto.hpp,
	  src/other/boost/spirit/home/qi/meta_compiler.hpp,
	  src/other/boost/spirit/home/qi/nonterminal,
	  src/other/boost/spirit/home/qi/nonterminal.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/debug_handler.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/debug_handler_state.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/detail,
	  src/other/boost/spirit/home/qi/nonterminal/detail/fcall.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/detail/parameterized.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/detail/parser_binder.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/error_handler.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/grammar.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/rule.hpp,
	  src/other/boost/spirit/home/qi/nonterminal/simple_trace.hpp,
	  src/other/boost/spirit/home/qi/numeric,
	  src/other/boost/spirit/home/qi/numeric.hpp,
	  src/other/boost/spirit/home/qi/numeric/bool.hpp,
	  src/other/boost/spirit/home/qi/numeric/bool_policies.hpp,
	  src/other/boost/spirit/home/qi/numeric/detail,
	  src/other/boost/spirit/home/qi/numeric/detail/numeric_utils.hpp,
	  src/other/boost/spirit/home/qi/numeric/detail/real_impl.hpp,
	  src/other/boost/spirit/home/qi/numeric/int.hpp,
	  src/other/boost/spirit/home/qi/numeric/numeric_utils.hpp,
	  src/other/boost/spirit/home/qi/numeric/real.hpp,
	  src/other/boost/spirit/home/qi/numeric/real_policies.hpp,
	  src/other/boost/spirit/home/qi/numeric/uint.hpp,
	  src/other/boost/spirit/home/qi/operator,
	  src/other/boost/spirit/home/qi/operator.hpp,
	  src/other/boost/spirit/home/qi/operator/alternative.hpp,
	  src/other/boost/spirit/home/qi/operator/and_predicate.hpp,
	  src/other/boost/spirit/home/qi/operator/difference.hpp,
	  src/other/boost/spirit/home/qi/operator/expect.hpp,
	  src/other/boost/spirit/home/qi/operator/kleene.hpp,
	  src/other/boost/spirit/home/qi/operator/list.hpp,
	  src/other/boost/spirit/home/qi/operator/not_predicate.hpp,
	  src/other/boost/spirit/home/qi/operator/optional.hpp,
	  src/other/boost/spirit/home/qi/operator/permutation.hpp,
	  src/other/boost/spirit/home/qi/operator/plus.hpp,
	  src/other/boost/spirit/home/qi/operator/sequence.hpp,
	  src/other/boost/spirit/home/qi/operator/sequence_base.hpp,
	  src/other/boost/spirit/home/qi/operator/sequential_or.hpp,
	  src/other/boost/spirit/home/qi/parse.hpp,
	  src/other/boost/spirit/home/qi/parse_attr.hpp,
	  src/other/boost/spirit/home/qi/parser.hpp,
	  src/other/boost/spirit/home/qi/reference.hpp,
	  src/other/boost/spirit/home/qi/skip_flag.hpp,
	  src/other/boost/spirit/home/qi/skip_over.hpp,
	  src/other/boost/spirit/home/qi/stream,
	  src/other/boost/spirit/home/qi/stream.hpp,
	  src/other/boost/spirit/home/qi/stream/detail,
	  src/other/boost/spirit/home/qi/stream/detail/iterator_source.hpp,
	  src/other/boost/spirit/home/qi/stream/detail/match_manip.hpp,
	  src/other/boost/spirit/home/qi/stream/detail/match_manip_auto.hpp,
	  src/other/boost/spirit/home/qi/stream/match_manip.hpp,
	  src/other/boost/spirit/home/qi/stream/match_manip_attr.hpp,
	  src/other/boost/spirit/home/qi/stream/stream.hpp,
	  src/other/boost/spirit/home/qi/string,
	  src/other/boost/spirit/home/qi/string.hpp,
	  src/other/boost/spirit/home/qi/string/detail,
	  src/other/boost/spirit/home/qi/string/detail/tst.hpp,
	  src/other/boost/spirit/home/qi/string/lit.hpp,
	  src/other/boost/spirit/home/qi/string/symbols.hpp,
	  src/other/boost/spirit/home/qi/string/tst.hpp,
	  src/other/boost/spirit/home/qi/string/tst_map.hpp,
	  src/other/boost/spirit/home/qi/what.hpp,
	  src/other/boost/spirit/home/support,
	  src/other/boost/spirit/home/support.hpp,
	  src/other/boost/spirit/home/support/action_dispatch.hpp,
	  src/other/boost/spirit/home/support/adapt_class_attributes.hpp,
	  src/other/boost/spirit/home/support/algorithm,
	  src/other/boost/spirit/home/support/algorithm/any.hpp,
	  src/other/boost/spirit/home/support/algorithm/any_if.hpp,
	  src/other/boost/spirit/home/support/algorithm/any_if_ns.hpp,
	  src/other/boost/spirit/home/support/algorithm/any_ns.hpp,
	  src/other/boost/spirit/home/support/argument.hpp,
	  src/other/boost/spirit/home/support/assert_msg.hpp,
	  src/other/boost/spirit/home/support/attributes.hpp,
	  src/other/boost/spirit/home/support/attributes_fwd.hpp,
	  src/other/boost/spirit/home/support/auto,
	  src/other/boost/spirit/home/support/auto/meta_create.hpp,
	  src/other/boost/spirit/home/support/auxiliary,
	  src/other/boost/spirit/home/support/auxiliary/attr_cast.hpp,
	  src/other/boost/spirit/home/support/char_class.hpp,
	  src/other/boost/spirit/home/support/char_encoding,
	  src/other/boost/spirit/home/support/char_encoding/ascii.hpp,
	  src/other/boost/spirit/home/support/char_encoding/iso8859_1.hpp,
	  src/other/boost/spirit/home/support/char_encoding/standard.hpp,
	  src/other/boost/spirit/home/support/char_encoding/standard_wide.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode,
	  src/other/boost/spirit/home/support/char_encoding/unicode.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/DerivedCoreProperties.txt,
	  src/other/boost/spirit/home/support/char_encoding/unicode/PropList.txt,
	  src/other/boost/spirit/home/support/char_encoding/unicode/Scripts.txt,
	  src/other/boost/spirit/home/support/char_encoding/unicode/UnicodeData.txt,
	  src/other/boost/spirit/home/support/char_encoding/unicode/category_table.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/create_tables.cpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/lowercase_table.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/query.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/script_table.hpp,
	  src/other/boost/spirit/home/support/char_encoding/unicode/uppercase_table.hpp,
	  src/other/boost/spirit/home/support/char_set,
	  src/other/boost/spirit/home/support/char_set/basic_chset.hpp,
	  src/other/boost/spirit/home/support/char_set/range.hpp,
	  src/other/boost/spirit/home/support/char_set/range_functions.hpp,
	  src/other/boost/spirit/home/support/char_set/range_run.hpp,
	  src/other/boost/spirit/home/support/char_set/range_run_impl.hpp,
	  src/other/boost/spirit/home/support/common_terminals.hpp,
	  src/other/boost/spirit/home/support/container.hpp,
	  src/other/boost/spirit/home/support/context.hpp,
	  src/other/boost/spirit/home/support/detail,
	  src/other/boost/spirit/home/support/detail/as_variant.hpp,
	  src/other/boost/spirit/home/support/detail/endian.hpp,
	  src/other/boost/spirit/home/support/detail/get_encoding.hpp,
	  src/other/boost/spirit/home/support/detail/hold_any.hpp,
	  src/other/boost/spirit/home/support/detail/integer,
	  src/other/boost/spirit/home/support/detail/integer/cover_operators.hpp,
	  src/other/boost/spirit/home/support/detail/integer/endian.hpp,
	  src/other/boost/spirit/home/support/detail/lexer,
	  src/other/boost/spirit/home/support/detail/lexer/char_traits.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/consts.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/containers,
	  src/other/boost/spirit/home/support/detail/lexer/containers/ptr_list.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/containers/ptr_vector.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/conversion,
	  src/other/boost/spirit/home/support/detail/lexer/conversion/char_state_machine.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/debug.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/file_input.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/generate_cpp.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/generate_re2c.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/generator.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/input.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/internals.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser,
	  src/other/boost/spirit/home/support/detail/lexer/parser/parser.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tokeniser,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tokeniser/num_token.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tokeniser/re_tokeniser.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tokeniser/re_tokeniser_helper.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tokeniser/re_tokeniser_state.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/end_node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/iteration_node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/leaf_node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/selection_node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/parser/tree/sequence_node.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/partition,
	  src/other/boost/spirit/home/support/detail/lexer/partition/charset.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/partition/equivset.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/rules.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/runtime_error.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/serialise.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/size_t.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/state_machine.hpp,
	  src/other/boost/spirit/home/support/detail/lexer/string_token.hpp,
	  src/other/boost/spirit/home/support/detail/make_cons.hpp,
	  src/other/boost/spirit/home/support/detail/make_vector.hpp,
	  src/other/boost/spirit/home/support/detail/math,
	  src/other/boost/spirit/home/support/detail/math/detail,
	  src/other/boost/spirit/home/support/detail/math/detail/fp_traits.hpp,
	  src/other/boost/spirit/home/support/detail/math/fpclassify.hpp,
	  src/other/boost/spirit/home/support/detail/math/signbit.hpp,
	  src/other/boost/spirit/home/support/detail/pow10.hpp,
	  src/other/boost/spirit/home/support/detail/scoped_enum_emulation.hpp,
	  src/other/boost/spirit/home/support/detail/sign.hpp,
	  src/other/boost/spirit/home/support/detail/what_function.hpp,
	  src/other/boost/spirit/home/support/has_semantic_action.hpp,
	  src/other/boost/spirit/home/support/info.hpp,
	  src/other/boost/spirit/home/support/iterators,
	  src/other/boost/spirit/home/support/iterators/detail,
	  src/other/boost/spirit/home/support/iterators/detail/buf_id_check_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/buffering_input_iterator_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/combine_policies.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/first_owner_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/fixed_size_queue.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/fixed_size_queue_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/functor_input_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/input_iterator_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/istream_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/lex_input_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/multi_pass.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/no_check_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/ref_counted_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/split_functor_input_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/detail/split_std_deque_policy.hpp,
	  src/other/boost/spirit/home/support/iterators/istream_iterator.hpp,
	  src/other/boost/spirit/home/support/iterators/look_ahead.hpp,
	  src/other/boost/spirit/home/support/iterators/multi_pass.hpp,
	  src/other/boost/spirit/home/support/iterators/multi_pass_fwd.hpp,
	  src/other/boost/spirit/home/support/iterators/ostream_iterator.hpp,
	  src/other/boost/spirit/home/support/lazy.hpp,
	  src/other/boost/spirit/home/support/make_component.hpp,
	  src/other/boost/spirit/home/support/meta_compiler.hpp,
	  src/other/boost/spirit/home/support/modify.hpp,
	  src/other/boost/spirit/home/support/multi_pass.hpp,
	  src/other/boost/spirit/home/support/multi_pass_wrapper.hpp,
	  src/other/boost/spirit/home/support/nonterminal,
	  src/other/boost/spirit/home/support/nonterminal/expand_arg.hpp,
	  src/other/boost/spirit/home/support/nonterminal/extract_param.hpp,
	  src/other/boost/spirit/home/support/nonterminal/locals.hpp,
	  src/other/boost/spirit/home/support/sequence_base_id.hpp,
	  src/other/boost/spirit/home/support/string_traits.hpp,
	  src/other/boost/spirit/home/support/terminal.hpp,
	  src/other/boost/spirit/home/support/unused.hpp,
	  src/other/boost/spirit/home/support/utf8.hpp,
	  src/other/boost/spirit/include/classic_actions.hpp,
	  src/other/boost/spirit/include/classic_alternative.hpp,
	  src/other/boost/spirit/include/classic_as_parser.hpp,
	  src/other/boost/spirit/include/classic_assert.hpp,
	  src/other/boost/spirit/include/classic_assign_actor.hpp,
	  src/other/boost/spirit/include/classic_assign_key_actor.hpp,
	  src/other/boost/spirit/include/classic_ast.hpp,
	  src/other/boost/spirit/include/classic_ast_fwd.hpp,
	  src/other/boost/spirit/include/classic_basic_chset.hpp,
	  src/other/boost/spirit/include/classic_chset.hpp,
	  src/other/boost/spirit/include/classic_chset_operators.hpp,
	  src/other/boost/spirit/include/classic_clear_actor.hpp,
	  src/other/boost/spirit/include/classic_closure_context.hpp,
	  src/other/boost/spirit/include/classic_closure_fwd.hpp,
	  src/other/boost/spirit/include/classic_common.hpp,
	  src/other/boost/spirit/include/classic_common_fwd.hpp,
	  src/other/boost/spirit/include/classic_composite.hpp,
	  src/other/boost/spirit/include/classic_config.hpp,
	  src/other/boost/spirit/include/classic_confix_fwd.hpp,
	  src/other/boost/spirit/include/classic_debug.hpp,
	  src/other/boost/spirit/include/classic_debug_node.hpp,
	  src/other/boost/spirit/include/classic_decrement_actor.hpp,
	  src/other/boost/spirit/include/classic_difference.hpp,
	  src/other/boost/spirit/include/classic_directives.hpp,
	  src/other/boost/spirit/include/classic_distinct_fwd.hpp,
	  src/other/boost/spirit/include/classic_epsilon.hpp,
	  src/other/boost/spirit/include/classic_erase_actor.hpp,
	  src/other/boost/spirit/include/classic_error_handling.hpp,
	  src/other/boost/spirit/include/classic_escape_char_fwd.hpp,
	  src/other/boost/spirit/include/classic_exceptions.hpp,
	  src/other/boost/spirit/include/classic_exceptions_fwd.hpp,
	  src/other/boost/spirit/include/classic_exclusive_or.hpp,
	  src/other/boost/spirit/include/classic_file_iterator.hpp,
	  src/other/boost/spirit/include/classic_file_iterator_fwd.hpp,
	  src/other/boost/spirit/include/classic_fixed_size_queue.hpp,
	  src/other/boost/spirit/include/classic_flush_multi_pass.hpp,
	  src/other/boost/spirit/include/classic_for.hpp,
	  src/other/boost/spirit/include/classic_fundamental.hpp,
	  src/other/boost/spirit/include/classic_grammar.hpp,
	  src/other/boost/spirit/include/classic_grammar_def.hpp,
	  src/other/boost/spirit/include/classic_grammar_def_fwd.hpp,
	  src/other/boost/spirit/include/classic_increment_actor.hpp,
	  src/other/boost/spirit/include/classic_insert_at_actor.hpp,
	  src/other/boost/spirit/include/classic_insert_key_actor.hpp,
	  src/other/boost/spirit/include/classic_intersection.hpp,
	  src/other/boost/spirit/include/classic_iterator.hpp,
	  src/other/boost/spirit/include/classic_kleene_star.hpp,
	  src/other/boost/spirit/include/classic_lazy.hpp,
	  src/other/boost/spirit/include/classic_list.hpp,
	  src/other/boost/spirit/include/classic_lists_fwd.hpp,
	  src/other/boost/spirit/include/classic_loops.hpp,
	  src/other/boost/spirit/include/classic_match.hpp,
	  src/other/boost/spirit/include/classic_meta.hpp,
	  src/other/boost/spirit/include/classic_minimal.hpp,
	  src/other/boost/spirit/include/classic_multi_pass_fwd.hpp,
	  src/other/boost/spirit/include/classic_nil.hpp,
	  src/other/boost/spirit/include/classic_no_actions.hpp,
	  src/other/boost/spirit/include/classic_numerics.hpp,
	  src/other/boost/spirit/include/classic_numerics_fwd.hpp,
	  src/other/boost/spirit/include/classic_operators.hpp,
	  src/other/boost/spirit/include/classic_optional.hpp,
	  src/other/boost/spirit/include/classic_parametric.hpp,
	  src/other/boost/spirit/include/classic_parse_tree.hpp,
	  src/other/boost/spirit/include/classic_parse_tree_fwd.hpp,
	  src/other/boost/spirit/include/classic_parse_tree_utils.hpp,
	  src/other/boost/spirit/include/classic_parser.hpp,
	  src/other/boost/spirit/include/classic_parser_context.hpp,
	  src/other/boost/spirit/include/classic_parser_id.hpp,
	  src/other/boost/spirit/include/classic_parser_names.hpp,
	  src/other/boost/spirit/include/classic_parser_traits.hpp,
	  src/other/boost/spirit/include/classic_position_iterator.hpp,
	  src/other/boost/spirit/include/classic_position_iterator_fwd.hpp,
	  src/other/boost/spirit/include/classic_positive.hpp,
	  src/other/boost/spirit/include/classic_primitives.hpp,
	  src/other/boost/spirit/include/classic_push_back_actor.hpp,
	  src/other/boost/spirit/include/classic_push_front_actor.hpp,
	  src/other/boost/spirit/include/classic_range_run.hpp,
	  src/other/boost/spirit/include/classic_ref_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_const_ref_a.hpp,
	  src/other/boost/spirit/include/classic_ref_const_ref_value_actor.hpp,
	  src/other/boost/spirit/include/classic_ref_value_actor.hpp,
	  src/other/boost/spirit/include/classic_refactoring.hpp,
	  src/other/boost/spirit/include/classic_regex.hpp,
	  src/other/boost/spirit/include/classic_rule.hpp,
	  src/other/boost/spirit/include/classic_rule_alias.hpp,
	  src/other/boost/spirit/include/classic_rule_parser.hpp,
	  src/other/boost/spirit/include/classic_safe_bool.hpp,
	  src/other/boost/spirit/include/classic_scanner.hpp,
	  src/other/boost/spirit/include/classic_scanner_fwd.hpp,
	  src/other/boost/spirit/include/classic_scoped_lock.hpp,
	  src/other/boost/spirit/include/classic_select.hpp,
	  src/other/boost/spirit/include/classic_sequence.hpp,
	  src/other/boost/spirit/include/classic_sequential_and.hpp,
	  src/other/boost/spirit/include/classic_sequential_or.hpp,
	  src/other/boost/spirit/include/classic_skipper.hpp,
	  src/other/boost/spirit/include/classic_skipper_fwd.hpp,
	  src/other/boost/spirit/include/classic_spirit.hpp,
	  src/other/boost/spirit/include/classic_static.hpp,
	  src/other/boost/spirit/include/classic_stored_rule.hpp,
	  src/other/boost/spirit/include/classic_stored_rule_fwd.hpp,
	  src/other/boost/spirit/include/classic_subrule.hpp,
	  src/other/boost/spirit/include/classic_subrule_fwd.hpp,
	  src/other/boost/spirit/include/classic_swap_actor.hpp,
	  src/other/boost/spirit/include/classic_switch.hpp,
	  src/other/boost/spirit/include/classic_symbols_fwd.hpp,
	  src/other/boost/spirit/include/classic_traverse.hpp,
	  src/other/boost/spirit/include/classic_tree_to_xml.hpp,
	  src/other/boost/spirit/include/classic_typeof.hpp,
	  src/other/boost/spirit/include/classic_utility.hpp,
	  src/other/boost/spirit/include/classic_version.hpp,
	  src/other/boost/spirit/include/classic_while.hpp,
	  src/other/boost/spirit/include/karma.hpp,
	  src/other/boost/spirit/include/karma_action.hpp,
	  src/other/boost/spirit/include/karma_alternative.hpp,
	  src/other/boost/spirit/include/karma_and_predicate.hpp,
	  src/other/boost/spirit/include/karma_attr_cast.hpp,
	  src/other/boost/spirit/include/karma_auto.hpp,
	  src/other/boost/spirit/include/karma_auxiliary.hpp,
	  src/other/boost/spirit/include/karma_binary.hpp,
	  src/other/boost/spirit/include/karma_bool.hpp,
	  src/other/boost/spirit/include/karma_buffer.hpp,
	  src/other/boost/spirit/include/karma_center_alignment.hpp,
	  src/other/boost/spirit/include/karma_char.hpp,
	  src/other/boost/spirit/include/karma_char_.hpp,
	  src/other/boost/spirit/include/karma_char_class.hpp,
	  src/other/boost/spirit/include/karma_columns.hpp,
	  src/other/boost/spirit/include/karma_delimit.hpp,
	  src/other/boost/spirit/include/karma_directive.hpp,
	  src/other/boost/spirit/include/karma_domain.hpp,
	  src/other/boost/spirit/include/karma_duplicate.hpp,
	  src/other/boost/spirit/include/karma_eol.hpp,
	  src/other/boost/spirit/include/karma_eps.hpp,
	  src/other/boost/spirit/include/karma_format.hpp,
	  src/other/boost/spirit/include/karma_format_attr.hpp,
	  src/other/boost/spirit/include/karma_format_auto.hpp,
	  src/other/boost/spirit/include/karma_generate.hpp,
	  src/other/boost/spirit/include/karma_generate_attr.hpp,
	  src/other/boost/spirit/include/karma_generate_auto.hpp,
	  src/other/boost/spirit/include/karma_grammar.hpp,
	  src/other/boost/spirit/include/karma_int.hpp,
	  src/other/boost/spirit/include/karma_kleene.hpp,
	  src/other/boost/spirit/include/karma_lazy.hpp,
	  src/other/boost/spirit/include/karma_left_alignment.hpp,
	  src/other/boost/spirit/include/karma_list.hpp,
	  src/other/boost/spirit/include/karma_maxwidth.hpp,
	  src/other/boost/spirit/include/karma_no_delimit.hpp,
	  src/other/boost/spirit/include/karma_nonterminal.hpp,
	  src/other/boost/spirit/include/karma_not_predicate.hpp,
	  src/other/boost/spirit/include/karma_numeric.hpp,
	  src/other/boost/spirit/include/karma_omit.hpp,
	  src/other/boost/spirit/include/karma_operator.hpp,
	  src/other/boost/spirit/include/karma_optional.hpp,
	  src/other/boost/spirit/include/karma_phoenix_attributes.hpp,
	  src/other/boost/spirit/include/karma_plus.hpp,
	  src/other/boost/spirit/include/karma_real.hpp,
	  src/other/boost/spirit/include/karma_repeat.hpp,
	  src/other/boost/spirit/include/karma_right_alignment.hpp,
	  src/other/boost/spirit/include/karma_rule.hpp,
	  src/other/boost/spirit/include/karma_sequence.hpp,
	  src/other/boost/spirit/include/karma_stream.hpp,
	  src/other/boost/spirit/include/karma_strict_relaxed.hpp,
	  src/other/boost/spirit/include/karma_string.hpp,
	  src/other/boost/spirit/include/karma_symbols.hpp,
	  src/other/boost/spirit/include/karma_uint.hpp,
	  src/other/boost/spirit/include/karma_upper_lower_case.hpp,
	  src/other/boost/spirit/include/karma_verbatim.hpp,
	  src/other/boost/spirit/include/karma_what.hpp,
	  src/other/boost/spirit/include/lex.hpp,
	  src/other/boost/spirit/include/lex_char_token_def.hpp,
	  src/other/boost/spirit/include/lex_domain.hpp,
	  src/other/boost/spirit/include/lex_generate_static_lexertl.hpp,
	  src/other/boost/spirit/include/lex_lexer.hpp,
	  src/other/boost/spirit/include/lex_lexertl.hpp,
	  src/other/boost/spirit/include/lex_primitives.hpp,
	  src/other/boost/spirit/include/lex_static_lexertl.hpp,
	  src/other/boost/spirit/include/lex_tokenize_and_parse.hpp,
	  src/other/boost/spirit/include/lex_tokenize_and_parse_attr.hpp,
	  src/other/boost/spirit/include/phoenix.hpp,
	  src/other/boost/spirit/include/phoenix1.hpp,
	  src/other/boost/spirit/include/phoenix1_actor.hpp,
	  src/other/boost/spirit/include/phoenix1_casts.hpp,
	  src/other/boost/spirit/include/phoenix1_closures.hpp,
	  src/other/boost/spirit/include/phoenix1_composite.hpp,
	  src/other/boost/spirit/include/phoenix1_new.hpp,
	  src/other/boost/spirit/include/phoenix1_operators.hpp,
	  src/other/boost/spirit/include/phoenix1_primitives.hpp,
	  src/other/boost/spirit/include/phoenix1_special_ops.hpp,
	  src/other/boost/spirit/include/phoenix1_statements.hpp,
	  src/other/boost/spirit/include/phoenix1_tuple_helpers.hpp,
	  src/other/boost/spirit/include/phoenix1_tuples.hpp,
	  src/other/boost/spirit/include/phoenix_algorithm.hpp,
	  src/other/boost/spirit/include/phoenix_bind.hpp,
	  src/other/boost/spirit/include/phoenix_container.hpp,
	  src/other/boost/spirit/include/phoenix_core.hpp,
	  src/other/boost/spirit/include/phoenix_function.hpp,
	  src/other/boost/spirit/include/phoenix_fusion.hpp,
	  src/other/boost/spirit/include/phoenix_object.hpp,
	  src/other/boost/spirit/include/phoenix_operator.hpp,
	  src/other/boost/spirit/include/phoenix_scope.hpp,
	  src/other/boost/spirit/include/phoenix_statement.hpp,
	  src/other/boost/spirit/include/phoenix_stl.hpp,
	  src/other/boost/spirit/include/phoenix_version.hpp,
	  src/other/boost/spirit/include/qi.hpp,
	  src/other/boost/spirit/include/qi_action.hpp,
	  src/other/boost/spirit/include/qi_alternative.hpp,
	  src/other/boost/spirit/include/qi_and_predicate.hpp,
	  src/other/boost/spirit/include/qi_attr.hpp,
	  src/other/boost/spirit/include/qi_attr_cast.hpp,
	  src/other/boost/spirit/include/qi_auto.hpp,
	  src/other/boost/spirit/include/qi_auxiliary.hpp,
	  src/other/boost/spirit/include/qi_binary.hpp,
	  src/other/boost/spirit/include/qi_bool.hpp,
	  src/other/boost/spirit/include/qi_char.hpp,
	  src/other/boost/spirit/include/qi_char_.hpp,
	  src/other/boost/spirit/include/qi_char_class.hpp,
	  src/other/boost/spirit/include/qi_core.hpp,
	  src/other/boost/spirit/include/qi_difference.hpp,
	  src/other/boost/spirit/include/qi_directive.hpp,
	  src/other/boost/spirit/include/qi_domain.hpp,
	  src/other/boost/spirit/include/qi_eoi.hpp,
	  src/other/boost/spirit/include/qi_eol.hpp,
	  src/other/boost/spirit/include/qi_eps.hpp,
	  src/other/boost/spirit/include/qi_expect.hpp,
	  src/other/boost/spirit/include/qi_grammar.hpp,
	  src/other/boost/spirit/include/qi_int.hpp,
	  src/other/boost/spirit/include/qi_kleene.hpp,
	  src/other/boost/spirit/include/qi_lazy.hpp,
	  src/other/boost/spirit/include/qi_lexeme.hpp,
	  src/other/boost/spirit/include/qi_list.hpp,
	  src/other/boost/spirit/include/qi_lit.hpp,
	  src/other/boost/spirit/include/qi_match.hpp,
	  src/other/boost/spirit/include/qi_match_attr.hpp,
	  src/other/boost/spirit/include/qi_match_auto.hpp,
	  src/other/boost/spirit/include/qi_matches.hpp,
	  src/other/boost/spirit/include/qi_no_case.hpp,
	  src/other/boost/spirit/include/qi_no_skip.hpp,
	  src/other/boost/spirit/include/qi_nonterminal.hpp,
	  src/other/boost/spirit/include/qi_not_predicate.hpp,
	  src/other/boost/spirit/include/qi_numeric.hpp,
	  src/other/boost/spirit/include/qi_omit.hpp,
	  src/other/boost/spirit/include/qi_operator.hpp,
	  src/other/boost/spirit/include/qi_optional.hpp,
	  src/other/boost/spirit/include/qi_parse.hpp,
	  src/other/boost/spirit/include/qi_parse_attr.hpp,
	  src/other/boost/spirit/include/qi_parse_auto.hpp,
	  src/other/boost/spirit/include/qi_permutation.hpp,
	  src/other/boost/spirit/include/qi_plus.hpp,
	  src/other/boost/spirit/include/qi_raw.hpp,
	  src/other/boost/spirit/include/qi_real.hpp,
	  src/other/boost/spirit/include/qi_repeat.hpp,
	  src/other/boost/spirit/include/qi_rule.hpp,
	  src/other/boost/spirit/include/qi_sequence.hpp,
	  src/other/boost/spirit/include/qi_sequential_or.hpp,
	  src/other/boost/spirit/include/qi_skip.hpp,
	  src/other/boost/spirit/include/qi_stream.hpp,
	  src/other/boost/spirit/include/qi_string.hpp,
	  src/other/boost/spirit/include/qi_symbols.hpp,
	  src/other/boost/spirit/include/qi_uint.hpp,
	  src/other/boost/spirit/include/qi_what.hpp,
	  src/other/boost/spirit/include/support.hpp,
	  src/other/boost/spirit/include/support_adapt_class_attributes.hpp,
	  src/other/boost/spirit/include/support_any.hpp,
	  src/other/boost/spirit/include/support_any_if.hpp,
	  src/other/boost/spirit/include/support_any_if_ns.hpp,
	  src/other/boost/spirit/include/support_any_ns.hpp,
	  src/other/boost/spirit/include/support_argument.hpp,
	  src/other/boost/spirit/include/support_ascii.hpp,
	  src/other/boost/spirit/include/support_attributes.hpp,
	  src/other/boost/spirit/include/support_attributes_fwd.hpp,
	  src/other/boost/spirit/include/support_char_class.hpp,
	  src/other/boost/spirit/include/support_iso8859_1.hpp,
	  src/other/boost/spirit/include/support_istream_iterator.hpp,
	  src/other/boost/spirit/include/support_locals.hpp,
	  src/other/boost/spirit/include/support_look_ahead.hpp,
	  src/other/boost/spirit/include/support_modify.hpp,
	  src/other/boost/spirit/include/support_multi_pass.hpp,
	  src/other/boost/spirit/include/support_multi_pass_fwd.hpp,
	  src/other/boost/spirit/include/support_ostream_iterator.hpp,
	  src/other/boost/spirit/include/support_standard.hpp,
	  src/other/boost/spirit/include/support_standard_wide.hpp,
	  src/other/boost/spirit/include/support_string_traits.hpp,
	  src/other/boost/spirit/include/support_unused.hpp,
	  src/other/boost/spirit/include/version.hpp,
	  src/other/boost/spirit/iterator.hpp,
	  src/other/boost/spirit/iterator/file_iterator.hpp,
	  src/other/boost/spirit/iterator/file_iterator_fwd.hpp,
	  src/other/boost/spirit/iterator/fixed_size_queue.hpp,
	  src/other/boost/spirit/iterator/multi_pass_fwd.hpp,
	  src/other/boost/spirit/iterator/position_iterator.hpp,
	  src/other/boost/spirit/iterator/position_iterator_fwd.hpp,
	  src/other/boost/spirit/iterator/typeof.hpp,
	  src/other/boost/spirit/meta, src/other/boost/spirit/meta.hpp,
	  src/other/boost/spirit/meta/as_parser.hpp,
	  src/other/boost/spirit/meta/fundamental.hpp,
	  src/other/boost/spirit/meta/parser_traits.hpp,
	  src/other/boost/spirit/meta/refactoring.hpp,
	  src/other/boost/spirit/meta/traverse.hpp,
	  src/other/boost/spirit/phoenix/actor.hpp,
	  src/other/boost/spirit/phoenix/casts.hpp,
	  src/other/boost/spirit/phoenix/closures.hpp,
	  src/other/boost/spirit/phoenix/composite.hpp,
	  src/other/boost/spirit/phoenix/new.hpp,
	  src/other/boost/spirit/phoenix/operators.hpp,
	  src/other/boost/spirit/phoenix/primitives.hpp,
	  src/other/boost/spirit/phoenix/special_ops.hpp,
	  src/other/boost/spirit/phoenix/statements.hpp,
	  src/other/boost/spirit/phoenix/tuple_helpers.hpp,
	  src/other/boost/spirit/phoenix/tuples.hpp,
	  src/other/boost/spirit/repository,
	  src/other/boost/spirit/repository/home,
	  src/other/boost/spirit/repository/home/karma,
	  src/other/boost/spirit/repository/home/karma.hpp,
	  src/other/boost/spirit/repository/home/karma/directive,
	  src/other/boost/spirit/repository/home/karma/directive.hpp,
	  src/other/boost/spirit/repository/home/karma/directive/confix.hpp,
	  src/other/boost/spirit/repository/home/karma/nonterminal,
	  src/other/boost/spirit/repository/home/karma/nonterminal.hpp,
	  src/other/boost/spirit/repository/home/karma/nonterminal/subrule.hpp,
	  src/other/boost/spirit/repository/home/qi,
	  src/other/boost/spirit/repository/home/qi.hpp,
	  src/other/boost/spirit/repository/home/qi/directive,
	  src/other/boost/spirit/repository/home/qi/directive.hpp,
	  src/other/boost/spirit/repository/home/qi/directive/confix.hpp,
	  src/other/boost/spirit/repository/home/qi/directive/distinct.hpp,
	  src/other/boost/spirit/repository/home/qi/nonterminal,
	  src/other/boost/spirit/repository/home/qi/nonterminal.hpp,
	  src/other/boost/spirit/repository/home/qi/nonterminal/subrule.hpp,
	  src/other/boost/spirit/repository/home/qi/primitive,
	  src/other/boost/spirit/repository/home/qi/primitive.hpp,
	  src/other/boost/spirit/repository/home/qi/primitive/flush_multi_pass.hpp,
	  src/other/boost/spirit/repository/home/qi/primitive/iter_pos.hpp,
	  src/other/boost/spirit/repository/home/support,
	  src/other/boost/spirit/repository/home/support/confix.hpp,
	  src/other/boost/spirit/repository/home/support/distinct.hpp,
	  src/other/boost/spirit/repository/home/support/flush_multi_pass.hpp,
	  src/other/boost/spirit/repository/home/support/subrule_context.hpp,
	  src/other/boost/spirit/repository/include,
	  src/other/boost/spirit/repository/include/karma.hpp,
	  src/other/boost/spirit/repository/include/karma_confix.hpp,
	  src/other/boost/spirit/repository/include/karma_directive.hpp,
	  src/other/boost/spirit/repository/include/karma_nonterminal.hpp,
	  src/other/boost/spirit/repository/include/karma_subrule.hpp,
	  src/other/boost/spirit/repository/include/qi.hpp,
	  src/other/boost/spirit/repository/include/qi_confix.hpp,
	  src/other/boost/spirit/repository/include/qi_directive.hpp,
	  src/other/boost/spirit/repository/include/qi_distinct.hpp,
	  src/other/boost/spirit/repository/include/qi_flush_multi_pass.hpp,
	  src/other/boost/spirit/repository/include/qi_iter_pos.hpp,
	  src/other/boost/spirit/repository/include/qi_nonterminal.hpp,
	  src/other/boost/spirit/repository/include/qi_primitive.hpp,
	  src/other/boost/spirit/repository/include/qi_subrule.hpp,
	  src/other/boost/spirit/symbols.hpp,
	  src/other/boost/spirit/symbols/symbols_fwd.hpp,
	  src/other/boost/spirit/symbols/typeof.hpp,
	  src/other/boost/spirit/tree, src/other/boost/spirit/tree/ast.hpp,
	  src/other/boost/spirit/tree/ast_fwd.hpp,
	  src/other/boost/spirit/tree/common.hpp,
	  src/other/boost/spirit/tree/common_fwd.hpp,
	  src/other/boost/spirit/tree/parse_tree.hpp,
	  src/other/boost/spirit/tree/parse_tree_fwd.hpp,
	  src/other/boost/spirit/tree/parse_tree_utils.hpp,
	  src/other/boost/spirit/tree/parsetree.dtd,
	  src/other/boost/spirit/tree/tree_to_xml.hpp,
	  src/other/boost/spirit/tree/typeof.hpp,
	  src/other/boost/spirit/utility.hpp,
	  src/other/boost/spirit/utility/chset.hpp,
	  src/other/boost/spirit/utility/chset_operators.hpp,
	  src/other/boost/spirit/utility/confix_fwd.hpp,
	  src/other/boost/spirit/utility/distinct_fwd.hpp,
	  src/other/boost/spirit/utility/escape_char_fwd.hpp,
	  src/other/boost/spirit/utility/flush_multi_pass.hpp,
	  src/other/boost/spirit/utility/grammar_def.hpp,
	  src/other/boost/spirit/utility/grammar_def_fwd.hpp,
	  src/other/boost/spirit/utility/lists_fwd.hpp,
	  src/other/boost/spirit/utility/loops.hpp,
	  src/other/boost/spirit/utility/regex.hpp,
	  src/other/boost/spirit/utility/rule_parser.hpp,
	  src/other/boost/spirit/utility/scoped_lock.hpp,
	  src/other/boost/spirit/utility/typeof.hpp,
	  src/other/boost/spirit/version.hpp,
	  src/other/boost/thread/detail/config.hpp,
	  src/other/boost/thread/detail/move.hpp,
	  src/other/boost/thread/detail/platform.hpp,
	  src/other/boost/thread/detail/thread.hpp,
	  src/other/boost/thread/detail/tss_hooks.hpp,
	  src/other/boost/thread/exceptions.hpp,
	  src/other/boost/thread/locks.hpp,
	  src/other/boost/thread/pthread/condition_variable.hpp,
	  src/other/boost/thread/pthread/condition_variable_fwd.hpp,
	  src/other/boost/thread/pthread/mutex.hpp,
	  src/other/boost/thread/pthread/once.hpp,
	  src/other/boost/thread/pthread/thread_data.hpp,
	  src/other/boost/thread/pthread/thread_heap_alloc.hpp,
	  src/other/boost/thread/thread.hpp,
	  src/other/boost/thread/tss.hpp,
	  src/other/boost/thread/win32/basic_timed_mutex.hpp,
	  src/other/boost/thread/win32/mutex.hpp,
	  src/other/boost/thread/win32/once.hpp,
	  src/other/boost/thread/win32/thread_data.hpp,
	  src/other/boost/thread/win32/thread_heap_alloc.hpp,
	  src/other/boost/thread/win32/thread_primitives.hpp,
	  src/other/boost/throw_exception.hpp,
	  src/other/boost/token_functions.hpp,
	  src/other/boost/tuple/detail/tuple_basic.hpp,
	  src/other/boost/type_traits.hpp,
	  src/other/boost/type_traits/add_reference.hpp,
	  src/other/boost/type_traits/alignment_of.hpp,
	  src/other/boost/type_traits/detail/bool_trait_def.hpp,
	  src/other/boost/type_traits/detail/bool_trait_undef.hpp,
	  src/other/boost/type_traits/detail/size_t_trait_def.hpp,
	  src/other/boost/type_traits/detail/size_t_trait_undef.hpp,
	  src/other/boost/type_traits/detail/type_trait_def.hpp,
	  src/other/boost/type_traits/detail/type_trait_undef.hpp,
	  src/other/boost/type_traits/function_traits.hpp,
	  src/other/boost/type_traits/intrinsics.hpp,
	  src/other/boost/type_traits/is_abstract.hpp,
	  src/other/boost/type_traits/is_base_and_derived.hpp,
	  src/other/boost/type_traits/is_base_of.hpp,
	  src/other/boost/type_traits/is_complex.hpp,
	  src/other/boost/type_traits/is_const.hpp,
	  src/other/boost/type_traits/is_convertible.hpp,
	  src/other/boost/type_traits/is_empty.hpp,
	  src/other/boost/type_traits/is_function.hpp,
	  src/other/boost/type_traits/is_lvalue_reference.hpp,
	  src/other/boost/type_traits/is_member_function_pointer.hpp,
	  src/other/boost/type_traits/is_member_pointer.hpp,
	  src/other/boost/type_traits/is_reference.hpp,
	  src/other/boost/type_traits/is_rvalue_reference.hpp,
	  src/other/boost/type_traits/is_same.hpp,
	  src/other/boost/type_traits/is_signed.hpp,
	  src/other/boost/type_traits/is_unsigned.hpp,
	  src/other/boost/type_traits/is_volatile.hpp,
	  src/other/boost/type_traits/msvc/remove_all_extents.hpp,
	  src/other/boost/type_traits/msvc/remove_bounds.hpp,
	  src/other/boost/type_traits/msvc/remove_const.hpp,
	  src/other/boost/type_traits/msvc/remove_cv.hpp,
	  src/other/boost/type_traits/msvc/remove_extent.hpp,
	  src/other/boost/type_traits/msvc/remove_pointer.hpp,
	  src/other/boost/type_traits/msvc/remove_reference.hpp,
	  src/other/boost/type_traits/msvc/remove_volatile.hpp,
	  src/other/boost/type_traits/remove_const.hpp,
	  src/other/boost/type_traits/remove_cv.hpp,
	  src/other/boost/type_traits/remove_reference.hpp,
	  src/other/boost/type_traits/remove_volatile.hpp,
	  src/other/boost/type_traits/type_with_alignment.hpp,
	  src/other/boost/utility/addressof.hpp,
	  src/other/boost/utility/compare_pointees.hpp,
	  src/other/boost/utility/detail/in_place_factory_prefix.hpp,
	  src/other/boost/utility/detail/in_place_factory_suffix.hpp,
	  src/other/boost/utility/detail/result_of_iterate.hpp,
	  src/other/boost/utility/in_place_factory.hpp,
	  src/other/boost/utility/result_of.hpp,
	  src/other/boost/utility/value_init.hpp,
	  src/other/boost/variant/detail/apply_visitor_binary.hpp,
	  src/other/boost/variant/detail/apply_visitor_delayed.hpp,
	  src/other/boost/variant/detail/apply_visitor_unary.hpp,
	  src/other/boost/variant/detail/variant_io.hpp,
	  src/other/boost/variant/detail/visitation_impl.hpp,
	  src/other/boost/variant/variant.hpp, src/other/boost/version.hpp:
	  I believe this successfully updates the subset of Boost we use
	  for spirit to Boost 1.44.0/Spirit 2.1. Basic approach was to
	  include the main header for spirit in a test case, duplicate the
	  directory structure of the pre-existing boost inclusions, attempt
	  a file copy of the same subset we included, delete any that no
	  longer existed, and add any missing that g++ complained about.
	  Need to revisit this with the bcp tool to make sure things are
	  correct.

2010-11-04 15:21  erikgreenwald

	* [r41247] src/libpc/pcMathVM.cpp, src/libpc/pcMathVM.h,
	  src/libpc/pcParameter.cpp, src/libpc/pcParameter.h,
	  src/libpc/vm_test.cpp:
	  remove executable property on .cpp and .h files

2010-11-03 14:41  starseeker

	* [r41239] TODO:
	  Add note to try spatial partitioning in the facetize command to
	  see what kind of performance boots can be had.

2010-11-02 23:40  starseeker

	* [r41238] TODO:
	  Typo

2010-11-02 23:35  starseeker

	* [r41237] TODO:
	  Toss in a few quick notes on ideas pertaining to NURBS and NMG -
	  moving logic from old NURBS to new and using BoT raytracing to
	  handle NMGs.

2010-11-02 18:18  brlcad

	* [r41233] src/libged/facetize.c:
	  copy paste diff with src/conv/nmg/nmg-bot.c code. here it's
	  nmg_model, not m.

2010-11-02 18:03  brlcad

	* [r41232] src/canon/canonize.c:
	  track fwrite() results

2010-11-02 17:40  brlcad

	* [r41231] src/anim/cattrack.c, src/anim/chan_permute.c:
	  minor ws consistency

2010-11-02 17:38  brlcad

	* [r41230] src/anim/anim_fly.c, src/anim/anim_hardtrack.c,
	  src/anim/anim_keyread.c, src/anim/anim_script.c,
	  src/anim/anim_track.c, src/anim/anim_turn.c,
	  src/anim/chan_permute.c:
	  quell verbose strict warnings on linux

2010-11-02 12:46  brlcad

	* [r41226] NEWS:
	  improved robustness of boolean tree parsing by fixing a 12 year
	  10 month old bug in db_tree.c:rt_tree_parse() where we were
	  proceeding with a corrupt tree if the left tree was non-empty and
	  right tree was empty. cause was a simple copy/paste error, fix
	  was to check the right side for validity so it'd release and
	  unset right tree resources correctly.

2010-11-02 12:36  brlcad

	* [r41225] NEWS:
	  bob fixed a problem with the pro/e export plugin being unable to
	  load on windows. the problem was that the prodevelop/protk
	  libraries that we have to link against are statically compiled
	  against an old version of the C runtime. that C runtime wouldn't
	  necessarily match the newer version we compiled against and would
	  cause problems when trying to load the plugin in Pro/E on
	  Windows. the problem wouldn't manifest if the C runtimes matched
	  or if visual studio was installed. solution was to add a binding
	  redirect directive in the studio build to make the old symbols in
	  the static lib redirect to a newer runtime.

2010-11-02 12:28  brlcad

	* [r41224] NEWS:
	  keith added (improved) ray bundle shooting capability to librt
	  via new rt_shootrays() routine. also implemented ray pattern
	  generators for circular and elliptical. functionality is
	  presently exposed in the rtshot tool.

2010-11-02 12:25  brlcad

	* [r41223] NEWS:
	  various commits by richard to improve the robustness of
	  facetization and geometry export (to polygonal formats). fixed
	  ell tess bug, coplanar validity test, tightness of orthogonal
	  vectors, coplanar lines test, and more.

2010-11-02 11:30  brlcad

	* [r41222] src/libged/comb_std.c, src/libged/dg_obj.c,
	  src/libged/draw.c, src/libged/red.c, src/libged/wdb_comb_std.c,
	  src/libged/wdb_obj.c, src/librt/comb/comb.c,
	  src/librt/comb/db_comb.c, src/mged/dodraw.c, src/mged/red.c:
	  don't need to check the pointer parameter to db_free_tree() as it
	  will do a test for callers and return without action if null.
	  simplify.

2010-11-02 11:29  brlcad

	* [r41221] src/libged/put_comb.c:
	  simplify

2010-11-02 11:28  brlcad

	* [r41220] src/other/tcl/generic/tclDecls.h:
	  quell shadow on trace()

2010-11-02 11:13  brlcad

	* [r41219] src/librt/db_tree.c:
	  the db_free_tree for the left was intentional. free it up so we
	  don't leak.

2010-11-02 11:10  brlcad

	* [r41218] src/librt/db_tree.c:
	  need another pair of core eyes on this but this looks like an
	  outright bug in the logic! checking the wrong left/right side
	  during db_tree_parse(). the intent seems clear so fix it so we do
	  not return a corrupt tree pointer (with a non-null left and null
	  right). no telling the damage that has caused.

2010-11-02 10:51  brlcad

	* [r41217] src/conv/nmg/nmg-bot.c:
	  wants a pointer

2010-11-02 10:48  brlcad

	* [r41216] src/libged/facetize.c:
	  db_free_tree() already tests the pointer and does nothing if
	  null. simplify.

2010-11-02 10:47  brlcad

	* [r41215] src/libged/facetize.c:
	  report if this is an NMG with more than one region or shell when
	  going to BoT

2010-11-02 10:39  brlcad

	* [r41214] TODO:
	  cleanup bu_setjump/bu_unsetjump blocks to more familiar try/catch
	  style

2010-11-02 10:36  brlcad

	* [r41213] src/libged/facetize.c:
	  convert our bu_setjump/bu_unsetjump blocks to more familiar
	  try/catch exception handling layout. this should happen across
	  the entire code base for clarity and consistency. I remember it
	  taking me a while to wrap my head around jumps when I started and
	  the inconsistent calling style didn't help.

2010-11-02 10:31  brlcad

	* [r41212] src/conv/nmg/nmg-bot.c:
	  convert to try/catch block exception style, cleanup ws

2010-11-02 10:23  brlcad

	* [r41211] NEWS:
	  no more /dev/tty printing when running 'facetize' command when
	  conversion to BoT fails.

2010-11-02 10:20  brlcad

	* [r41210] src/libged/facetize.c:
	  this is the cause of the spurious bu_bomb() /dev/tty print
	  messages infesting my conversion script. need to catch exceptions
	  thrown by nmg_bot().

2010-11-02 10:11  brlcad

	* [r41209] TODO:
	  noticed a couple problems already. facetize creates crap BoTs by
	  only dumping first region, first shell. nmg_bot() and
	  nmg_from_bot() both suck from an API perspective in that they
	  only work with a shell too.

2010-11-02 03:15  brlcad

	* [r41208] sh/Makefile.am, sh/conversion.sh:
	  add an initial, useful, and VERY informative script that walks
	  over all objects in the geometry file(s) specified and reports
	  which will successfully convert to nmg as well as bot. notably
	  interesting that many nmg succeed while the supposedly trivial
	  subsequent conversion to bot sometimes fails. also interesting
	  that several debug messages seem to be escaping stdout/stderr
	  redirect. work is performed on a temporary copy so original input
	  is unmodified. example use: sh conversion.sh db/*.g

2010-10-31 00:57  brlcad

	* [r41199] src/librt/db_tree.c:
	  avoid using the 'new' c++ keyword for variable names

2010-10-31 00:53  brlcad

	* [r41198] src/librt/db_tree.c:
	  remove dead code, and it's one of just two places in librt that
	  directly calls nmg routines (should decouple fully)

2010-10-30 00:10  erikgreenwald

	* [r41197] configure.ac:
	  use the AC_LANG_SOURCE macro

2010-10-30 00:08  brlcad

	* [r41196] src/fb/bw-fb.c, src/fb/cell-fb.c:
	  cleanup, return from funcs that return, deshadow

2010-10-30 00:00  erikgreenwald

	* [r41195] src/other/step/configure.ac:
	  allow autoconf to see the local m4 dir

2010-10-29 21:33  bob1961

	* [r41194] src/tclscripts/lib/Ged.tcl:
	  Added cadwidgets::Ged::set_data_point_callback. Update
	  cadwidgets::Ged::end_data_move to honor gridSnap mode.

2010-10-29 21:19  erikgreenwald

	* [r41193] src/adrt/librender/camera.c:
	  Linux requires either RTLD_LAZY or RTLD_NOW. Use dlerror() in
	  error reporting.

2010-10-29 20:58  erikgreenwald

	* [r41192] src/adrt/librender/camera.c:
	  put the TIE semaphore after the RT semaphores

2010-10-29 20:37  bob1961

	* [r41191] src/tclscripts/archer/DataUtils.tcl:
	  Mods to DataUtils::dataPick to accomodate _group's containing
	  whitespace.

2010-10-29 19:22  brlcad

	* [r41189] README:
	  also refer users to the platform-specific readme files in the
	  main README

2010-10-29 19:18  brlcad

	* [r41187] INSTALL:
	  for some reason, README.Windows was not listed

2010-10-29 18:54  brlcad

	* [r41186] src/conv/g-egg.c, src/conv/stl/g-stl.c:
	  this is interesting, the gcc attribute must encompass the array
	  size or it thinks that it is parsing an array of functions.
	  should be problematic signatures, but seems to do the trick.

2010-10-29 18:52  brlcad

	* [r41185] src/conv/euclid/g-euclid.c, src/conv/euclid/g-euclid1.c:
	  unsigned/signed demismatch

2010-10-29 18:47  brlcad

	* [r41184] src/conv/Makefile.am, src/conv/comgeom/ged_types.h,
	  src/conv/comgeom/mat.c:
	  ged_types.h isn't needed if we're including vmath so remove it.

2010-10-29 18:39  brlcad

	* [r41183] src/conv/iges/add_face.c, src/conv/iges/iges_struct.h,
	  src/conv/iges/main.c, src/conv/iges/make_nurb_face.c:
	  more quellage

2010-10-29 18:38  brlcad

	* [r41182] src/conv/iges/extrudcon.c:
	  lower the minus a smidgen

2010-10-29 18:38  brlcad

	* [r41181] src/conv/comgeom/mat.c:
	  also needs vmath

2010-10-29 18:37  brlcad

	* [r41180] src/conv/iges/g-iges.c:
	  oops, these were just testing comments. uncomment.

2010-10-29 18:36  brlcad

	* [r41179] src/conv/iges/splinef.c:
	  needs vmath for NEAR_ZERO

2010-10-29 18:36  brlcad

	* [r41178] src/conv/intaval/regtab.cpp:
	  specifying the length was pointless, still needs quellage

2010-10-29 18:14  brlcad

	* [r41177] src/conv/3dm/3dm-g.cpp, src/conv/comgeom/mat.c,
	  src/conv/comgeom/tools.c, src/conv/dxf/g-dxf.c,
	  src/conv/euclid/g-euclid.c, src/conv/euclid/g-euclid1.c,
	  src/conv/g-acad.c, src/conv/g-egg.c, src/conv/g-nff.c,
	  src/conv/g-obj.c, src/conv/g-vrml.c, src/conv/g-x3d.c,
	  src/conv/g-xxx_facets.c, src/conv/iges/add_inner_shell.c,
	  src/conv/iges/b-spline.c, src/conv/iges/block2.c,
	  src/conv/iges/brep.c, src/conv/iges/brep.cpp,
	  src/conv/iges/cone.c, src/conv/iges/conv_drawings.c,
	  src/conv/iges/cyl.c, src/conv/iges/do_subfigs.c,
	  src/conv/iges/extrudcirc.c, src/conv/iges/extrudcon.c,
	  src/conv/iges/g-iges.c, src/conv/iges/get_outer_shell.c,
	  src/conv/iges/getcurve.c, src/conv/iges/iges.c,
	  src/conv/iges/iges_struct.h, src/conv/iges/make_nurb_face.c,
	  src/conv/iges/readglobal.c, src/conv/iges/revolve.c,
	  src/conv/iges/splinef.c, src/conv/iges/tor.c,
	  src/conv/iges/trimsurf.c, src/conv/iges/wedge.c,
	  src/conv/intaval/regtab.cpp, src/conv/jack/jack-g.c,
	  src/conv/nmg/g-nmg.c, src/conv/nmg/nmg-sgp.c,
	  src/conv/patch/rpatch.c, src/conv/ply-g.c, src/conv/proe-g.c,
	  src/conv/stl/g-stl.c, src/conv/stl/stl-g.c,
	  src/conv/tankill/g-tankill.c, src/conv/walk_example.c:
	  lots of cleanup to remove dead code (MEMORY_LEAK_CHECKING),
	  unused parameters, variables, and lots of direct floating point
	  comparison tests.

2010-10-29 18:11  brlcad

	* [r41175] src/conv/step/SdaiCONFIG_CONTROL_DESIGN.cc:
	  unused param quellage even though this file is autogenerated.

2010-10-29 18:11  brlcad

	* [r41174] src/conv/step/schema.cc:
	  add missing return statement for failure

2010-10-29 18:11  brlcad

	* [r41173] src/conv/step/SdaiAll.cc, src/conv/step/compstructs.cc:
	  remove unused vars

2010-10-29 17:51  erikgreenwald

	* [r41172] src/adrt/librender/camera.c:
	  update worker to match the signature expected by bu_parallel

2010-10-29 07:07  brlcad

	* [r41168] src/conv/asc/asc2g.c, src/conv/bot_shell-vtk.c,
	  src/conv/comgeom/f2a.c, src/conv/comgeom/read.c,
	  src/conv/comgeom/solid.c, src/conv/cy-g.c, src/conv/dem-g.c,
	  src/conv/dxf/bot-bldxf.c:
	  quell a slew of compilation warnings. variable decls should be at
	  top of scope. add a couple FIXME notes for dem-g where
	  variable-sized arrays are deused. fix a handful of other UNUSED
	  params and shadowing.

2010-10-29 06:36  brlcad

	* [r41167] src/conv/step/Axis1Placement.cpp,
	  src/conv/step/Axis1Placement.h,
	  src/conv/step/Axis2Placement3D.cpp, src/conv/step/Loop.cpp,
	  src/conv/step/MassUnit.cpp,
	  src/conv/step/OpenNurbsInterfaces.cpp,
	  src/conv/step/PullbackCurve.cpp,
	  src/conv/step/RationalBSplineSurface.cpp:
	  quell warnings, mostly unused.

2010-10-29 06:35  brlcad

	* [r41166] src/conv/step/BRLCADWrapper.cpp:
	  looks like the radius was left hard-coded to 10.0, make it use
	  the value passed.

2010-10-29 06:32  brlcad

	* [r41165] src/conv/step/STEPWrapper.h:
	  compiler is not happy with line statements merely calling
	  sizeof(). remove the sizeof wrapping on ERROR to quell warnings
	  about useless statements.

2010-10-29 06:16  brlcad

	* [r41164] src/canon/Makefile.am, src/canon/canon.h,
	  src/canon/canonlib.c:
	  enable strict warning compilation. tray needs to be an int in
	  order to hold the value of IPU_MANUAL_FEED without overflowing.

2010-10-29 06:13  brlcad

	* [r41163] src/bwish/cadAppInit.c, src/bwish/cmd.c,
	  src/bwish/consoleMain.c, src/bwish/input.c, src/bwish/main.c,
	  src/bwish/tcl.c, src/bwish/unixMain.c, src/bwish/winMain.c:
	  minor formatting consistency

2010-10-29 06:09  brlcad

	* [r41162] src/bwish/Makefile.am, src/bwish/cmd.c,
	  src/bwish/input.c, src/bwish/main.c:
	  enable and quell all strict verbose compilation warnings. make
	  interp global be INTERP to make it clear where the gobal is being
	  used. mark unused params.

2010-10-29 06:02  brlcad

	* [r41161] src/burst/Hm.c, src/burst/Hm.h, src/burst/HmGetc.c,
	  src/burst/HmGlob.c, src/burst/Mm.h, src/burst/Sc.c,
	  src/burst/Sc.h, src/burst/ascii.h, src/burst/burst.c,
	  src/burst/burst.h, src/burst/error.c, src/burst/extern.h,
	  src/burst/fb.c, src/burst/glob.c, src/burst/grid.c,
	  src/burst/gridrotate.c, src/burst/idents.c, src/burst/paint.c,
	  src/burst/plot.c, src/burst/prnt.c, src/burst/trie.c,
	  src/burst/trie.h, src/burst/ui.c:
	  massive ws cleanup. conversion to our style, undo k&risms,
	  consistency cleanup.

2010-10-29 05:21  brlcad

	* [r41160] src/burst/Hm.c, src/burst/Makefile.am, src/burst/fb.c,
	  src/burst/grid.c, src/burst/gridrotate.c, src/burst/ui.c:
	  quell a slew of strict compilation warnings. unused vars, k&r
	  conversions to stdc, and more.

2010-10-29 04:58  brlcad

	* [r41159] src/other/tnt/jama_lu.h:
	  let our jama mod play nicely with vmath

2010-10-29 04:51  brlcad

	* [r41158] src/librt/primitives/nmg/nmg_tri_mc.c:
	  remove unused a, step, count, and res vars; and tol needs to be
	  const.

2010-10-28 21:05  erikgreenwald

	* [r41154] src/adrt/librender/camera.c,
	  src/adrt/librender/camera.h, src/adrt/slave/slave.c:
	  switch from using direct pthreads to the bu_parallel wrapper

2010-10-27 21:52  erikgreenwald

	* [r41148] src/librt/primitives/nmg/nmg_tri_mc.c:
	  add in threadings stuff. still a bug to work out deep in the nmg
	  guts, but this level should be done.

2010-10-26 19:29  bob1961

	* [r41144] include/cmd.h:
	  Bump MAXARGS up a bit.

2010-10-26 19:25  bob1961

	* [r41143] src/libtclcad/ged_obj.c:
	  Added code to free memory in ged_obj.c:go_data_labels().

2010-10-26 19:22  bob1961

	* [r41142] src/tclscripts/lib/Ged.tcl:
	  Modified Ged::begin_data_arrow and Ged::begin_data_line to
	  validate dindex before using.

2010-10-26 19:14  bob1961

	* [r41141] src/archer/archer.bat, src/mged/mged.bat,
	  src/tclscripts/rtwizard/rtwizard.bat:
	  Update version to 7.17.10 in a few bat files.

2010-10-26 19:04  bob1961

	* [r41140] src/tclscripts/archer/DataUtils.tcl:
	  Minor mods to DataUtils::appendGlobalData and
	  DataUtils::updateGlobalData for handling groups that contain
	  whitespace.

2010-10-26 19:02  bob1961

	* [r41139] src/tclscripts/archer/AttrGroupsDisplayUtility.tcl:
	  Added AttrGroupsDisplayUtility::getCurrentGroup.

2010-10-25 14:04  erikgreenwald

	* [r41133] src/external/ProEngineer/Makefile.am:
	  add new files

2010-10-22 20:17  bob1961

	* [r41126] misc/win32-msvc8/adrt/adrt.vcproj:
	  Added include paths for adrt header to the x64 configuration.

2010-10-22 20:09  bob1961

	* [r41125] src/external/ProEngineer/proe-brl-notes.txt,
	  src/external/ProEngineer/proe-brl.dll.config,
	  src/external/ProEngineer/win32-msvc8/proe-brl-3.0/proe-brl-3.0.vcproj,
	  src/external/ProEngineer/win32-msvc8/proe-brl-4.0/proe-brl-4.0.vcproj,
	  src/external/ProEngineer/win32-msvc8/proe-brl-5.0/proe-brl-5.0.vcproj:
	  These mods take care of a problem that we've been seeing related
	  to the proe-brl plugin failing to load on platforms that either
	  didn't have Visual Studio installed or the platform's version of
	  the c-runtime was older than what was used to compile the
	  proe-brl.dll.

2010-10-22 13:16  brlcad

	* [r41122] configure.ac:
	  sgtty.h was needed when we didn't run tcl's configure so it can
	  be removed. document why the c++ stl header tests are performed
	  (for boost) since they are only used here.

2010-10-22 12:34  brlcad

	* [r41121] configure.ac:
	  the random check isn't being used any more so remove it. also,
	  the BUILD_BOOST rule was checking the wrong ac_cv_header_limit so
	  it was always false. this gives it a chance.

2010-10-21 05:51  brlcad

	* [r41119] src/libbn/ulp.c:
	  yeah, assumes IEEE too

2010-10-21 05:49  brlcad

	* [r41118] src/libbn/Makefile.am, src/libbn/ulp.c:
	  add an initial ulp.c implementation to provide a variety of
	  routines useful for comparing numbers. this is completely
	  preliminary and needs a variety of changes so don't even enable
	  the file for compilation. for now, it implements ulp() and a
	  variety of run-time variants of the float.h constants
	  ([flt|dbl]_[min|max] and [epsilon|epsilonf]).

2010-10-21 01:25  brlcad

	* [r41116] src/libpc/Makefile.am, src/libpc/pcBasic.h,
	  src/libpc/pcConstraint.cpp, src/libpc/pcConstraint.h,
	  src/libpc/pcGenerator.cpp, src/libpc/pcGenerator.h,
	  src/libpc/pcInterval.h, src/libpc/pcMathGrammar.h,
	  src/libpc/pcMathLF.h, src/libpc/pcMathVM.cpp,
	  src/libpc/pcMathVM.h, src/libpc/pcNetwork.cpp,
	  src/libpc/pcNetwork.h, src/libpc/pcParameter.cpp,
	  src/libpc/pcParameter.h, src/libpc/pcParser.cpp,
	  src/libpc/pcParser.h, src/libpc/pcSolver.h,
	  src/libpc/pcVCSet.cpp, src/libpc/pcVCSet.h,
	  src/libpc/pcVariable.cpp, src/libpc/pcVariable.h,
	  src/libpc/pc_constraints.c, src/libpc/pc_main.c,
	  src/libpc/solver_test.cpp, src/libpc/vm_test.cpp:
	  ws style indent consistency cleanup

2010-10-20 20:05  brlcad

	* [r41115] src/libpc/pcConstraint.cpp, src/libpc/pcMathVM.cpp,
	  src/libpc/pcMathVM.h, src/libpc/pcNetwork.cpp,
	  src/libpc/pcNetwork.h, src/libpc/pcParameter.cpp,
	  src/libpc/pcSolver.h, src/libpc/pcVCSet.cpp,
	  src/libpc/pcVariable.cpp, src/libpc/pcVariable.h,
	  src/libpc/solver_test.cpp:
	  fix a slew of compilation problems. includes a bunch of shadow
	  warnings and unordered args but also a missing virtual
	  destructor, exact floating point comparisons, and returning bools
	  where expecting doubles.

2010-10-20 19:59  bob1961

	* [r41114] src/tclscripts/archer/DataUtils.tcl,
	  src/tclscripts/archer/tclIndex:
	  Added DataUtils::deleteGlobalData for deleting group specific
	  data from a specified _GLOBAL attribute.

2010-10-20 04:07  brlcad

	* [r41113] src/other/tcl/generic/tclIntDecls.h,
	  src/other/tcl/generic/tclIntPlatDecls.h:
	  need to be more careful when updating to new version of tcl to
	  get ALL mods so time is not repeatedly wasted fixing the same
	  issues. quell warnings on shadowing time() and clock().

2010-10-19 19:12  bob1961

	* [r41111] src/tclscripts/archer/DataUtils.tcl,
	  src/tclscripts/archer/tclIndex:
	  Added DataUtils::measureLastDataPoints for measuring the distance
	  between the last two data axes.

2010-10-19 17:32  bob1961

	* [r41110] src/tclscripts/archer/ArcherCore.tcl:
	  Modified ArcherCore::updateTreeTopWithName to account for
	  mPNode2CList() possibly not existing.

2010-10-19 09:22  d_rossberg

	* [r41105] misc/win32-msvc/Dll/BrlcadCore.def:
	  bu_ptbl() was removed

2010-10-19 07:38  brlcad

	* [r41104] bench/Makefile.am:
	  blasted tcl includes are needed for bu.h

2010-10-19 06:22  brlcad

	* [r41103] src/adrt/master/dispatcher.c,
	  src/adrt/master/tienet_master.c:
	  and yet even more Windows header inclusion protections.

2010-10-19 06:18  brlcad

	* [r41102] src/adrt/master/compnet.c, src/adrt/master/master.c:
	  more windows header inclusion protections.

2010-10-19 06:15  brlcad

	* [r41101] src/adrt/master/master.c:
	  check for pthread.h before including

2010-10-19 06:14  brlcad

	* [r41100] src/proc-db/brepintersect.h:
	  tsk tsk jdoliner... get rid of the insane #include lines. someone
	  apparently didn't know how cppflags work, undo the relative
	  paths.

2010-10-19 06:10  brlcad

	* [r41099] src/burst/Hm.c, src/burst/Hm.h, src/burst/Sc.c,
	  src/burst/Sc.h, src/burst/burst.h, src/burst/extern.h,
	  src/burst/fb.c, src/burst/glob.c, src/burst/grid.c,
	  src/burst/idents.c, src/burst/prnt.c, src/burst/trie.c,
	  src/burst/ui.c:
	  remove boolean, pointer, and DEGRAD. replace with the usual.

2010-10-19 06:05  brlcad

	* [r41098] src/proc-db/csgbrep.cpp:
	  add fixme since these are not supposed to be public functions and
	  are not exported.

2010-10-19 06:02  brlcad

	* [r41097] src/conv/dem-g.c:
	  remove inclusion of stdbool.h for Windows compatibility. update
	  references to true/false/bool accordingly.

2010-10-19 05:59  brlcad

	* [r41096] misc/enigma/enigma.c:
	  try to stay portable, key on _WIN32 for unistd.h

2010-10-19 05:57  brlcad

	* [r41095] src/fbed/extern.h, src/fbed/fbed.c, src/fbed/popup.h,
	  src/fbed/prnt.c:
	  rename Rectangle to Rect2D to avoid naming conflicts on Windows
	  with Rectangle()

2010-10-19 05:48  brlcad

	* [r41094] src/conv/jack/g-jack.c:
	  reorder to avoid forward decls, fix nmg_eue_dist() linkage on
	  Windows, pull from header

2010-10-19 05:41  brlcad

	* [r41093] src/adrt/isst_tcltk.c, src/adrt/master/master.c,
	  src/adrt/slave/slave.c, src/conv/step/schema.h, src/fbed/empty.c,
	  src/librt/timer42.c, src/librtserver/rtserverTest.c,
	  src/remrt/remrt.c, src/remrt/rtsrv.c, src/rt/heatgraph.c,
	  src/util/dunncomm.c, src/util/ttcp.c:
	  more header cleanup for Windows checking for sys/time.h and
	  others.

2010-10-19 05:41  brlcad

	* [r41092] include/config_win.h:
	  windows has winsock2.h too.

2010-10-19 05:33  brlcad

	* [r41091] src/lgt/reflect.c:
	  quell with UNUSED() instead of the hack. it was before one of the
	  variable decls anyways.

2010-10-19 05:32  brlcad

	* [r41090] src/lgt/extern.h:
	  don't declare errno. we get the linkage wrong on Windows.

2010-10-19 05:30  brlcad

	* [r41089] src/util/pixblend.c, src/util/ttcp.c:
	  undoubtedly others, but respond to a volley of Windows
	  compilation header inlusion failures

2010-10-19 05:19  brlcad

	* [r41088] src/proc-db/metaball.c:
	  protect unistd.h for portability

2010-10-19 05:18  brlcad

	* [r41087] src/proc-db/mkbuilding.c:
	  move vars to top of scope for Windows

2010-10-19 05:18  brlcad

	* [r41086] src/proc-db/makebuilding/makebuilding.c,
	  src/proc-db/mkbuilding.c:
	  remove gratuitous blank lineage and move rgb decl to top of scope
	  for Windows portability

2010-10-19 05:11  brlcad

	* [r41085] bench/Makefile.am, bench/pixcmp.c:
	  finally cave in to portability. pixcmp now utilizes libbu in
	  order to leverage bu_getopt() for Windows portability.

2010-10-19 05:01  brlcad

	* [r41084] src/remrt/ihost.c:
	  protect all the funky networking headers so windows has a chance.
	  blindly stab in an include for winsock2.h (even though it will
	  have to have init calls added too for things like gethostbyname()
	  to work.

2010-10-19 04:57  brlcad

	* [r41083] configure.ac:
	  check for arpa/inet.h and netdb.h for remrt portability
	  protections

2010-10-19 04:51  brlcad

	* [r41082] src/remrt/remrt.c:
	  netdb.h is ancient, remove and hope

2010-10-19 04:50  brlcad

	* [r41081] src/libbu/parse.c, src/liboptical/sh_billboard.c,
	  src/liboptical/sh_fire.c, src/liboptical/sh_gauss.c,
	  src/liboptical/sh_grass.c, src/liboptical/sh_noise.c,
	  src/liboptical/sh_prj.c, src/liboptical/sh_tcl.c,
	  src/liboptical/sh_toon.c, src/liboptical/sh_xxx.c, src/rt/do.c,
	  src/rt/hurt.c:
	  replace the 'i' bu_structparse type identifier with '%p' instead
	  so that it's more consistent with the other types for
	  representing the pointer indirection to another bu_structparse
	  structure and run-on sentences can be awesome on tuesdays with
	  developer deprecation warnings firmly in place to blather so any
	  missed entries can be readily identified and updated.

2010-10-19 04:46  brlcad

	* [r41080] src/rt/rtshot.c:
	  quick cleanup, ws, and move variable decls to the top of their
	  scopes for Windows

2010-10-19 04:36  brlcad

	* [r41079] src/proc-db/surfaceintersect.cpp:
	  assert.h is a system header, remove stale comments

2010-10-19 04:36  brlcad

	* [r41078] src/proc-db/surfaceintersect.h:
	  do not directly include stdint.h .. it's included with
	  protections via common.h

2010-10-19 04:29  brlcad

	* [r41077] include/cmd.h:
	  include bio.h so we can get windows.h included so we can get
	  struct timeval defined

2010-10-19 04:25  brlcad

	* [r41076] src/bwish/input.c:
	  check for sys/time.h since it's posix.1

2010-10-19 04:19  brlcad

	* [r41075] TODO:
	  renamed bu_ptbl() and nmg_struct_counts() so they no longer hide
	  the struct constructors during c++ compilation

2010-10-19 04:18  brlcad

	* [r41074] doc/deprecation.txt, include/raytrace.h,
	  src/librt/primitives/nmg/nmg_index.c:
	  rename nmg_struct_counts() to nmg_pr_m_struct_counts() since it
	  conflicts with the 'struct nmg_struct_counts' constructor during
	  c++ compilation.

2010-10-19 03:51  brlcad

	* [r41073] include/bu.h, src/conv/jack/g-jack.c,
	  src/conv/off/g-off.c, src/conv/patch/patch-g.c, src/libbu/ptbl.c,
	  src/libged/inside.c, src/libged/wdb_obj.c, src/libged/xpush.c,
	  src/librt/primitives/nmg/nmg_inter.c, src/util/fix_polysolids.c:
	  remove bu_ptbl() since it conflicts with 'struct bu_ptbl' causing
	  a compilation shadow warning on its constructor for c++ codes.
	  the interface is actually duplicitous so code can be trivially
	  updated to the various equivalent bu_ptbl_*() calls that it was
	  wrapping.

2010-10-19 03:43  brlcad

	* [r41072] doc/deprecation.txt:
	  move the minimally impacting docs down with that section in order
	  to keep them in localized context. add bu_ptbl() changes.

2010-10-19 00:15  brlcad

	* [r41069] src/librt/mkbundle.c:
	  more quellage to fix build. unused vars.

2010-10-19 00:13  brlcad

	* [r41068] src/librt/bundle.c:
	  strict compilation failure, removed unused var

2010-10-19 00:11  brlcad

	* [r41067] src/libbu/avs.c, src/libbu/fopen_uniq.c,
	  src/libbu/log.c, src/libbu/malloc.c, src/libbu/parse.c:
	  LIKELY/UNLIKELY macros expect an integer argument, so compare
	  against NULL since that's what's implied. fixes strict build
	  warning.

2010-10-18 22:22  brlcad

	* [r41065] src/canon/canonlib.c, src/conv/proe-g.c,
	  src/fb/cell-fb.c, src/fb/fb-orle.c, src/fb/fbcmap.c,
	  src/fbed/fbed.c, src/gtools/g_lint.c, src/gtools/remapid.c,
	  src/lgt/do_options.c, src/libged/push.c, src/libged/wdb_obj.c,
	  src/librtserver/rtserverTest.c, src/nirt/showshot.c,
	  src/tab/scriptsort.c, src/tab/tabinterp.c, src/vdeck/parsarg.c:
	  remove the remainder of places where the bu_opt* family was being
	  declared as extern and were a problem with Windows portability.
	  removed since bu.h declares them portably and properly.

2010-10-18 22:18  brlcad

	* [r41064] TODO:
	  bu_cv_optimize() should be using bu_byteorder()

2010-10-18 22:18  brlcad

	* [r41063] src/tab/script-tab.c, src/tab/tabsub.c:
	  quellage and de-k&r cleanup

2010-10-18 21:45  brlcad

	* [r41061] src/anim/Makefile.am, src/anim/anim_cascade.c,
	  src/anim/anim_fly.c, src/anim/anim_hardtrack.c,
	  src/anim/anim_keyread.c, src/anim/anim_lookat.c,
	  src/anim/anim_offset.c, src/anim/anim_orient.c,
	  src/anim/anim_script.c, src/anim/anim_sort.c,
	  src/anim/anim_time.c, src/anim/anim_track.c,
	  src/anim/anim_turn.c, src/anim/cattrack.c, src/anim/chan_add.c,
	  src/anim/chan_mult.c, src/anim/chan_permute.c:
	  more restructuring and cleanup including ws/style consistency
	  cleanup along with forward decl elimination and comment
	  restructuring.

2010-10-18 21:24  brlcad

	* [r41060] src/anim/anim_cascade.c, src/anim/anim_fly.c,
	  src/anim/anim_hardtrack.c, src/anim/anim_lookat.c,
	  src/anim/anim_track.c, src/anim/anim_turn.c, src/anim/cattrack.c,
	  src/anim/cattrack.h:
	  quell verbose compilation warnings, reorder to eliminate forward
	  decls

2010-10-18 21:16  brlcad

	* [r41059] src/anim/Makefile.am, src/anim/anim_track.c,
	  src/anim/cattrack.c, src/anim/cattrack.h:
	  break out the functions from cattrack.c that are used by
	  anim_track.c into a private header file so that the function
	  signatures can be declared in one place. move and doxygenify the
	  function comments, reordering the implementations to avoid the
	  need for forward decls and calling out the HIDDEN ones that are
	  just internal to the implementation.

2010-10-18 18:58  brlcad

	* [r41055] include/anim.h, src/anim/anim_cascade.c,
	  src/anim/anim_fly.c, src/anim/anim_keyread.c,
	  src/anim/anim_lookat.c, src/anim/anim_orient.c,
	  src/anim/anim_turn.c:
	  replace RTOD/DTOR with vmath's RAD2DEG/DEG2RAD accordingly

2010-10-18 18:55  brlcad

	* [r41054] src/anim/anim_cascade.c, src/anim/anim_hardtrack.c,
	  src/anim/anim_keyread.c, src/anim/anim_lookat.c,
	  src/anim/anim_orient.c, src/anim/anim_script.c,
	  src/anim/anim_track.c, src/anim/anim_turn.c:
	  clean things up for Windows. remove all extern declarations of
	  the bu_getopt globals. remove all forward decls, for that matter,
	  including a slew of unnecessary ones provided by anim.h;
	  reordering accordingly.

2010-10-18 18:31  brlcad

	* [r41051] bench/pixcmp.c:
	  remove the getopt global var declarations as they bust the
	  windows build. there was some platform (maybe solaris?) that
	  required them at some point, but remove for now regardless. if
	  readded, they will need __declspec(dllimport).

2010-10-18 17:42  brlcad

	* [r41050] src/util/pixfade.c:
	  inpp name tweak

2010-10-18 17:39  brlcad

	* [r41049] src/util/azel.c, src/util/dsp_add.c, src/util/imgdims.c,
	  src/util/orle-pix.c, src/util/pixclump.c, src/util/pixcount.c,
	  src/util/pixdsplit.c, src/util/pl-ps.c, src/util/random.c,
	  src/util/terrain.c, src/util/wavelet.c:
	  remove all of the forward declarations for bu_opt* (i.e.,
	  bu_optind, bu_optarg, bu_opterr, and bu_getopt()) as including
	  these as extern declarations will break the Windows build
	  (missing BU_EXPORT label needed to import the symbol). the header
	  already declares them, though, so just remove them. there are
	  probably a lot more of these cases.

2010-10-18 17:34  brlcad

	* [r41048] src/util/pl-tek.c:
	  remove the inlined sleep(3) declaration since it breaks the build
	  on windows (there's a sleep() macro for windows that converts to
	  Sleep()). instead, conditionally include unistd.h like should
	  have been done in the first place. also reorder args to avoid all
	  forward decls.

2010-10-18 17:24  brlcad

	* [r41047] src/libcursor/cursor.c:
	  windows compat -- check HAVE_SYS_IOCTL_H before including it.

2010-10-18 17:20  brlcad

	* [r41046] src/util/pixfade.c:
	  remove all globals

2010-10-18 17:11  brlcad

	* [r41045] NEWS, src/util/Makefile.am, src/util/query.1,
	  src/util/query.c:
	  remove the 'query' command prompt input tool. it's a specialized
	  version of 'read' (with defaults) that, while useful for
	  scripting, used SIGALRM and alarm() in its implementation making
	  it non-portable to Windows without maintenance effort. since it's
	  a burden, not in major use, and has drop-in replacements
	  available, remove it from the package.

2010-10-18 17:03  brlcad

	* [r41044] NEWS:
	  increased the optimized build performance by putting
	  LIKELY/UNLIKELY compiler hints into practice for libbu. these
	  help the compiler's branch prediction logic for optimized builds
	  for cases where an expression is nearly always true or false.
	  added to most of the checks that result in a bomb (should be very
	  unlikely) as well as a lot of function entry input sanity tests.
	  
	  tests before and after are showing a small consistent performance
	  boost of 2-5%

2010-10-18 16:55  brlcad

	* [r41043] include/bu.h, include/magic.h, src/libbu/argv.c,
	  src/libbu/avs.c, src/libbu/backtrace.c, src/libbu/badmagic.c,
	  src/libbu/basename.c, src/libbu/bitv.c, src/libbu/bomb.c,
	  src/libbu/brlcad_path.c, src/libbu/cmd.c, src/libbu/cmdhist.c,
	  src/libbu/color.c, src/libbu/convert.c, src/libbu/crashreport.c,
	  src/libbu/endian.c, src/libbu/fchmod.c, src/libbu/fgets.c,
	  src/libbu/fopen_uniq.c, src/libbu/hash.c, src/libbu/hist.c,
	  src/libbu/hook.c, src/libbu/image.c, src/libbu/linebuf.c,
	  src/libbu/list.c, src/libbu/log.c, src/libbu/malloc.c,
	  src/libbu/mappedfile.c, src/libbu/mread.c, src/libbu/parallel.c,
	  src/libbu/parse.c, src/libbu/ptbl.c, src/libbu/quote.c,
	  src/libbu/rb_delete.c, src/libbu/rb_extreme.c,
	  src/libbu/rb_insert.c, src/libbu/rb_internals.h,
	  src/libbu/rb_order_stats.c, src/libbu/rb_rotate.c,
	  src/libbu/semaphore.c, src/libbu/stat.c, src/libbu/str.c,
	  src/libbu/tcl.c, src/libbu/temp.c, src/libbu/units.c,
	  src/libbu/vfont.c, src/libbu/vlb.c, src/libbu/vls.c,
	  src/libbu/whereis.c, src/libbu/which.c:
	  put the LIKELY/UNLIKELY compiler hints into practice for libbu.
	  these help the compiler's branch prediction logic for optimized
	  builds for cases where an expression is nearly always true or
	  false. added to most of the checks that result in a bomb (should
	  be very unlikely) as well as a lot of function entry input sanity
	  tests.
	  
	  tests before and after are showing a small consistent performance
	  boost of 2-5%

2010-10-18 10:05  brlcad

	* [r41032] src/mged/menu.c:
	  remove dead code.

2010-10-18 03:18  brlcad

	* [r41031] TODO:
	  keith verified/fixed vertex fusing changes

2010-10-16 03:36  r_weiss

	* [r41015] src/librt/primitives/nmg/nmg_tri.c:
	  Changed function nmg_triangulate_fu to not call
	  nmg_s_split_touchingloops. This function causes increased
	  triangulation failures. The function nmg_triangulate_shell has
	  better success and does not call this function. More
	  investigation is needed but for now leaving out
	  nmg_s_split_touchingloops improves triangulation within the MGED
	  'ev' command. The MGED facetize command uses
	  nmg_triangulate_shell which has more success than 'ev' performing
	  triangulation.

2010-10-16 02:57  r_weiss

	* [r41014] src/libbu/malloc.c:
	  In function bu_realloc added check to insure the minimum amount
	  of memory is allocated to store a pointer. This change is
	  consistent with function _bu_alloc.

2010-10-16 02:49  r_weiss

	* [r41013] src/libbn/plane.c:
	  In function bn_isect_line3_line3, made many changes to tolerances
	  and added checks for zero magnitude vectors. Made a logic change
	  to improve detecting colinear lines. This function needs more
	  work but I believe it is working better.

2010-10-15 22:13  r_weiss

	* [r41012] src/libbn/plane.c:
	  In function bn_coplanar, removed unused variable.

2010-10-15 21:13  bob1961

	* [r41008] misc/win32-msvc8/tclsh/library/installTree.tcl,
	  misc/win32-msvc8/tkhtml/tkhtml.vcproj,
	  misc/win32-msvc8/tktable/tktable.vcproj:
	  Tktable and Tkhtml stuff now getting copied to lib.

2010-10-15 21:13  r_weiss

	* [r41007] src/libbn/plane.c:
	  Fixed some bugs in function bn_coplanar.

2010-10-15 21:05  bob1961

	* [r41006] src/archer/archer, src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Removed use of env(ARCHER_HOME).

2010-10-14 22:24  r_weiss

	* [r40995] src/libbn/plane.c:
	  Updated function bn_coplanar. Improved the algorithm, used
	  distance tolerance for testing for coplanar, used a very tight
	  tolerance (<= SMALL_FASTF) for testing for parallel. Since these
	  are planes, if they are not as close to parallel as we can
	  measure then they will intersect. Added bu_bomb for invalid
	  input. The input test will slow things down some but, for now, it
	  is better than cascade failure.

2010-10-14 21:07  r_weiss

	* [r40994] src/libbn/mat.c:
	  Updated function bn_vec_ortho. Loosened the restriction on the
	  input value and forced the function to bu_bomb if it can not
	  return a valid result. Changed a NEAR_ZERO test to use
	  SMALL_FASTF instead of SMALL.

2010-10-14 05:09  brlcad

	* [r40992] BUGS:
	  document the other problem reported gilliganu where mged hangs if
	  you put gets in a script. works now if typed in directly, but not
	  from script.

2010-10-14 04:51  brlcad

	* [r40991] src/tclscripts/mged/text.tcl:
	  we only want to stash the tcl gets command once, so make sure
	  tcl_gets isn't defined too before clobbering it.

2010-10-14 04:43  brlcad

	* [r40990] src/tclscripts/mged/text.tcl:
	  fix a bug reading from stdin within mged with gets. the gets
	  command that mged defines was trying to save the current
	  execute_cmd as execute_cmd_save but after immediately
	  creating/initializing the proc to empty. the proc has to be
	  deleted, which can be done by renaming to an empty string. this
	  bug was reported via the forums by gilliganu
	  (https://sourceforge.net/projects/brlcad/forums/forum/362509/topic/3847236)

2010-10-13 18:36  bob1961

	* [r40978] src/tclscripts/archer/tclIndex:
	  Added an entry for DataUtils::updateData

2010-10-13 18:34  bob1961

	* [r40977] src/tclscripts/archer/DataUtils.tcl:
	  Added the updateData proc for grabbing the specified attribute
	  value from _GLOBAL and applying it to the current data via
	  data_arrows, data_axes, data_labels or data_lines.

2010-10-13 17:56  brlcad

	* [r40976] src/other/tcl/generic/tclInt.h:
	  remove the common.h header. doesn't seem to be needed any more
	  (perhaps due to tcl being a proper sub-configure now) and
	  shouldn't be in here anyways.

2010-10-13 16:33  r_weiss

	* [r40974] src/librt/primitives/nmg/nmg_mk.c:
	  Within function nmg_je “nmg join edge” instead of freeing the
	  source edge inside nmg_je, the edge is marked so the calling
	  function can free the edge. The source edge does not always need
	  to be freed, it depends on if it is still referenced by something
	  else. It is necessary to only mark the edge to be freed since
	  some calling functions are checking if the edge has been freed by
	  checking if the magic is zero. These calling function are basing
	  logic on values in freed memory which is undefined. Either the
	  logic in the calling functions should be changed or do not free
	  the edge within nmg_je, let the calling function free the edge.
	  For now, let the calling function free the edge.

2010-10-13 14:35  bob1961

	* [r40973] src/tclscripts/archer/tclIndex:
	  Added entries for DataUtils::appendGlobalData and
	  DataUtils::updateGlobalData.

2010-10-13 14:33  bob1961

	* [r40972] src/tclscripts/archer/DataUtils.tcl:
	  Added the appendGlobalData proc for appending data to a specified
	  group within a specified global attribute. Note - the attribute's
	  value is a nested list of group specific data. Also added the
	  updateGlobalData proc for similarly updating a global attribute
	  from current data (i.e. data returned from calls to data_arrows,
	  data_axes, data_labels or data_lines).

2010-10-13 13:34  bob1961

	* [r40970] src/tclscripts/archer/Archer.tcl:
	  Minor tweak.

2010-10-08 23:36  brlcad

	* [r40958] misc/win32-msvc/Dll/Makefile.am:
	  supposed to be deleted...

2010-10-08 16:15  brlcad

	* [r40950] misc/Makefile.am:
	  restore missing slash

2010-10-08 15:07  brlcad

	* [r40949] misc/archlinux/Makefile.am:
	  missed removing this one with the rest

2010-10-08 15:06  brlcad

	* [r40948] configure.ac, misc/Makefile.am, misc/debian/Makefile.am,
	  misc/nsis/Makefile.am, misc/win32-msvc/Makefile.am:
	  derecursify the archlinux, debian, nsis, and win32-msvc
	  directories since they are purely extra_dist content. unroll them
	  up into misc/'s makefile.

2010-10-08 10:56  brlcad

	* [r40947] src/other/tkhtml/Makefile.am:
	  uninstall the libtool/automake products

2010-10-07 19:12  brlcad

	* [r40939] NEWS:
	  keith fixed a bug in the raytracers where they were crashing if
	  you tried to render multiple frames (e.g., via -M script). the
	  problem was freeing a scanline but not setting it to null
	  afterwards, causing it to free erroneously later.

2010-10-07 18:11  indianlarry

	* [r40937] src/rt/view.c:
	  Set variable 'scanline' to NULL after free. If not NULL 'rt'
	  would try and release a second time. Problematic when raytracing
	  multiple frames.

2010-10-07 18:02  brlcad

	* [r40936] NEWS:
	  keith and bob fixed a bug in mged where it was crashing while
	  doing a preview.

2010-10-07 17:57  brlcad

	* [r40935] src/libged/rt.c:
	  ws

2010-10-07 17:56  brlcad

	* [r40934] src/libged/rt.c:
	  if the else is wrong, there's no point in keeping it around.

2010-10-07 17:02  bob1961

	* [r40931] src/libged/rt.c:
	  Keith found a breakage while using preview (the gd_rt_cmd struct
	  was referring to memory locations that were no longer valid due
	  to a call to zap). This fixes it.

2010-10-07 15:10  brlcad

	* [r40928] src/other/tkhtml/Makefile.am:
	  missing line-continuation slash causing MISSING FROM DIST errors

2010-10-07 03:03  starseeker

	* [r40926] src/libbn/randmt.c:
	  fix use of UNUSED in trunk too.

2010-10-07 02:49  starseeker

	* [r40923] src/libbn/randmt.c:
	  Switch trunk to UNUSED as well.

2010-10-07 02:45  erikgreenwald

	* [r40921] src/libbn/randmt.c:
	  set the first element of the array, hopefully this is good enough
	  to silence the warning

2010-10-07 02:37  brlcad

	* [r40918] src/other/tkhtml/Makefile.am:
	  let the build work even if we're configured to use our own tcl/tk
	  because we need to be able to include built files in the source
	  distribution (before tcl is built).

2010-10-07 02:36  erikgreenwald

	* [r40917] src/libbn/randmt.c:
	  fix magic overflow

2010-10-07 02:32  starseeker

	* [r40916] src/libbn/randmt.c:
	  Do the commenting in the trunk too.

2010-10-06 22:33  brlcad

	* [r40908] configure.ac:
	  more support for cross-compilation. add the requisite optional
	  parameters for all AC_TRY_RUN macro calls. assume no for
	  everything except x11. x11 defaults to an assumption of yes but
	  can be disabled with a configure flag.

2010-10-06 22:16  brlcad

	* [r40907] m4/compiler.m4, m4/epsilon.m4:
	  add actions if cross-compiling so configure won't halt. the flags
	  are assumed to work if it compiled as is the sanity test.

2010-10-06 20:19  brlcad

	* [r40906] TODO:
	  render to odf/odt/odp

2010-10-06 17:05  bob1961

	* [r40905] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Removed updateToggleMode from ArcherCore.

2010-10-06 17:03  bob1961

	* [r40904] src/tclscripts/archer/tclIndex:
	  Added entries for DataUtils.

2010-10-06 14:56  brlcad

	* [r40903] src/other/tkhtml/Makefile.am:
	  technically there are two versions of the cssprop.tcl and
	  tokenlist.txt files. they are 'built' because we have to copy
	  them into the top-level, but they do exist in the src/ subdir so
	  have to list those files as extra dist

2010-10-06 14:53  brlcad

	* [r40902] misc/win32-msvc8/Makefile.am:
	  include new tktable msvc build files in the dist

2010-10-06 14:51  brlcad

	* [r40901] src/tclscripts/archer/Makefile.am:
	  include DataUtils.tcl in the dist, sort

2010-10-05 21:00  brlcad

	* [r40900] src/other/tkhtml/Makefile.am:
	  fix make clean. couldn't clean if tclsh wasn't built.. need to
	  verify distcheck succeeds.

2010-10-05 07:28  d_rossberg

	* [r40899] src/librt/bundle.c, src/librt/mkbundle.c:
	  no C99 idioms please!
	  put variable declarations to the begin of the section

2010-10-04 20:47  erikgreenwald

	* [r40898] src/libbn/randmt.c:
	  Begin wiring up the mersenne twister stuff to do multiple states
	  with serialization capabilities.

2010-10-04 14:48  bob1961

	* [r40897] src/tclscripts/archer/DataUtils.tcl:
	  Initial check-in of DataUtils.

2010-10-04 14:36  indianlarry

	* [r40896] include/raytrace.h, src/librt/bundle.c,
	  src/librt/mkbundle.c, src/rt/rtshot.c:
	  Adding bundle ray shotliner rt_shootrays() as plural version of
	  rt_shootray(). Follows design aspects of rt_shootray() with user
	  definable callbacks for bundle hit/miss functions. Also added a
	  couple of ray pattern generators rt_gen_circular_grid() and
	  rt_gen_elliptical_grid(). Added bundle capability to 'rtshot', to
	  test simply supply "-R (bundle radius in mm)" and optionally "-g
	  (bundle grid size in mm)". A "-X 0x80000000" will produce an
	  "rtshot.plot" file of the bundle that can be overlaid onto a
	  target in 'mged'. Ex:
	  rtshot -X 0x80000000 -R 25.4 -g 1 -d -0.5 -0.5 -0.7071 -a
	  -5821.27 618.726 3678.75 target.g all

2010-09-29 16:21  bob1961

	* [r40835] src/tclscripts/lib/Ged.tcl:
	  Add support for Navy to Ged::get_ged_color and
	  Ged::get_vdraw_color.

2010-09-29 11:18  brlcad

	* [r40778] src/proc-db:
	  terrain and vegItation are no more

2010-09-29 03:21  davidloman

	* [r40773] misc/debian, src/proc-db:
	  Add some build byproducts to the svn:ignore list.

2010-09-28 20:16  brlcad

	* [r40771] misc/win32-msvc8/Makefile.am:
	  terrain was renamed to wavy

2010-09-28 19:27  brlcad

	* [r40764] src/libfb/fbserv_obj.c, src/libfb/if_remote.c:
	  pkg_switches now take a fourth parameter. set to NULL.

2010-09-28 18:34  brlcad

	* [r40754] configure.ac:
	  more warnings that would be useful and interesting to enable
	  (maintenance task for later)

2010-09-28 18:13  brlcad

	* [r40747] src/fbserv/server.c:
	  quell size_t warnings, cleanup formward function decls, and check
	  pcp for nullity.

2010-09-28 17:58  brlcad

	* [r40745] src/fbserv/server.c:
	  ws indent style cleanup. add new fourth parameter to the pkg
	  switch table, setting user_data to NULL.

2010-09-28 17:42  brlcad

	* [r40743] src/librt/primitives/bot/bot.c:
	  quell verbose linux warnings. init bin values to 0, removed
	  unused vars.

2010-09-28 11:44  brlcad

	* [r40728] src/libpkg/tpkg.c:
	  data is merely sunk so no need to leverage the new user_data
	  field. init to null.

2010-09-28 11:29  brlcad

	* [r40727] include/pkg.h:
	  ws

2010-09-28 11:28  brlcad

	* [r40726] src/libpkg/pkg.c:
	  few sanity sets to NULL on the user data after we're done with it

2010-09-27 19:13  bob1961

	* [r40711] src/tclscripts/lib/Ged.tcl:
	  Modify Ged::pane_mouse_ray and Ged::pane_mouse_3dpoint to honor
	  snap-to-grid if it's on.

2010-09-27 11:37  erikgreenwald

	* [r40695] misc/win32-msvc8/adrt/adrt.vcproj:
	  woops, guess this line is important

2010-09-27 11:27  erikgreenwald

	* [r40694] misc/win32-msvc8/brlcad/brlcad.sln,
	  misc/win32-msvc8/terrain, misc/win32-msvc8/wavy,
	  misc/win32-msvc8/wavy/terrain.vcproj,
	  misc/win32-msvc8/wavy/wavy.vcproj:
	  file move of terrain to wavy (msvc did not move the file, just
	  renamed the product)

2010-09-27 11:27  erikgreenwald

	* [r40693] misc/win32-msvc8/adrt/adrt.vcproj:
	  remove additional libraries line

2010-09-27 11:17  erikgreenwald

	* [r40692] misc/win32-msvc8/terrain/terrain.vcproj:
	  Change terrain to wavy

2010-09-25 02:38  brlcad

	* [r40686] m4/Makefile.am, m4/OpenGL.m4:
	  removed macro file for searching ogl stuffs as it's still unused
	  and not likely to get wired if cmake comes online within the next
	  year.

2010-09-25 02:04  brlcad

	* [r40685] src/proc-db/Makefile.am, src/proc-db/wavy.c:
	  rename 'terrain' to 'wavy' since cmake requires unique target
	  names and there is already a terrain tool in src/util.

2010-09-25 02:02  brlcad

	* [r40684] src/proc-db/terrain.c, src/proc-db/wavy.c:
	  rename terrain.c to wavy.c since cmake requires unique target
	  names and there is already a terrain in src/util

2010-09-24 13:50  bob1961

	* [r40668] src/tclscripts/lib/Ged.tcl:
	  Added the handle_expose method to cadwidgets::Ged.

2010-09-24 13:49  bob1961

	* [r40667] src/tclscripts/lib/Legend.tcl:
	  Added a configbody for Legend::textColor.

2010-09-24 13:44  bob1961

	* [r40666] src/libtclcad/ged_obj.c:
	  Modified ged_obj.c to handle expose events a little better (i.e.
	  not refreshing if there are pending expose events).

2010-09-23 15:29  bob1961

	* [r40664] src/tclscripts/archer/Archer.tcl:
	  Minor tweaks to Archer. Added the buildOtherGeneralPreferences
	  method as a placeholder for classes inheriting from Archer to add
	  their own general preferences. Capitalized color names passed to
	  backgroundColor for consistency.

2010-09-23 15:26  bob1961

	* [r40663] src/tclscripts/archer/ArcherCore.tcl:
	  Minor tweaks to ArcherCore. Initialize mLighting to 2. Added Navy
	  to the color lineup and capitalized color names passed to
	  backgroundColor for consistency.

2010-09-23 15:04  bob1961

	* [r40662] src/libtclcad/ged_obj.c:
	  Modified libtclcad's go_faceplate routine. Should be
	  getting/setting text_color instead of line_color.

2010-09-22 18:28  bob1961

	* [r40647] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Changed the argument list for ArcherCore::backgroundColor from {r
	  g b} to {_color}.

2010-09-22 14:54  brlcad

	* [r40642] doc/README.MacOSX:
	  include a one-liner helper instruction for 64bit builds

2010-09-20 21:46  bob1961

	* [r40626] src/tclscripts/lib/Ged.tcl:
	  Added the pane_win_name method to cadwidgets::Ged.

2010-09-20 21:45  bob1961

	* [r40625] src/tclscripts/lib/Legend.tcl:
	  Added a -textColor option to cadwidgets::Legend.

2010-09-20 21:34  bob1961

	* [r40624] src/tclscripts/archer/Archer.tcl:
	  Minor tweak to Archer::saveDB

2010-09-20 21:32  bob1961

	* [r40623] src/tclscripts/archer/ArcherCore.tcl:
	  Added centerDialogOverPane method. Modify fillTreeColumns to
	  handle cases where tree nodes refer to nonexistent objects.

2010-09-20 18:08  davidloman

	* [r40615] include/pkg.h:
	  Put the user_data field at the end of the pkg_switch struct, so
	  as to be nice to code already using certain forms of array
	  initialization.

2010-09-20 17:56  davidloman

	* [r40614] include/pkg.h, src/libpkg/pkg.c:
	  Upgrade libpkg to allow for user data being passed to the
	  callback functions via the pkg_conn struct.

2010-09-20 17:38  davidloman

	* [r40613] src/other/tkhtml:
	  Added generated files to svn:ignore list.

2010-09-14 22:46  brlcad

	* [r40569] misc/Cakefile.defs, misc/Makefile.am:
	  remove the venerable Cakefile.defs file from the previous
	  cake-based build system. most of the build flags have been sorted
	  out by now that any remaining can be left in svn history.

2010-09-10 20:45  bob1961

	* [r40534] misc/win32-msvc8/tktable/tktable.vcproj:
	  Quote a few preprocessor defs for the x64 build.

2010-09-10 20:41  bob1961

	* [r40533] misc/nsis/brlcad.nsi:
	  Added a call to RequestExecutionLevel to set the execution level
	  to user to get the failed CreateShortCut calls to work. Added a
	  call to insertmacro for WordFind3X. Commented out the shortcut
	  for the Archer documentation.

2010-09-10 20:36  bob1961

	* [r40532] src/tclscripts/lib/RtControl.tcl:
	  Added special handling for Windows to replace the backslashes
	  with forward slashes before being evaluated again by Tcl in
	  RtControl::clear.

2010-09-09 17:47  bob1961

	* [r40524] src/tclscripts/archer/CombEditFrame.tcl:
	  Added a <B3-Motion> binding for the tktable's that does nothing
	  except to gobble up the event. This is to prevent bleed through
	  of this event when using the popup menu. For example, on windows
	  it was possible to traverse the popup menu items and
	  inadvertently resize a table row at the same time.

2010-09-09 17:41  bob1961

	* [r40523] src/archer/archer:
	  If on windows add a path to Tktable2.10 to the auto_path.

2010-09-09 17:37  bob1961

	* [r40522] misc/win32-msvc8/tkhtml/tkhtml.vcproj:
	  Mods to accomodate move of source files from tkhtml3 to tkhtml.

2010-09-09 17:35  bob1961

	* [r40521] misc/win32-msvc8/tclsh/library/installTree.tcl:
	  Added code to create and install tktable related files.

2010-09-09 17:32  bob1961

	* [r40520] misc/win32-msvc8/brlcad/brlcad.sln:
	  Added the tktable project. Removed the hardwired path to libadrt
	  (i.e. it was hardwired to a user's directory).

2010-09-09 17:28  bob1961

	* [r40519] misc/win32-msvc8/tktable,
	  misc/win32-msvc8/tktable/tktable.vcproj:
	  Added a project for tktable.

2010-09-09 14:44  bob1961

	* [r40513] src/librt/db_open.c:
	  On Windows, temporarily disable the section of code that sets
	  dbi_filename to a full path. This section needs more work to
	  accomodate Windows.

2010-09-08 18:50  brlcad

	* [r40506] TODO:
	  cache objects. per discussion on devel mailing list, document the
	  thoughts to date.

2010-09-03 17:58  bob1961

	* [r40450] src/tclscripts/archer/ArcherCore.tcl:
	  Mods to handle multiple instances of comb members.

2010-09-03 15:32  bob1961

	* [r40449] src/librt/db_open.c:
	  Minor tweak.

2010-09-03 15:18  bob1961

	* [r40448] src/librt/db_open.c:
	  Don't worry about resolving relative paths. If not a full path
	  then prepend the current working directory to dbi_filename.

2010-09-03 13:17  bob1961

	* [r40447] src/librt/db_open.c:
	  Modified db_open to set dbi_filename to the full path using the
	  current working directory if dirname is ".". Still need code to
	  convert all relative paths to full paths. This mod fixes the
	  recent rt failure reported by Dwayne for most cases.

2010-09-03 03:08  brlcad

	* [r40446] AUTHORS:
	  credit nikolai saika and niels horn with special thanks for their
	  work setting up brl-cad on slackware. nikolai got the initial
	  build going with 7.14.0; niels picked up maintenance from 7.16.6
	  on.

2010-09-03 03:01  brlcad

	* [r40445] HACKING:
	  notify the slackware maintainer

2010-09-02 20:23  brlcad

	* [r40440] BUGS:
	  dwayne reports that the rt* commands fail in mged on windows if
	  you change directory

2010-09-02 20:06  r_weiss

	* [r40439] src/librt/primitives/pnts/pnts.c:
	  Within function rt_pnts_ifree for the point cloud primitive, when
	  freeing the point cloud bu_list, the forward pointer was being
	  referenced after it was freed. The changes follow the conventions
	  for freeing a bu_list indicated within 'bu.h' and the function
	  bu_list_free.

2010-09-02 19:48  bob1961

	* [r40437] src/tclscripts/archer/CombEditFrame.tcl:
	  Added methods for appendRow, insertRow, deleteRow, setOperator
	  and setKeypointVC. This functionality is accessible via
	  right-click menu.

2010-09-02 15:23  brlcad

	* [r40432] src/librt/primitives/bot/bot.c:
	  avoid shadowing the c++ function, use 'deleted' instead of
	  'infinity'

2010-09-02 14:59  brlcad

	* [r40431] src/librt/primitives/bot/bot.c:
	  should be the [X] element of infinity

2010-09-02 14:37  erikgreenwald

	* [r40429] src/librt/primitives/bot/bot.c:
	  change infinity (a c++ symbol) to INFINITY (a number) for
	  subtraction...

2010-09-02 13:41  brlcad

	* [r40426] src/conv/fast4-g.c, src/libged/bot_vertex_fuse.c,
	  src/libged/importFg4Section.c, src/libged/wdb_importFg4Section.c:
	  no longer need to call rt_bot_condense() after
	  rt_bot_vertex_fuse() since the result is now guaranteed to be
	  condensed (given you want it that way anyways).

2010-09-02 13:37  brlcad

	* [r40425] src/librt/primitives/bot/bot.c:
	  document the detail that the bot data is condensed.

2010-09-02 13:37  brlcad

	* [r40424] src/librt/primitives/poly/poly.c:
	  should be no harm in calling rt_bot_face_fuse() instead of
	  reallocating the face array blindly. this may even help if there
	  are duplicate faces in the original pg data.

2010-09-02 13:31  brlcad

	* [r40423] src/librt/primitives/bot/bot.c:
	  instead of doing a cheap ass compression manually ourselves, just
	  call rt_bot_condense() which does the same thing (but butter) and
	  will even go a step further to reclaim memory. add some sanity
	  checking to make sure our bot doesn't already have vertices with
	  infinity values, and a final pass to make sure our book-keeping
	  is correct with no deleted vertices remaining after the condense.

2010-09-02 13:11  brlcad

	* [r40422] src/other/tkhtml/Makefile.am:
	  you don't put slashes on a file join, they're space-separated and
	  tcl does it's magic for the given platform

2010-09-02 13:06  brlcad

	* [r40421] BUGS:
	  menu invocation is not working again? hrm.

2010-09-02 12:33  starseeker

	* [r40420] src/other/tkhtml/Makefile.am:
	  Make same change to pkgIndex in trunk

2010-09-02 03:56  brlcad

	* [r40417] src/other/tkhtml/Makefile.am:
	  don't declare an install: rule since that will override libtool.
	  instead, let tkhtml do what it was doing with a
	  install-data-local: hook with the same deps.

2010-09-01 19:46  r_weiss

	* [r40413] src/librt/primitives/sph/sph.c:
	  Within the sph primitive corrected tolerance tests to compare
	  'tol->dist_sq' instead of 'tol->dist', improved bu_log messages
	  to correctly indicate function name.

2010-09-01 19:44  r_weiss

	* [r40412] src/librt/primitives/superell/superell.c:
	  Within the superell primitive corrected tolerance tests to
	  compare 'tol->dist_sq' instead of 'tol->dist', improved bu_log
	  messages to correctly indicate function name.

2010-09-01 18:29  brlcad

	* [r40411] TODO:
	  verify rt works on windows after the zappo re-enabling

2010-09-01 14:00  mafm

	* [r40398] misc/debian/rules:
	  Move man pages section n to another directory, as discussed in
	  the mailing list

2010-09-01 13:59  mafm

	* [r40397] misc/debian/control:
	  Preparing dependencies for when the packages are updated in
	  Debian and so BRL-CAD can use the system's installed packages

2010-09-01 13:50  mafm

	* [r40396] misc/debian/changelog:
	  Adding closing Intent To Package (ITP) bug report

2010-09-01 13:42  mafm

	* [r40395] src/vdeck/vdeck.1:
	  Changing man page section to 1 instead of 1V

2010-09-01 00:10  mafm

	* [r40394] src/tclscripts/archer/Arb4EditFrame.tcl,
	  src/tclscripts/archer/Arb5EditFrame.tcl,
	  src/tclscripts/archer/Arb6EditFrame.tcl,
	  src/tclscripts/archer/Arb7EditFrame.tcl,
	  src/tclscripts/archer/Arb8EditFrame.tcl,
	  src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl,
	  src/tclscripts/archer/CombEditFrame.tcl,
	  src/tclscripts/archer/EhyEditFrame.tcl,
	  src/tclscripts/archer/EllEditFrame.tcl,
	  src/tclscripts/archer/EpaEditFrame.tcl,
	  src/tclscripts/archer/EtoEditFrame.tcl,
	  src/tclscripts/archer/ExtrudeEditFrame.tcl,
	  src/tclscripts/archer/GeometryEditFrame.tcl,
	  src/tclscripts/archer/GripEditFrame.tcl,
	  src/tclscripts/archer/HalfEditFrame.tcl,
	  src/tclscripts/archer/HypEditFrame.tcl,
	  src/tclscripts/archer/LoadArcherLibs.tcl,
	  src/tclscripts/archer/PartEditFrame.tcl,
	  src/tclscripts/archer/Plugin.tcl,
	  src/tclscripts/archer/RhcEditFrame.tcl,
	  src/tclscripts/archer/RpcEditFrame.tcl,
	  src/tclscripts/archer/ShaderEdit.tcl,
	  src/tclscripts/archer/SphereEditFrame.tcl,
	  src/tclscripts/archer/SuperellEditFrame.tcl,
	  src/tclscripts/archer/TgcEditFrame.tcl,
	  src/tclscripts/archer/TorusEditFrame.tcl,
	  src/tclscripts/archer/Wizard.tcl,
	  src/tclscripts/archer/bgerror.tcl,
	  src/tclscripts/archer/cursor.tcl,
	  src/tclscripts/archer/pkgIndex.tcl,
	  src/tclscripts/cad_clrpick.tcl, src/tclscripts/cad_dialog.tcl,
	  src/tclscripts/chkexterns.tcl,
	  src/tclscripts/geometree/GeometryBrowser.tcl,
	  src/tclscripts/geometree/pkgIndex.tcl,
	  src/tclscripts/helpcomm.tcl, src/tclscripts/helplib.tcl,
	  src/tclscripts/hoc.tcl, src/tclscripts/html_library.tcl,
	  src/tclscripts/hv3/pkgIndex.tcl, src/tclscripts/lib/CellPlot.tcl,
	  src/tclscripts/lib/ColorEntry.tcl,
	  src/tclscripts/lib/ComboBox.tcl, src/tclscripts/lib/Command.tcl,
	  src/tclscripts/lib/Database.tcl, src/tclscripts/lib/Db.tcl,
	  src/tclscripts/lib/Display.tcl, src/tclscripts/lib/Dm.tcl,
	  src/tclscripts/lib/Drawable.tcl, src/tclscripts/lib/Ged.tcl,
	  src/tclscripts/lib/Help.tcl, src/tclscripts/lib/Legend.tcl,
	  src/tclscripts/lib/Mged.tcl,
	  src/tclscripts/lib/ModelAxesControl.tcl,
	  src/tclscripts/lib/QuadDisplay.tcl,
	  src/tclscripts/lib/RtControl.tcl, src/tclscripts/lib/Splash.tcl,
	  src/tclscripts/lib/Table.tcl, src/tclscripts/lib/TableView.tcl,
	  src/tclscripts/lib/View.tcl,
	  src/tclscripts/lib/ViewAxesControl.tcl,
	  src/tclscripts/lib/pkgIndex.tcl, src/tclscripts/libdm.tcl,
	  src/tclscripts/menu_override.tcl, src/tclscripts/mged/accel.tcl,
	  src/tclscripts/mged/adc.tcl, src/tclscripts/mged/anim.tcl,
	  src/tclscripts/mged/apply.tcl, src/tclscripts/mged/apply_mat.tcl,
	  src/tclscripts/mged/asc2g.tcl, src/tclscripts/mged/attr_edit.tcl,
	  src/tclscripts/mged/bindings.tcl,
	  src/tclscripts/mged/bot_face_select.tcl,
	  src/tclscripts/mged/build_region.tcl,
	  src/tclscripts/mged/calipers.tcl,
	  src/tclscripts/mged/callbacks.tcl, src/tclscripts/mged/clear.tcl,
	  src/tclscripts/mged/collaborate.tcl,
	  src/tclscripts/mged/color.tcl,
	  src/tclscripts/mged/color_scheme.tcl,
	  src/tclscripts/mged/comb.tcl, src/tclscripts/mged/combmenu.tcl,
	  src/tclscripts/mged/cycle.tcl,
	  src/tclscripts/mged/dbfindtree.tcl,
	  src/tclscripts/mged/dbupgrade.tcl,
	  src/tclscripts/mged/dmtype.tcl, src/tclscripts/mged/e_id.tcl,
	  src/tclscripts/mged/edit_menu.tcl,
	  src/tclscripts/mged/edit_solid.tcl,
	  src/tclscripts/mged/edit_solid_int.tcl,
	  src/tclscripts/mged/editmenu.tcl,
	  src/tclscripts/mged/editobj.tcl,
	  src/tclscripts/mged/eobjmenu.tcl,
	  src/tclscripts/mged/expand_comb.tcl,
	  src/tclscripts/mged/extract.tcl,
	  src/tclscripts/mged/facetize_all_regions.tcl,
	  src/tclscripts/mged/font.tcl, src/tclscripts/mged/g2asc.tcl,
	  src/tclscripts/mged/garbage_collect.tcl,
	  src/tclscripts/mged/grid.tcl, src/tclscripts/mged/help.tcl,
	  src/tclscripts/mged/helpdevel.tcl,
	  src/tclscripts/mged/icreate.tcl, src/tclscripts/mged/illum.tcl,
	  src/tclscripts/mged/lgt_mat.tcl, src/tclscripts/mged/list.tcl,
	  src/tclscripts/mged/make_solid.tcl, src/tclscripts/mged/man.tcl,
	  src/tclscripts/mged/menu.tcl, src/tclscripts/mged/mged.tcl,
	  src/tclscripts/mged/mgedrc.tcl, src/tclscripts/mged/mike.tcl,
	  src/tclscripts/mged/mouse.tcl, src/tclscripts/mged/muves.tcl,
	  src/tclscripts/mged/mview.tcl, src/tclscripts/mged/openw.tcl,
	  src/tclscripts/mged/overlap.tcl, src/tclscripts/mged/pattern.tcl,
	  src/tclscripts/mged/pattern_gui.tcl,
	  src/tclscripts/mged/pkgIndex.tcl, src/tclscripts/mged/plot.tcl,
	  src/tclscripts/mged/points.tcl, src/tclscripts/mged/prj_add.tcl,
	  src/tclscripts/mged/ps.tcl, src/tclscripts/mged/qray.tcl,
	  src/tclscripts/mged/ray.tcl, src/tclscripts/mged/raypick.tcl,
	  src/tclscripts/mged/reid.tcl,
	  src/tclscripts/mged/remap_mater.tcl,
	  src/tclscripts/mged/remat.tcl, src/tclscripts/mged/rt.tcl,
	  src/tclscripts/mged/rt_script.tcl,
	  src/tclscripts/mged/sample.tcl, src/tclscripts/mged/shaders.tcl,
	  src/tclscripts/mged/skt_ed.tcl, src/tclscripts/mged/solclick.tcl,
	  src/tclscripts/mged/solcreate.tcl, src/tclscripts/mged/solid.tcl,
	  src/tclscripts/mged/text.tcl, src/tclscripts/mged/titles.tcl,
	  src/tclscripts/mged/tree.tcl, src/tclscripts/mouse.tcl,
	  src/tclscripts/nirt/pkgIndex.tcl, src/tclscripts/pkgIndex.tcl,
	  src/tclscripts/pl-dm/bindings.tcl, src/tclscripts/pl-dm/help.tcl,
	  src/tclscripts/pl-dm/menu.tcl, src/tclscripts/pl-dm/pkgIndex.tcl,
	  src/tclscripts/rtwizard/RaytraceWizard.tcl,
	  src/tclscripts/rtwizard/pkgIndex.tcl,
	  src/tclscripts/sdialogs/pkgIndex.tcl,
	  src/tclscripts/sdialogs/sdialogs.tcl,
	  src/tclscripts/swidgets/pkgIndex.tcl,
	  src/tclscripts/swidgets/swidgets.tcl,
	  src/tclscripts/util/expand_int_ranges.tcl,
	  src/tclscripts/util/luniq.tcl, src/tclscripts/util/pkgIndex.tcl,
	  src/tclscripts/vmath.tcl:
	  Removed svn:executable property on the tclscripts which don't
	  start with /bin/sh, as discussed in the mailing list

2010-08-31 22:44  brlcad

	* [r40393] src/libbu/malloc.c:
	  figure out the hard way if this works on windows.. update the
	  zappo explanation comment too. if it doesn't work, need to
	  investigate why.

2010-08-31 22:37  brlcad

	* [r40392] src/libbu/malloc.c:
	  this commit could use an additional pair of eyes to make sure I
	  caught all the cases correctly, but the intent is to make 'size'
	  only refer to the object size, not the entire buffer size. this
	  way, we get the same minimum buffer protections that r_weiss
	  fixed in r40389 but allows calloc() to still be passed count and
	  size.

2010-08-31 22:12  erikgreenwald

	* [r40391] src/libbu/malloc.c:
	  uint32_t has 32 bits, not 16..

2010-08-31 22:08  brlcad

	* [r40390] src/libbu/malloc.c:
	  be more explicit about the minimum allocation size needing to be
	  big enough to fit a pointer address. also, change the vintage
	  zappo safeguard to be 32 bits explicitly all set to 1 instead of
	  casting through an int pointer set to -1. document some of the
	  reasoning for why zappo exists while we're at it.

2010-08-31 22:06  r_weiss

	* [r40389] src/libbu/malloc.c:
	  corrects bug where bu_malloc did not allocate at least
	  sizeof(int)

2010-08-31 18:00  erikgreenwald

	* [r40385] TODO:
	  reminder to look more into OpenEXR

2010-08-31 16:31  bob1961

	* [r40384] src/tclscripts/archer/ArcherCore.tcl:
	  Minor tweaks to rsyncTree.

2010-08-31 16:09  r_weiss

	* [r40383] src/librt/primitives/ell/ell.c:
	  Within function rt_ell_tess corrected the stop value for a 'for'
	  loop so that memory is not read outside array bounds. Within
	  functions rt_ell_tess, rt_ell_tnurb and rt_ell_prep corrected
	  tolerance tests to compare 'tol->dist_sq' instead of 'tol->dist',
	  improved bu_log messages to correctly indicate function name.

2010-08-31 03:17  brlcad

	* [r40381] doc/BRL-CAD.bib:
	  document the accession number

2010-08-30 18:45  erikgreenwald

	* [r40378] src/other/tktable/Makefile.in:
	  add TK_LIBS to LIBS, to snarf proper X11 link fu

2010-08-30 18:37  brlcad

	* [r40377] src/libwdb/nurb.c, src/libwdb/wdb.c:
	  remove trailing ws

2010-08-30 18:31  brlcad

	* [r40376] misc/batch-indent-region.el:
	  adjust the annoying default c-label-minimum-indentation from 1 to
	  0 so that labels are consistently aligned to the column of the
	  scope they're in. this was causing goto labels to get pushed
	  forward to column 1 in emacs 21 (fixed in later versions). also
	  make sure we don't indent namespace content as well as inline
	  functions.

2010-08-30 18:27  brlcad

	* [r40375] src/libbu/parse.c:
	  case indent consistency

2010-08-30 18:22  brlcad

	* [r40374] src/libbu/htond.c:
	  consistency. labels at level 0, not absolute [0].

2010-08-30 16:30  indianlarry

	* [r40373] src/librt/primitives/bot/bot.c:
	  fixed index error bot->vertices[i] -> bot->vertices[i*3]

2010-08-30 15:19  brlcad

	* [r40372] src/libbu/htond.c:
	  see if the problem with backslash continuation dealt with the
	  end-curly being on the same line as a statement.

2010-08-30 15:18  r_weiss

	* [r40371] include/vmath.h:
	  added underscore to macro definitions DIST_PT_PT and
	  DIST_PT_PT_SQ to reduce the chance of errors during macro
	  expansion

2010-08-30 14:51  erikgreenwald

	* [r40370] src/libbu/htond.c:
	  remove yet more extra backslashes

2010-08-30 14:30  erikgreenwald

	* [r40369] src/librt/primitives/bot/bot.c:
	  declare variable at beginning of block, not in middle

2010-08-30 14:28  erikgreenwald

	* [r40368] configure.ac:
	  add misc/debian/Makefile

2010-08-30 14:00  erikgreenwald

	* [r40367] include/vmath.h:
	  add DIST_PT_PT_SQ() to avoid sqrt if unneeded

2010-08-27 23:44  brlcad

	* [r40361] src/librt/CMakeLists.txt, src/librt/columnparse.c,
	  src/librt/comb/comb.c, src/librt/comb/db_comb.c,
	  src/librt/constraint.c, src/librt/db5_types.c,
	  src/librt/db_lookup.c, src/librt/db_tree.c, src/librt/librt.3,
	  src/librt/mater.c, src/librt/namegen.c,
	  src/librt/opennurbs_ext.cpp, src/librt/parse.c, src/librt/prep.c,
	  src/librt/primitives/arb8/arb8_brep.cpp,
	  src/librt/primitives/arbn/arbn_brep.cpp,
	  src/librt/primitives/ars/ars.c,
	  src/librt/primitives/bot/bot_brep.cpp,
	  src/librt/primitives/bot/g_bot_include.c,
	  src/librt/primitives/brep/brep.cpp,
	  src/librt/primitives/brep/brep_debug.cpp,
	  src/librt/primitives/bspline/bspline.cpp,
	  src/librt/primitives/bspline/nurb_solve.c,
	  src/librt/primitives/cline/cline.c,
	  src/librt/primitives/dsp/dsp.c,
	  src/librt/primitives/dsp/dsp_brep.cpp,
	  src/librt/primitives/ebm/ebm_brep.cpp,
	  src/librt/primitives/ehy/ehy.c,
	  src/librt/primitives/ehy/ehy_brep.cpp,
	  src/librt/primitives/ell/ell.c,
	  src/librt/primitives/ell/ell_brep.cpp,
	  src/librt/primitives/epa/epa.c,
	  src/librt/primitives/epa/epa_brep.cpp,
	  src/librt/primitives/eto/eto_brep.cpp,
	  src/librt/primitives/extrude/extrude.c,
	  src/librt/primitives/extrude/extrude_brep.cpp,
	  src/librt/primitives/half/half.c, src/librt/primitives/hf/hf.c,
	  src/librt/primitives/hyp/hyp.c,
	  src/librt/primitives/hyp/hyp_brep.cpp,
	  src/librt/primitives/nmg/nmg.c,
	  src/librt/primitives/nmg/nmg_brep.cpp,
	  src/librt/primitives/nmg/nmg_misc.c,
	  src/librt/primitives/nmg/nmg_tri_mc.c,
	  src/librt/primitives/obj_export.c,
	  src/librt/primitives/obj_import.c,
	  src/librt/primitives/pnts/pnts.c,
	  src/librt/primitives/poly/poly_brep.cpp,
	  src/librt/primitives/revolve/revolve.c,
	  src/librt/primitives/revolve/revolve_brep.cpp,
	  src/librt/primitives/rhc/rhc_brep.cpp,
	  src/librt/primitives/rpc/rpc_brep.cpp,
	  src/librt/primitives/sketch/sketch.c,
	  src/librt/primitives/sketch/sketch_brep.cpp,
	  src/librt/primitives/sph/sph.c,
	  src/librt/primitives/sph/sph_brep.cpp,
	  src/librt/primitives/table.c,
	  src/librt/primitives/tgc/tgc_brep.cpp,
	  src/librt/primitives/tor/tor.c,
	  src/librt/primitives/tor/tor_brep.cpp,
	  src/librt/primitives/vol/vol_brep.cpp, src/librt/shoot.c,
	  src/librt/vlist.c:
	  lots more ws. mostly end-of-line and indent tabbage.

2010-08-27 23:34  brlcad

	* [r40360] src/librt/Makefile.am:
	  ws

2010-08-27 23:33  brlcad

	* [r40359] TODO:
	  yeah, need to more exhaustively verify that bot_vertex_fuse
	  actually still works when there are lots of duplicate vertices..
	  the optimization is good, but needs more testing.

2010-08-27 23:32  brlcad

	* [r40358] src/librt/primitives/bot/bot.c:
	  after seeing nick waiting over an hour for a vertex fuse to
	  complete, a quick peek at the code made it quite apparent that
	  there was a possible O(n^3), or maybe O(n^2) + O(n^2), algorithm
	  being used to fuse vertices.
	  
	  this implements bin-sort space partitioning where vertices are
	  spatially grouped in one dimension into bins so that only nearby
	  vertices need to be compared. the new approach is asymptotic O(n)
	  (albeit with a heavy linear constant). the savings are proving to
	  be quite substantial with fusing 150k vertices going from 50sec
	  to 0.7sec and nick's 1.7M vertex data set going from over an hour
	  to just under 4sec.
	  
	  still need to verify that bot compression of deleted vertices is
	  working, but the iterative bin sorting is already tested along
	  with efficient minimal spatial vertex comparisons.

2010-08-27 21:40  n_reed

	* [r40357] include/raytrace.h, src/libged/bot.c,
	  src/librt/primitives/bot/bot.c,
	  src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botPropertyBox.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  more changes to boteditor interface plus some minor changes to rt
	  bot routines

2010-08-27 21:25  bob1961

	* [r40356] src/tclscripts/archer/Archer.tcl:
	  A few tweaks to get the global_undo to work better when
	  moving/renaming objects.

2010-08-27 20:06  brlcad

	* [r40355] src/libbn/plane.c:
	  bad ROT_VERT altogether. missing semicolon after VMINMAX.

2010-08-27 19:16  erikgreenwald

	* [r40354] src/libbn/plane.c:
	  rogue backslash in a macro define removed (bad ws.sh)

2010-08-27 18:47  brlcad

	* [r40353] src/libbn/list.c, src/libbn/mat.c, src/libbn/noise.c,
	  src/libbn/plane.c, src/libbn/symbol.c, src/libbn/tcl.c,
	  src/libbn/tplot.c, src/libbn/wavelet.c:
	  ws indent update

2010-08-27 18:17  brlcad

	* [r40352] src/libbu/Makefile.am, src/libbu/backtrace.c,
	  src/libbu/brlcad_path.c, src/libbu/fnmatch.c, src/libbu/image.c,
	  src/libbu/list.c, src/libbu/quote.c, src/libbu/uce-dirent.h,
	  src/libbu/vls.c:
	  more cleanup (via ws.sh) to remove trailing line ws and insert
	  embedded tabs.

2010-08-27 18:13  brlcad

	* [r40351] src/libbu/cmd.c, src/libbu/fnmatch.c,
	  src/libbu/getopt.c, src/libbu/htond.c, src/libbu/lex.c,
	  src/libbu/malloc.c, src/libbu/mappedfile.c, src/libbu/parse.c,
	  src/libbu/printb.c, src/libbu/rb_delete.c,
	  src/libbu/rb_internals.h, src/libbu/units.c:
	  testing indent.sh. minor ws indent cleanup.

2010-08-27 18:07  brlcad

	* [r40350] sh/ws.sh:
	  'echo -n' is not compliant with the posix/unix definition for
	  echo. this breaks mac 10.5+ which is now unix-compliant, so use
	  printf instead.

2010-08-27 17:55  bob1961

	* [r40349] src/tclscripts/archer/Archer.tcl:
	  Added buildInvalidObjEditView and initInvalidObjEditView. Arrange
	  to call initInvalidObjEditView from initEdit if the object in
	  question does not exist.

2010-08-27 17:53  bob1961

	* [r40348] src/tclscripts/archer/ArcherCore.tcl:
	  Modified selectTreePath to set mSelectedObj and mSelectedObjPath.

2010-08-27 15:01  bob1961

	* [r40347] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Changed refreshTree to rebuildTree and removed the optional
	  _restore parameter.

2010-08-27 14:29  bob1961

	* [r40346] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Change updateTree to updateTreeDrawLists. Add a call to
	  updateTreeDrawLists to the end of syncTree.

2010-08-27 14:19  bob1961

	* [r40344] src/tclscripts/archer/ArcherCore.tcl:
	  Minor tweaks to updateTreeTopWithName.

2010-08-26 23:40  mafm

	* [r40342] misc/Makefile.am, misc/debian, misc/debian/Makefile.am,
	  misc/debian/brlcad-bin.docs, misc/debian/brlcad-bin.install,
	  misc/debian/brlcad-bin.lintian-overrides,
	  misc/debian/brlcad-data.install, misc/debian/brlcad-dev.install,
	  misc/debian/brlcad-doc.install, misc/debian/changelog,
	  misc/debian/compat, misc/debian/control, misc/debian/copyright,
	  misc/debian/rules, misc/debian/source, misc/debian/source/format,
	  misc/debian/watch:
	  Adding Debian dir, for creating Debian packages

2010-08-26 23:28  brlcad

	* [r40341] doc/html/manuals/mged/Makefile.am,
	  doc/html/manuals/mged/mug.jpg:
	  remove the unused zero-length mug.jpg image file. thx mafm

2010-08-26 23:21  brlcad

	* [r40340] HACKING:
	  talk briefly about code smells, sacred code, and perfection under
	  the refactoring section.

2010-08-26 21:13  bob1961

	* [r40339] src/tclscripts/archer/Archer.tcl:
	  Added updateCombEditView.

2010-08-26 21:12  bob1961

	* [r40338] src/tclscripts/archer/ArcherCore.tcl:
	  A few minor tweaks.

2010-08-26 17:43  bob1961

	* [r40332] src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl:
	  Added routines for reconciling the tree view with the database.

2010-08-26 16:17  brlcad

	* [r40331] doc/README.Linux:
	  include a list of the required and optional Debian package
	  requirements

2010-08-25 16:01  brlcad

	* [r40321] configure.ac:
	  be more clear about what versions are minimally required if
	  configure is going to halt

2010-08-25 14:14  davidloman

	* [r40319] src/other/tkhtml:
	  Clay: Modified SVN:IGNORE to ignore build intermediates.

2010-08-25 13:34  brlcad

	* [r40318] src/other/tkhtml/Makefile.am:
	  build the library as a -module, so libtool will generate a
	  libTkhtml.so instead of a .dylib

2010-08-24 15:39  n_reed

	* [r40303] src/librt/primitives/bot/bot.c:
	  Fixed a bus error bug in bot_decimate's decimate_edge routine. A
	  missed edge case while updating the edge list sometimes resulted
	  in the access of a freed structure.

2010-08-22 14:37  louipc

	* [r40282] misc/archlinux/PKGBUILD:
	  archlinux: mesa required to build with opengl support

2010-08-21 00:53  brlcad

	* [r40280] src/external/ProEngineer/proe_brl.res:
	  be more precise and accurate with the GUI wording. tweak spacing
	  and be more consistent with labels. not great, but better.

2010-08-20 21:39  brlcad

	* [r40279] src/libicv/rot.c:
	  fwrite returns a size_t

2010-08-20 21:03  brlcad

	* [r40278] src/libicv/rot.c:
	  quell strict compilation failure. have to check the return value
	  of fwrite() to make sure it didn't fail.

2010-08-20 18:49  brlcad

	* [r40275] configure.ac:
	  have to pass the cflags and ldflags regardless of using system
	  zlib or our zlib

2010-08-20 18:30  brlcad

	* [r40274] configure.ac:
	  pass libpng our tested cflags and ldflags. this should help pass
	  forward our 64-bit compilation flags so libpng compiles in the
	  proper mode.

2010-08-20 18:28  brlcad

	* [r40273] configure.ac:
	  Pro/ENGINEER finally released 64-bit builds of Pro/Toolkit, so no
	  longer have to test for 32-bit

2010-08-20 17:13  brlcad

	* [r40269] src/external/Makefile.am:
	  install.doc was renamed to INSTALL.txt

2010-08-20 11:29  brlcad

	* [r40267] src/external/Makefile.am:
	  no EF_DIR or EF_FILES

2010-08-19 17:46  brlcad

	* [r40251] doc/docbook/system/mann/en/Introduction.xml,
	  src/archer/TODO, src/other/tkhtml/README,
	  src/tclscripts/mged/man.tcl:
	  drop the 3

2010-08-19 17:43  brlcad

	* [r40250] src/other/tkhtml/Makefile.am:
	  create a pkgIndex.tcl that refers to libTkhtml.so instead of the
	  versioned one from tea

2010-08-19 17:23  brlcad

	* [r40248] include/bu.h:
	  oops, unintentional commenting of bu_ptbl

2010-08-19 15:31  brlcad

	* [r40243] configure.ac, src/other/Makefile.am, src/other/tkhtml,
	  src/other/tkhtml3:
	  rename tkhtml3 to just tkhtml. including the version number on
	  directories is just a recipe for long-term maintenance burden.

2010-08-19 15:19  brlcad

	* [r40240] src/other/tkhtml3/Makefile.am:
	  just build the libtool library instead of the tea library. get
	  rid of the version.

2010-08-19 14:25  bob1961

	* [r40234] src/tclscripts/archer/Archer.tcl:
	  Follow-on mods for updating the tree view after creating new
	  combinations and changing membership of existing combinations.

2010-08-19 14:08  brlcad

	* [r40230] misc/win32-msvc8/librt/librt.vcproj:
	  remove bomb.c

2010-08-19 13:51  erikgreenwald

	* [r40229] misc/win32-msvc8/brlcad/brlcad.sln:
	  Add dependencies for libadrt

2010-08-19 13:51  d_rossberg

	* [r40228] src/librt/CMakeLists.txt:
	  synced with Makefile.am

2010-08-19 05:12  brlcad

	* [r40227] doc/deprecation.txt, include/raytrace.h,
	  misc/win32-msvc/Dll/BrlcadCore.def, src/conv/asc/g2asc.c,
	  src/conv/poly-bot.c, src/librt/db_io.c, src/mged/polyif.c,
	  src/remrt/rtsrv.c:
	  remove the deprecated db_free_external(), marked for delection
	  during the pre-7.0 days. instead callers can just use
	  bu_free_external().

2010-08-19 04:35  brlcad

	* [r40226] TODO, doc/deprecation.txt:
	  the 'hf' primitive doesn't get characterized under normal
	  deprecation due process because it would break fileysstem
	  compatibility to fully remove it. although announced in 6.0 and
	  should be fair game, add it to the list for 8.0 instead.

2010-08-19 04:30  brlcad

	* [r40225] doc/deprecation.txt, include/wdb.h:
	  remove the deprecated mk_fastgen_region() interface. recorded as
	  deprecated in pre 7.0, and even more explicitly in 7.12, so it
	  can now be marked obsolete and removed.

2010-08-19 04:11  brlcad

	* [r40224] configure.ac, src/external/EndgameFramework,
	  src/external/Makefile.am:
	  remove the endgame framework placeholder. never got written
	  affirmation on making the sources publicly available.
	  unresponsive to inquiry. can be readded if the topic or need
	  resurfaces.

2010-08-19 03:59  brlcad

	* [r40223] doc/deprecation.txt, src/librt/Makefile.am,
	  src/librt/bomb.c:
	  remove bomb.c, provider of the old rt_bomb() interface.
	  deprecated in 7.10, now obsolete.

2010-08-19 03:57  brlcad

	* [r40222] doc/deprecation.txt:
	  move machine.h and vas4 to obsolete status.

2010-08-19 03:56  brlcad

	* [r40221] include/Makefile.am, include/bu.h, include/machine.h:
	  finally remove the venerable machine.h, deprecated back in 7.10

2010-08-19 03:54  brlcad

	* [r40220] configure.ac, src/Makefile.am, src/vas4:
	  remove the obsolete vas4 tools (deprecated 7.12) for the 7.18
	  release. yay, the system works.

2010-08-19 03:51  brlcad

	* [r40219] src/libbn/Makefile.am, src/libbn/plot3.c,
	  src/libbn/plot3.doc:
	  get rid of the unnecessary plot3.doc file. it merely summarizes
	  command letters with their actions in a tabular format so you can
	  see what option letters remain available for use. move it into a
	  comment in the source code.

2010-08-19 03:46  brlcad

	* [r40218] src/fbed/Makefile.am, src/fbed/font.doc:
	  remove obsolete documentation about bsd vfont fonts

2010-08-19 03:44  brlcad

	* [r40217] src/external/ProEngineer/INSTALL.txt,
	  src/external/ProEngineer/Makefile.am,
	  src/external/ProEngineer/install.doc:
	  rename install.doc to INSTALL.txt to be consistent with naming
	  conventions and not be confused as to whether this is an msword
	  document.

2010-08-19 03:42  brlcad

	* [r40216] src/external/ProEngineer/install.doc:
	  reword cleanup, reorder to make more sense (make sure they
	  install before talking to them about how to use it). consistently
	  use the product's official name.

2010-08-18 21:17  brlcad

	* [r40211] src/external/ProEngineer/install.doc:
	  line 5 of 2

2010-08-18 20:09  bob1961

	* [r40209] src/libtclcad/ged_obj.c:
	  Need to refresh after removing comb members.

2010-08-18 20:07  bob1961

	* [r40208] src/libged/remove.c:
	  Items that are removed from a combination also need to be removed
	  from the display.

2010-08-18 18:42  bob1961

	* [r40203] src/libged/kill.c, src/libged/killall.c,
	  src/libged/killrefs.c:
	  Added check for drawable.

2010-08-18 18:41  bob1961

	* [r40202] src/libged/region.c:
	  Update usage message for the r command.

2010-08-18 17:30  brlcad

	* [r40200] HACKING:
	  few more folks to notify during a source or binary release. added
	  freebsd, gentoo, and debian.

2010-08-17 22:00  erikgreenwald

	* [r40195] misc/win32-msvc8/libged/libged.vcproj:
	  add bot.c

2010-08-17 21:52  erikgreenwald

	* [r40194] misc/win32-msvc8/brlcad/brlcad.sln:
	  add adrt to solution

2010-08-17 20:05  r_weiss

	* [r40191] src/conv/iges/revolve.c:
	  fixed bug where structures were referenced after freed

2010-08-17 19:52  r_weiss

	* [r40190] src/conv/iges/trimsurf.c:
	  added missing fourth parameter

2010-08-17 19:40  r_weiss

	* [r40188] src/conv/iges/trimsurf.c:
	  since myhit is used as a bu_list it needs to be initialized,
	  prevents possible problem of referencing uninitialized forward
	  pointer in bu_list structure

2010-08-17 19:23  r_weiss

	* [r40187] src/librt/primitives/bspline/nurb_norm.c:
	  fixed typo bug in function rt_nurb_s_norm, references u.knots but
	  should reference v.knots

2010-08-13 20:52  n_reed

	* [r40160] src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  disabling buttons during execution; providing status line
	  feedback

2010-08-13 20:03  bob1961

	* [r40158] src/libged/inside.c, src/libged/typein.c:
	  Return the name of the new object if everything's OK.

2010-08-13 20:01  bob1961

	* [r40157] src/tclscripts/archer/Archer.tcl:
	  These mods are the beginnings of updating the tree view
	  surgically instead of regenerating the entire thing after some
	  edit. This will payoff when the trees get huge. Much more to
	  follow ...

2010-08-13 19:46  bob1961

	* [r40156] src/tclscripts/archer/ArcherCore.tcl:
	  Modified how the fillTree and handleTreeOpen methods add
	  placeholders. Added new methods: treeNodeHasBeenOpened,
	  treeNodeIsOpen and purgeNodeData.

2010-08-12 21:10  n_reed

	* [r40148] src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  implemented interface to bot_decimate; improved interface
	  behavior

2010-08-12 20:48  brlcad

	* [r40147] src/other/tkhtml3/Makefile.am:
	  tweaks to make distcheck work. need to look in srcdir for include
	  files for the built sources that are packed into the dist.

2010-08-12 20:01  brlcad

	* [r40144] src/other/tkhtml3/Makefile.am:
	  and with this tiny tweak, we can eliminate the triple object
	  compilation (once pic for tea, then pic+nonpic for the libtool
	  library). we don't actually need to build the nil library, we
	  just need the convenient object rules that it provides so that
	  the tea lib can build. does the trick nicely, though switching
	  off tea to libtool may be desirable down the road as takeover
	  continues.

2010-08-12 19:58  brlcad

	* [r40143] src/other/tkhtml3:
	  don't ignore the generated sources. they're not products, so they
	  indicate an unclean build.

2010-08-12 19:56  brlcad

	* [r40142] src/other/tkhtml3/Makefile.am:
	  rework the logic so that cssprop.c is not half-hazardly being
	  dropped into . or src/. depending on the mood of build fairies.
	  get rid of the horrible VPATH causing most of the problems. this
	  allows the built source rules to actually work by letting them
	  find their resources. add a nil libtool library for testing and
	  with that, we can get rid of all the .o rules. still need to
	  manually specify that all of the sources are dependent on
	  cssprop.h so that parallel make will work. this seems to do the
	  trick for a straight up build (but now compiles object files in
	  triplicate).

2010-08-12 19:53  brlcad

	* [r40141] src/other/tkhtml3/configure.ac:
	  sort so we match the Makefile.am

2010-08-12 19:52  brlcad

	* [r40140] src/other/tkhtml3/src/mkdefaultstyle.tcl:
	  quirks and *.c are not special

2010-08-12 17:58  brlcad

	* [r40137] src/other/tkhtml3/tclconfig:
	  ignore depcomp

2010-08-12 05:15  brlcad

	* [r40128] NEWS:
	  first to get added, nick reed added a new 'bot' command that
	  looks up and reports on current BoT parameters

2010-08-12 05:12  brlcad

	* [r40127] NEWS:
	  rob shinn wrote a small patch to allow the status bar to be
	  toggled on/off via the .mgedrc; applied and verified by louipc.
	  awesome.

2010-08-12 04:22  louipc

	* [r40126] AUTHORS:
	  AUTHORS: Credit Rob Shinn

2010-08-12 04:03  louipc

	* [r40125] src/tclscripts/mged/mgedrc.tcl,
	  src/tclscripts/mged/openw.tcl:
	  mged: Add config option to turn off statusbar.
	  
	  http://sourceforge.net/mailarchive/forum.php?thread_name=20100416011410.GD8231%40lynn&forum_name=brlcad-devel
	  
	  From: Rob Shinn <rob.shinn@gmail.com>
	  Date: Wed, 14 Apr 2010 23:47:41 -0400
	  Subject: [brlcad-devel] mged_default(status_bar)
	  
	  I needed a .mgedrc option to turn on and off the status bar
	  because I
	  prefer the faceplate (F7) to the status bar at the bottom since
	  it
	  provides quick vertex coordinates for the currently-selected
	  object
	  (primitive or region/combination) and the status bar doesn't.

2010-08-11 23:54  brlcad

	* [r40121] src/librt/primitives/bspline/bspline_mirror.c,
	  src/librt/primitives/bspline/nurb_basis.c,
	  src/librt/primitives/bspline/nurb_bezier.c,
	  src/librt/primitives/bspline/nurb_bound.c,
	  src/librt/primitives/bspline/nurb_c2.c,
	  src/librt/primitives/bspline/nurb_copy.c,
	  src/librt/primitives/bspline/nurb_diff.c,
	  src/librt/primitives/bspline/nurb_eval.c,
	  src/librt/primitives/bspline/nurb_flat.c,
	  src/librt/primitives/bspline/nurb_interp.c,
	  src/librt/primitives/bspline/nurb_knot.c,
	  src/librt/primitives/bspline/nurb_norm.c,
	  src/librt/primitives/bspline/nurb_plot.c,
	  src/librt/primitives/bspline/nurb_poly.c,
	  src/librt/primitives/bspline/nurb_ray.c,
	  src/librt/primitives/bspline/nurb_refine.c,
	  src/librt/primitives/bspline/nurb_reverse.c,
	  src/librt/primitives/bspline/nurb_solve.c,
	  src/librt/primitives/bspline/nurb_split.c,
	  src/librt/primitives/bspline/nurb_tess.c,
	  src/librt/primitives/bspline/nurb_trim.c,
	  src/librt/primitives/bspline/nurb_trim_util.c,
	  src/librt/primitives/bspline/nurb_util.c,
	  src/librt/primitives/bspline/nurb_xsplit.c:
	  ws indent style cleanup along with doxygen comment conversion.

2010-08-11 23:35  brlcad

	* [r40120] Makefile.am:
	  need to capture all the numbers of the triplet, not just the
	  first digit otherwise it'll just keep expanding the number out
	  like 7.16.10000

2010-08-11 21:28  n_reed

	* [r40116] src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botPropertyBox.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  bot editor interface improvements; updating property info when
	  commands are run

2010-08-11 21:20  r_weiss

	* [r40115] src/librt/primitives/bspline/nurb_eval.c:
	  added bu_bomb to catch possible invalid index returning from
	  function rt_nurb_knot_index

2010-08-11 21:08  r_weiss

	* [r40114] src/librt/primitives/bspline/nurb_eval.c:
	  added bu_bomb to catch possible invalid index returning from
	  function rt_nurb_knot_index

2010-08-11 14:09  bob1961

	* [r40104] src/tclscripts/archer/CombEditFrame.tcl:
	  Activate the old membership view and tie it to the apply/reset
	  buttons.

2010-08-11 13:52  bob1961

	* [r40102] src/tclscripts/archer/ArcherCore.tcl:
	  Membership operator was missing for leaves.

2010-08-11 13:38  d_rossberg

	* [r40100] src/libged/CMakeLists.txt:
	  synced with Makefile.am

2010-08-11 13:37  d_rossberg

	* [r40099] src/libged/bot.c, src/librt/primitives/bot/bot.c:
	  some compilers (as MSVC 2008) do not like these C99 idioms
	  put variable declarations to the begin of the section

2010-08-10 20:27  n_reed

	* [r40093] include/ged.h, include/raytrace.h,
	  src/libged/Makefile.am, src/libged/bot.c,
	  src/librt/primitives/bot/bot.c, src/libtclcad/ged_obj.c,
	  src/mged/setup.c, src/tclscripts/archer/Archer.tcl,
	  src/tclscripts/archer/ArcherCore.tcl,
	  src/tclscripts/archer/BotUtility.tcl,
	  src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botPropertyBox.tcl,
	  src/tclscripts/boteditor/botTools.tcl,
	  src/tclscripts/lib/Ged.tcl:
	  added ged command "bot" for accessing bot properties; now
	  BotEditor can run in either MGED or Archer

2010-08-10 17:32  starseeker

	* [r40084] BUGS:
	  Hmm. Copy/paste may have problems on Windows Vista?

2010-08-10 15:31  brlcad

	* [r40082] src/tclscripts/helplib.tcl:
	  tweak output, space after path

2010-08-09 13:01  davidloman

	* [r40046] doc/docbook/system/man5/en:
	  Ignoring build by-products in /docs

2010-08-09 13:00  davidloman

	* [r40045] src/gtools, src/other/libpng, src/other/tktable,
	  src/proc-db, src/util:
	  Ignoring build yet more by-products, wrapping up a bunch of
	  ignores different dirs into one commit.... to KISS.

2010-08-09 12:54  davidloman

	* [r40044] src/librt:
	  Ignoring build more by-products, this time namegen and parsetest
	  in src/librt

2010-08-09 12:50  davidloman

	* [r40043] src/libicv:
	  Ignoring build by-products: Adding .deps/ .libs/ 'Makefile' and
	  'Makefile.in' to svn:ignore.

2010-08-06 21:06  n_reed

	* [r40027] src/tclscripts/archer/BotUtility.tcl,
	  src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  working button commands in bot editor plus minor interface
	  changes

2010-08-05 21:19  n_reed

	* [r40018] src/tclscripts/boteditor/botEditor.tcl:
	  added exit confirmation dialogs to bot editor

2010-08-05 12:12  brlcad

	* [r40015] HACKING:
	  instead of whoami, try to use the auth files directly. look for
	  any sourceforge entry and use that username. echo the results.

2010-08-05 11:55  brlcad

	* [r40014] HACKING:
	  so quotes on the mkdir call are particularly necessary, otherwise
	  it creates the wrong directory. while we're at it, make it so
	  that the instructions really can be just copy-pasted without
	  edits (even though SFUSERNAME will probably have to be set
	  manually).

2010-08-05 11:39  brlcad

	* [r40013] NEWS, README, include/conf/MINOR, include/conf/PATCH:
	  release is tagged, bumping revisions. next release is a minor, so
	  let the good times roll on in again.

2010-08-04 20:36  n_reed

	* [r40007] src/tclscripts/boteditor/botEditor.tcl,
	  src/tclscripts/boteditor/botPropertyBox.tcl,
	  src/tclscripts/boteditor/botTools.tcl:
	  changed layout and reorganized code for bot editor

2010-08-04 13:02  starseeker

	* [r40005] NEWS:
	  Whoopsie - nirt in MGED is definitely user visible...

2010-08-04 12:52  erikgreenwald

	* [r40004] NEWS:
	  place rt/png in the right place

2010-08-04 12:17  erikgreenwald

	* [r40003] NEWS:
	  mention rt/png

2010-08-04 11:46  brlcad

	* [r40002] NEWS:
	  wow, of all the things to forget to bump, set the right release
	  date. at least the multiple review process is working.

