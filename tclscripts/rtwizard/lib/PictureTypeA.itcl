#
# PictureTypeA.itcl
#
# This class defines the process necessary to build a BRL-CAD
# picture of Type "A". This is a simple full-color rendering, e.g.
# rt with the Phong shader.
#

#
# Required packages
#
package require Itcl
package require Itk
package require Iwidgets

namespace eval RtWizard {
  
    package require PictureTypeBase 1.0
    package provide PictureTypeA 1.0

    #
    # Required packages
    #

    # None!

    #
    # The PictureTypeA class supports a simple Phong-shaded image.
    # Note that all public methods are specified in the abstract 
    # base class.
    #
    ::itcl::class PictureTypeA {
	inherit ::RtWizard::PictureTypeBase

	public {
	    constructor {args} {
		PictureTypeBase::constructor $args
	    } {}
	    
	    #
	    # Methods that impliment abstract base class methods.
	    # Unfortunately, I have to redeclare them here. 
	    #
	    method activate {}
	    method deactivate {}
	    method preview {}
	    method fullSize {}
	}

	private {
	    variable fcp
	}
    }

    #--------------------#
    #   Public Methods   #
    #--------------------#    
    #
    #
    # activate - called when this picture type is selected.
    #
    itcl::body PictureTypeA::activate { } {
	#
	# Open a new steps menu
	#
	$::wizardInstance openSteps

	#
	# Update the introductory text
	#
	$::introInstance configure -greeting "$introText"

	#
	# Activate the pages that are necessary for this picture
	# type.
	#
	set fcp [$::wizardInstance enable fullColor]
	[$fcp component useMe] select
    }

    #
    # deactivate - called when this picture type is deselected.
    #
    itcl::body PictureTypeA::deactivate { } {
	#
	# Deactivate the pages.
	#
	$::wizardInstance disable fullColor

	#
	# Close the current steps menu
	#
	$::wizardInstance closeSteps
    }

    #
    # preview - generates a 1/4 size preview image, limited to on-screen
    #
    itcl::body PictureTypeA::preview { } {
	#
	# get height and width
	#
	set w [$::fbp getWidth]
	set w2 [ expr $w / 2 ]

	set h [$::fbp getHeight]
	set h2 [ expr $h / 2 ]

	#	
	# get a framebuffer
	#
	set fb [$::fbp getFrameBuffer $w2 $h2 true]

	#
	# Run rt
	#
	rtCmd $fcp $fb $w2 $h2

    }    
    
    #
    # fullSize - generates a fullSize picture.
    #
    itcl::body PictureTypeA::fullSize { } {
	#
	# get height and width
	#
	set w [$::fbp getWidth]
	set h [$::fbp getHeight]

	#	
	# get a framebuffer
	#
	set fb [$::fbp getFrameBuffer $w $h]

	#
	# Run rt
	#
	rtCmd $fcp $fb $w $h
    }



}; # end namespace











