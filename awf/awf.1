.\" Some of the stuff in this file is a bit contorted, because it's also
.\" the regression-test input.
.nr ES 5n
.de ES
.PP
.in +\\n(ESu
.nf
..
.de EE
.in -\\n(ESu
.fi
.PP
..
.de PT
.ie \\n(.$>1 .TP "\\$2"
.el .TP
.ie !'\\$1'' \\$1
.el \(bu
..
.ds Nr \fInroff\fR
.TH AWF 1 "13 July 1990"
.BY "U of Toronto"
.SH NAME
awf \- amazingly workable (text) formatter
.SH SYNOPSIS
.B awf
.BI \-m acros
[ file ] ...
.SH DESCRIPTION
.if t .tm OOPS -- AWF THINKS IT'S TROFF!!!
.I Awf
formats the text from the input \fIfile\fR(s)
(standard input if none)
in an imitation of
\*(Nr's style with the \fB\-man\fR or \fB\-ms\fR macro packages.
The
.BI \-m acro
option is mandatory and must be `\-man' or `\-ms'.
.PP
.I Awf
implements the following raw \*(Nr requests:
.LP
	.\e"	.ce	.fi	.in	.ne	.pl	.sp
	.ad	.de	.ft	.it	.nf	.po	.ta
	.bp	.ds	.ie	.ll	.nr	.ps	.ti
	.br	.el	.if	.na	.ns	.rs	.tm
.LP
and the following in-text codes:
.ES
\e$	\e%	\e*	\ec	\ef	\en	\es
.EE
plus the full list of \*(Nr/\c
.I troff
special characters in
the original V7 \fItroff\fR manual.
.PP
Many restrictions are present; the behavior in general is a subset of
\*(Nr's.  Of particular note are the following:
.IP \(bu 2
Point sizes do not exist;
.B .ps
and
.B \es
are ignored.
.PT
Conditionals implement only numeric comparisons on
.BR \en(.$ ,
string com\%par\%isons between a macro parameter and a literal,
and
.B n
(always true)
and
.BR t
(always false).
.PT
The implementation of strings is generally primitive.
.IP \(bu
Expressions in (e.g.)\&
.B .sp
are fairly general, but the
.BR | ,
.BR & ,
and
.BR :\&
operators do not exist, and the implementation of
.B \ew
requires that quote (') be used as the delimiter and
simply counts the characters inside (so that, e.g.,
\ew'\e(bu'
equals 4).
.P
White space at the beginning of lines,
and imbedded white space within lines, is dealt with properly.
Sentence terminators at ends of lines are understood to imply
extra space afterward in filled lines.
Tabs are im\%plemented crudely and not quite correctly, although
in most cases they work as expected.
Hyphenation is done only at explicit hyphens, em-dashes, and \*(Nr
discretionary hyphens.
.SH "MAN MACROS"
The
.B \-man
macro set implements the full V7 manual macros,
plus a few semi-random oddballs.
The full list is:
.ES
\&.B	.DT	.IP	.P	.RE	.SM
\&.BI	.HP	.IR	.PD	.RI	.TH
\&.BR	.I	.LP	.PP	.RS	.TP
\&.BY	.IB	.NB	.RB	.SH	.UC
.EE
.B .BY
and
.B .NB
each take a single string argument (respectively, an indi\%cation of
authorship and a note about the status of the manual page) and arrange
to place it in the page footer.
.SH "MS MACROS"
The
.B \-ms
macro set is a substantial subset of the V7 manuscript macros.
The implemented macros are:
.ES
\&.AB	.CD	.ID	.ND	.QP	.RS	.UL
\&.AE	.DA	.IP	.NH	.QS	.SH	.UX
\&.AI	.DE	.LD	.NL	.R	.SM
\&.AU	.DS	.LG	.PP	.RE	.TL
\&.B	.I	.LP	.QE	.RP	.TP
.EE
Size changes are recognized but ignored, as are
.B .RP
and
.BR .ND .
.B .UL
just prints its argument in italics.
.BR .DS / .DE
does not do a keep,
nor do any of the other macros that normally imply keeps.
.PP
Assignments to the header/footer string variables are recognized and
implemented, but there is otherwise no control over header/footer
formatting.
The
.B DY
string variable is available.
The
.BR PD ,
.BR PI ,
and
.BR LL
number registers exist and can be changed.
.SH OUTPUT
The only output format supported by
.IR awf ,
in its distributed form,
is that appropriate to a dumb terminal,
using overprinting for italics (via underlining) and bold.
The \*(Nr special characters are printed as some vague approximation
(it's sometimes very vague) to their correct appearance.
.PP
.IR Awf 's
knowledge of the output device is established by a device file,
which is read before the user's input.
It is sought in
.IR awf 's
library directory, first as
.BI dev. term
(where \fIterm\fR is the value of the TERM environment variable)
and, failing that, as
.BR dev.dumb .
The device file
uses special internal commands
to set up resolution, special characters, fonts, etc.,
and more normal \*(Nr commands to set up page length etc.
.SH FILES
All in \fI/usr/lib/awf\fR (this can be overridden by the AWFLIB
environment variable):

.ta \w'pass2.base'u+((3n-1n)/2u)
.nf
common	common device-independent initialization
dev.*	device-specific initialization
mac.m*	macro packages
pass1	macro substituter
pass2.base	central formatter
pass2.m*	macro-package-specific bits of formatter
pass3	line and page composer
.SH SEE ALSO
awk(1), nroff(1), man(7), ms(7)
.SH DIAGNOSTICS
.na
Unlike
.IR nroff ,
.I awf
complains whenever it sees unknown commands and macros.
All diagnostics (these and some internal ones) appear on standard error
at the end of the run.
.ad
.SH HISTORY
Written at University of Toronto by Henry Spencer,
more or less as a supplement to the C News project.
.LP
.ce 99
\(rh None of the above really want to admit it. \(lh
.ce 0
.SH BUGS
There are plenty, but what do you expect for a text formatter
written entirely in (old) \fIawk\fR?
.PP
The
.B \-ms
stuff has not been checked out very thoroughly.
