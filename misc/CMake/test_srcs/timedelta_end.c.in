#include <time.h>
#include <math.h>
#include <stdio.h>
int main(void) {
  FILE *infp = NULL;
  FILE *outfp = NULL;
  time_t t, ts, te;
  struct tm *currenttime;
  struct tm starttime;
  double tdiff, d_mins, d_hrs, d_days;
  t = time(NULL);
  currenttime = localtime(&t);
  infp = fopen("${DELTA_START}", "r");
  outfp = fopen("${DELTA_END}", "w");
  if(!fscanf(infp, "%d/%d/%d/%d/%d/%d/%d/%d/%d", &(starttime.tm_sec), &(starttime.tm_min), &(starttime.tm_hour), &(starttime.tm_mday), &(starttime.tm_mon), &(starttime.tm_year), &(starttime.tm_wday), &(starttime.tm_yday), &(starttime.tm_isdst)))
    printf("scan error\n");
  fclose(infp);

  ts = mktime(&starttime);
  te = mktime(currenttime);

  tdiff = difftime(te, ts);
  d_days = 0;
  d_hrs = 0;
  d_mins = 0;
  if (tdiff > 86400) {/* get days */
     d_days = tdiff / 86400;
     tdiff = fmod(tdiff, 86400.0);
  }
  if (tdiff > 3600) { /* get hours */
     d_hrs = tdiff / 3600;
     tdiff = fmod(tdiff, 3600.0);
  }
  if (tdiff > 60) {  /* get minutes */
     d_mins = tdiff / 60;
     tdiff = fmod(tdiff, 60.0);
  }
  if (d_days > 0) {
     if (d_days >= 1) {
        fprintf(outfp,"%.0f day ", d_days);
     } else {
        fprintf(outfp,"%.0f days ", d_days);
     }
  }
  if (d_hrs> 0) {
     if (d_hrs >= 1) {
        fprintf(outfp,"%.0f hour ", d_hrs);
     } else {
        fprintf(outfp,"%.0f hours ", d_hrs);
     }
  }
  if (d_mins > 0) {
     if (d_mins >= 1) {
        fprintf(outfp,"%.0f minute ", d_mins);
     } else {
        fprintf(outfp,"%.0f minutes ", d_mins);
     }
  }
  if (tdiff > 0) {
     if (tdiff < 1.5 && tdiff >= 0.5) {
        fprintf(outfp,"%.0f second ", tdiff);
     } else {
	if (tdiff >= 1.5)
	   fprintf(outfp,"%.0f seconds ", tdiff);
     }
  }

  if (tdiff < 0.5 && d_mins < 1 && d_hrs < 1 && d_days < 1) {
     fprintf(outfp,"0 seconds ");
  }

  fclose(outfp);
  return 0;
}
