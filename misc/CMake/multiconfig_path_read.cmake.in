#  M U L T I C O N F I G _ P A T H _ R E A D . C M A K E . I N
# BRL-CAD
#
# Copyright (c) 2012-2021 United States Government as represented by
# the U.S. Army Research Laboratory.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials provided
# with the distribution.
#
# 3. The name of the author may not be used to endorse or promote
# products derived from this software without specific prior written
# permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
###
file(GLOB ALL_FILES "@CMAKE_BINARY_DIR@/CMakeTmp/CURRENT_PATH/*")
foreach(foundfile ${ALL_FILES})
  if(NOT "${foundfile}" MATCHES "rule$")
    get_filename_component(BUILD_TYPE "${foundfile}" NAME)
  endif(NOT "${foundfile}" MATCHES "rule$")
endforeach(foundfile ${ALL_FILES})

# For Debug and Release builds, obey the standard BRL-CAD
# install directory naming convention
if("${BUILD_TYPE}" STREQUAL "Debug")
  set(BUILD_TYPE_NEW "dev")
endif("${BUILD_TYPE}" STREQUAL "Debug")
if("${BUILD_TYPE}" STREQUAL "Release")
  set(BUILD_TYPE_NEW "rel")
endif("${BUILD_TYPE}" STREQUAL "Release")
if(NOT BUILD_TYPE_NEW)
  set(BUILD_TYPE_NEW "${BUILD_TYPE}")
endif(NOT BUILD_TYPE_NEW)

# We have no way to tell the build tool at build time what string we want
# it to use for the installation path - it only knows its build configuration
# type.  Hence, we update the cmake_install.cmake files to let them know
# directly.

file(GLOB_RECURSE ALL_CMAKE_INSTALL_FILES "cmake_install.cmake")
foreach(cmake_install_file ${ALL_CMAKE_INSTALL_FILES})

  # We need to work with the original state of the cmake_install.cmake file
  # for consistency, so stash a copy if we haven't already done so.
  if(EXISTS "${cmake_install_file}.orig")
    file(READ "${cmake_install_file}.orig" OLD_INSTALL_CONTENTS)
  else(EXISTS "${cmake_install_file}.orig")
    file(READ "${cmake_install_file}" OLD_INSTALL_CONTENTS)
    file(WRITE "${cmake_install_file}.orig" "\n${OLD_INSTALL_CONTENTS}")
  endif(EXISTS "${cmake_install_file}.orig")

  # Remove the obsolete previous state
  file(REMOVE "${cmake_install_file}")

  # Replace the original cmake_install contents with config specific info
  set(INSTALL_CONTENTS "${OLD_INSTALL_CONTENTS}")
  string(REPLACE "$<CONFIG>/" "${BUILD_TYPE}/" INSTALL_CONTENTS "${INSTALL_CONTENTS}")
  string(REPLACE "$<CONFIG>" "${BUILD_TYPE}" INSTALL_CONTENTS "${INSTALL_CONTENTS}")
  string(REPLACE "\${CONFIGURATION}/" "${BUILD_TYPE}/" INSTALL_CONTENTS "${INSTALL_CONTENTS}")
  string(REPLACE "\${CONFIGURATION}" "${BUILD_TYPE}" INSTALL_CONTENTS "${INSTALL_CONTENTS}")
  string(REPLACE "@BUILD_TYPE_KEY@" "${BUILD_TYPE_NEW}" INSTALL_CONTENTS "${INSTALL_CONTENTS}")
  file(WRITE "${cmake_install_file}" "${INSTALL_CONTENTS}\n")

endforeach(cmake_install_file ${ALL_CMAKE_INSTALL_FILES})

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8
