.TH ANIM_OFFSET 1 BRL/CAD
.SH NAME
anim_offset - create an animation table for an object rigidly attached to
another object.
.SH SYNOPSIS
.B anim_offset 
.B -o # # # 
.B [-r] 
.B < in.table 
.B > out.table
.SH DESCRIPTION
This filter operates on animation tables of the type used by
.I tabsub
and 
.I anim_script.
Given a table specifying the position and
orientation of one object at every applicable time, 
.I anim_offset
calculates
the position of another object which is rigidly attached to it. 
.PP
The columns of the input table should be time, three columns of
position, followed by yaw, pitch, and roll. The output will be
normally be a four-column file specifying time and position. If the 
.B -r
option is used, the output is a seven-column file in which the last
three columns are copies of the orientation information from the input
file.
.PP
The position of the object relative to the rigid body should be
given on the command line in the order x, y, z, with the 
.B -o # # #
option. These offset values
should be as measured from the centroid of the rigid  body.
.SH EXAMPLES
This filter could be used, for example, to do an animation where
the camera is placed inside a moving vehicle. 
.PP
Suppose that truck.table contains the desired position of the
center of the front axle of the truck as well as its orientation at each
time. One row of the table might look like this:
.nf

35.2	12450	-140	600	90.0 	0.0	0.0

.fi
Thus 35.2 seconds into the animation, the center of the front axle will
be at (12450, -140, 600), and the truck will be pointed in the positive
y direction. (yaw = 90).
.PP
Now, suppose we want the camera to ride along in the cab, above
and behind the front axle and somewhat to the left. To specify this
offset, we use the coordinate frame of the truck, with the origin at the
center of the front axle, the x-axis to the front, y to the left, and z
pointing up. Let the exact offset from the axle to the desired camera
position in this case be (-600, 900, 1200), in units of mm. Now we use
the routine:
.nf

anim_offset -o -600 900 1200 < truck.table > camera.table

.fi
The result is a four-column table giving the desired position of the
virtual camera at each time. The row corresponding to the sample row
above would be:
.nf

35.2	11550	-740	1800

.fi
With the 
.B -r 
option, the output would have been:
.nf

35.2	11550	-740	1800	90.0 	0.0	0.0

.fi
Now 
.I tabsub 
and/or 
.I anim_script 
can be used to process these two animation
tables into an animation script.
.SH BUGS
	The program will only use orientations specified as yaw,
pitch, and roll. You can get around this using 
.IR anim_orient ,
which converts between different orientation representations.
.SH AUTHOR
Carl J. Nuzman
.SH COPYRIGHT
	This software is Copyright (C) 1993-2004 by the United States Army
in all countries except the USA.  All rights reserved.
.SH "BUG REPORTS"
Reports of bugs or problems should be submitted via electronic
mail to <CAD@ARL.ARMY.MIL>.
